// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _color_convert_HH_
#define _color_convert_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "color_convert_macbkb.h"
#include "color_convert_maccud.h"
#include "color_convert_AXILiteS_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_AXILITES_ADDR_WIDTH = 7,
         unsigned int C_S_AXI_AXILITES_DATA_WIDTH = 32>
struct color_convert : public sc_module {
    // Port declarations 31
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<24> > stream_in_24_TDATA;
    sc_in< sc_logic > stream_in_24_TVALID;
    sc_out< sc_logic > stream_in_24_TREADY;
    sc_in< sc_lv<1> > stream_in_24_TUSER;
    sc_in< sc_lv<1> > stream_in_24_TLAST;
    sc_out< sc_lv<24> > stream_out_24_TDATA;
    sc_out< sc_logic > stream_out_24_TVALID;
    sc_in< sc_logic > stream_out_24_TREADY;
    sc_out< sc_lv<1> > stream_out_24_TUSER;
    sc_out< sc_lv<1> > stream_out_24_TLAST;
    sc_in< sc_logic > s_axi_AXILiteS_AWVALID;
    sc_out< sc_logic > s_axi_AXILiteS_AWREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_AWADDR;
    sc_in< sc_logic > s_axi_AXILiteS_WVALID;
    sc_out< sc_logic > s_axi_AXILiteS_WREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_WDATA;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH/8> > s_axi_AXILiteS_WSTRB;
    sc_in< sc_logic > s_axi_AXILiteS_ARVALID;
    sc_out< sc_logic > s_axi_AXILiteS_ARREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_ARADDR;
    sc_out< sc_logic > s_axi_AXILiteS_RVALID;
    sc_in< sc_logic > s_axi_AXILiteS_RREADY;
    sc_out< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_RDATA;
    sc_out< sc_lv<2> > s_axi_AXILiteS_RRESP;
    sc_out< sc_logic > s_axi_AXILiteS_BVALID;
    sc_in< sc_logic > s_axi_AXILiteS_BREADY;
    sc_out< sc_lv<2> > s_axi_AXILiteS_BRESP;
    sc_in_clk control;
    sc_in< sc_logic > ap_rst_n_control;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    color_convert(sc_module_name name);
    SC_HAS_PROCESS(color_convert);

    ~color_convert();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    color_convert_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>* color_convert_AXILiteS_s_axi_U;
    color_convert_macbkb<1,1,8,10,18,19>* color_convert_macbkb_U1;
    color_convert_macbkb<1,1,8,10,18,19>* color_convert_macbkb_U2;
    color_convert_macbkb<1,1,8,10,18,19>* color_convert_macbkb_U3;
    color_convert_maccud<1,1,8,10,19,20>* color_convert_maccud_U4;
    color_convert_maccud<1,1,8,10,19,20>* color_convert_maccud_U5;
    color_convert_maccud<1,1,8,10,19,20>* color_convert_maccud_U6;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<24> > stream_in_24_data_0_data_out;
    sc_signal< sc_logic > stream_in_24_data_0_vld_in;
    sc_signal< sc_logic > stream_in_24_data_0_vld_out;
    sc_signal< sc_logic > stream_in_24_data_0_ack_in;
    sc_signal< sc_logic > stream_in_24_data_0_ack_out;
    sc_signal< sc_lv<24> > stream_in_24_data_0_payload_A;
    sc_signal< sc_lv<24> > stream_in_24_data_0_payload_B;
    sc_signal< sc_logic > stream_in_24_data_0_sel_rd;
    sc_signal< sc_logic > stream_in_24_data_0_sel_wr;
    sc_signal< sc_logic > stream_in_24_data_0_sel;
    sc_signal< sc_logic > stream_in_24_data_0_load_A;
    sc_signal< sc_logic > stream_in_24_data_0_load_B;
    sc_signal< sc_lv<2> > stream_in_24_data_0_state;
    sc_signal< sc_logic > stream_in_24_data_0_state_cmp_full;
    sc_signal< sc_lv<1> > stream_in_24_user_V_0_data_out;
    sc_signal< sc_logic > stream_in_24_user_V_0_vld_in;
    sc_signal< sc_logic > stream_in_24_user_V_0_vld_out;
    sc_signal< sc_logic > stream_in_24_user_V_0_ack_in;
    sc_signal< sc_logic > stream_in_24_user_V_0_ack_out;
    sc_signal< sc_lv<1> > stream_in_24_user_V_0_payload_A;
    sc_signal< sc_lv<1> > stream_in_24_user_V_0_payload_B;
    sc_signal< sc_logic > stream_in_24_user_V_0_sel_rd;
    sc_signal< sc_logic > stream_in_24_user_V_0_sel_wr;
    sc_signal< sc_logic > stream_in_24_user_V_0_sel;
    sc_signal< sc_logic > stream_in_24_user_V_0_load_A;
    sc_signal< sc_logic > stream_in_24_user_V_0_load_B;
    sc_signal< sc_lv<2> > stream_in_24_user_V_0_state;
    sc_signal< sc_logic > stream_in_24_user_V_0_state_cmp_full;
    sc_signal< sc_lv<1> > stream_in_24_last_V_0_data_out;
    sc_signal< sc_logic > stream_in_24_last_V_0_vld_in;
    sc_signal< sc_logic > stream_in_24_last_V_0_vld_out;
    sc_signal< sc_logic > stream_in_24_last_V_0_ack_in;
    sc_signal< sc_logic > stream_in_24_last_V_0_ack_out;
    sc_signal< sc_lv<1> > stream_in_24_last_V_0_payload_A;
    sc_signal< sc_lv<1> > stream_in_24_last_V_0_payload_B;
    sc_signal< sc_logic > stream_in_24_last_V_0_sel_rd;
    sc_signal< sc_logic > stream_in_24_last_V_0_sel_wr;
    sc_signal< sc_logic > stream_in_24_last_V_0_sel;
    sc_signal< sc_logic > stream_in_24_last_V_0_load_A;
    sc_signal< sc_logic > stream_in_24_last_V_0_load_B;
    sc_signal< sc_lv<2> > stream_in_24_last_V_0_state;
    sc_signal< sc_logic > stream_in_24_last_V_0_state_cmp_full;
    sc_signal< sc_lv<24> > stream_out_24_data_1_data_out;
    sc_signal< sc_logic > stream_out_24_data_1_vld_in;
    sc_signal< sc_logic > stream_out_24_data_1_vld_out;
    sc_signal< sc_logic > stream_out_24_data_1_ack_in;
    sc_signal< sc_logic > stream_out_24_data_1_ack_out;
    sc_signal< sc_lv<24> > stream_out_24_data_1_payload_A;
    sc_signal< sc_lv<24> > stream_out_24_data_1_payload_B;
    sc_signal< sc_logic > stream_out_24_data_1_sel_rd;
    sc_signal< sc_logic > stream_out_24_data_1_sel_wr;
    sc_signal< sc_logic > stream_out_24_data_1_sel;
    sc_signal< sc_logic > stream_out_24_data_1_load_A;
    sc_signal< sc_logic > stream_out_24_data_1_load_B;
    sc_signal< sc_lv<2> > stream_out_24_data_1_state;
    sc_signal< sc_logic > stream_out_24_data_1_state_cmp_full;
    sc_signal< sc_lv<1> > stream_out_24_user_V_1_data_out;
    sc_signal< sc_logic > stream_out_24_user_V_1_vld_in;
    sc_signal< sc_logic > stream_out_24_user_V_1_vld_out;
    sc_signal< sc_logic > stream_out_24_user_V_1_ack_in;
    sc_signal< sc_logic > stream_out_24_user_V_1_ack_out;
    sc_signal< sc_lv<1> > stream_out_24_user_V_1_payload_A;
    sc_signal< sc_lv<1> > stream_out_24_user_V_1_payload_B;
    sc_signal< sc_logic > stream_out_24_user_V_1_sel_rd;
    sc_signal< sc_logic > stream_out_24_user_V_1_sel_wr;
    sc_signal< sc_logic > stream_out_24_user_V_1_sel;
    sc_signal< sc_logic > stream_out_24_user_V_1_load_A;
    sc_signal< sc_logic > stream_out_24_user_V_1_load_B;
    sc_signal< sc_lv<2> > stream_out_24_user_V_1_state;
    sc_signal< sc_logic > stream_out_24_user_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > stream_out_24_last_V_1_data_out;
    sc_signal< sc_logic > stream_out_24_last_V_1_vld_in;
    sc_signal< sc_logic > stream_out_24_last_V_1_vld_out;
    sc_signal< sc_logic > stream_out_24_last_V_1_ack_in;
    sc_signal< sc_logic > stream_out_24_last_V_1_ack_out;
    sc_signal< sc_lv<1> > stream_out_24_last_V_1_payload_A;
    sc_signal< sc_lv<1> > stream_out_24_last_V_1_payload_B;
    sc_signal< sc_logic > stream_out_24_last_V_1_sel_rd;
    sc_signal< sc_logic > stream_out_24_last_V_1_sel_wr;
    sc_signal< sc_logic > stream_out_24_last_V_1_sel;
    sc_signal< sc_logic > stream_out_24_last_V_1_load_A;
    sc_signal< sc_logic > stream_out_24_last_V_1_load_B;
    sc_signal< sc_lv<2> > stream_out_24_last_V_1_state;
    sc_signal< sc_logic > stream_out_24_last_V_1_state_cmp_full;
    sc_signal< sc_lv<10> > c1_c1_V;
    sc_signal< sc_lv<10> > c1_c1_V_0_data_reg;
    sc_signal< sc_logic > c1_c1_V_0_vld_reg;
    sc_signal< sc_logic > c1_c1_V_0_ack_out;
    sc_signal< sc_lv<10> > c1_c2_V;
    sc_signal< sc_lv<10> > c1_c2_V_0_data_reg;
    sc_signal< sc_logic > c1_c2_V_0_vld_reg;
    sc_signal< sc_logic > c1_c2_V_0_ack_out;
    sc_signal< sc_lv<10> > c1_c3_V;
    sc_signal< sc_lv<10> > c1_c3_V_0_data_reg;
    sc_signal< sc_logic > c1_c3_V_0_vld_reg;
    sc_signal< sc_logic > c1_c3_V_0_ack_out;
    sc_signal< sc_lv<10> > c2_c1_V;
    sc_signal< sc_lv<10> > c2_c1_V_0_data_reg;
    sc_signal< sc_logic > c2_c1_V_0_vld_reg;
    sc_signal< sc_logic > c2_c1_V_0_ack_out;
    sc_signal< sc_lv<10> > c2_c2_V;
    sc_signal< sc_lv<10> > c2_c2_V_0_data_reg;
    sc_signal< sc_logic > c2_c2_V_0_vld_reg;
    sc_signal< sc_logic > c2_c2_V_0_ack_out;
    sc_signal< sc_lv<10> > c2_c3_V;
    sc_signal< sc_lv<10> > c2_c3_V_0_data_reg;
    sc_signal< sc_logic > c2_c3_V_0_vld_reg;
    sc_signal< sc_logic > c2_c3_V_0_ack_out;
    sc_signal< sc_lv<10> > c3_c1_V;
    sc_signal< sc_lv<10> > c3_c1_V_0_data_reg;
    sc_signal< sc_logic > c3_c1_V_0_vld_reg;
    sc_signal< sc_logic > c3_c1_V_0_ack_out;
    sc_signal< sc_lv<10> > c3_c2_V;
    sc_signal< sc_lv<10> > c3_c2_V_0_data_reg;
    sc_signal< sc_logic > c3_c2_V_0_vld_reg;
    sc_signal< sc_logic > c3_c2_V_0_ack_out;
    sc_signal< sc_lv<10> > c3_c3_V;
    sc_signal< sc_lv<10> > c3_c3_V_0_data_reg;
    sc_signal< sc_logic > c3_c3_V_0_vld_reg;
    sc_signal< sc_logic > c3_c3_V_0_ack_out;
    sc_signal< sc_lv<10> > bias_c1_V;
    sc_signal< sc_lv<10> > bias_c1_V_0_data_reg;
    sc_signal< sc_logic > bias_c1_V_0_vld_reg;
    sc_signal< sc_logic > bias_c1_V_0_ack_out;
    sc_signal< sc_lv<10> > bias_c2_V;
    sc_signal< sc_lv<10> > bias_c2_V_0_data_reg;
    sc_signal< sc_logic > bias_c2_V_0_vld_reg;
    sc_signal< sc_logic > bias_c2_V_0_ack_out;
    sc_signal< sc_lv<10> > bias_c3_V;
    sc_signal< sc_lv<10> > bias_c3_V_0_data_reg;
    sc_signal< sc_logic > bias_c3_V_0_vld_reg;
    sc_signal< sc_logic > bias_c3_V_0_ack_out;
    sc_signal< sc_logic > stream_in_24_TDATA_blk_n;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > stream_out_24_TDATA_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_rst_n_control_inv;
    sc_signal< sc_lv<10> > bias_c3_V_read_reg_924;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter4;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<10> > bias_c2_V_read_reg_929;
    sc_signal< sc_lv<10> > bias_c1_V_read_reg_934;
    sc_signal< sc_lv<10> > c3_c3_V_read_reg_939;
    sc_signal< sc_lv<10> > c2_c3_V_read_reg_944;
    sc_signal< sc_lv<10> > c1_c3_V_read_reg_949;
    sc_signal< sc_lv<1> > stream_in_24_user_V_s_reg_954;
    sc_signal< sc_lv<1> > stream_in_24_user_V_s_reg_954_pp0_iter2_reg;
    sc_signal< sc_lv<1> > stream_in_24_last_V_s_reg_959;
    sc_signal< sc_lv<1> > stream_in_24_last_V_s_reg_959_pp0_iter2_reg;
    sc_signal< sc_lv<8> > loc_V_2_reg_964;
    sc_signal< sc_lv<19> > grp_fu_870_p3;
    sc_signal< sc_lv<19> > p_Val2_2_reg_969;
    sc_signal< sc_lv<19> > grp_fu_878_p3;
    sc_signal< sc_lv<19> > p_Val2_11_reg_974;
    sc_signal< sc_lv<19> > grp_fu_886_p3;
    sc_signal< sc_lv<19> > p_Val2_19_reg_979;
    sc_signal< sc_lv<1> > signbit_fu_326_p3;
    sc_signal< sc_lv<1> > signbit_reg_984;
    sc_signal< sc_lv<8> > p_Val2_7_fu_363_p2;
    sc_signal< sc_lv<8> > p_Val2_7_reg_990;
    sc_signal< sc_lv<1> > p_38_i_fu_419_p2;
    sc_signal< sc_lv<1> > p_38_i_reg_996;
    sc_signal< sc_lv<1> > p_39_demorgan_i_fu_425_p2;
    sc_signal< sc_lv<1> > p_39_demorgan_i_reg_1002;
    sc_signal< sc_lv<1> > signbit_1_fu_453_p3;
    sc_signal< sc_lv<1> > signbit_1_reg_1008;
    sc_signal< sc_lv<8> > p_Val2_15_fu_490_p2;
    sc_signal< sc_lv<8> > p_Val2_15_reg_1014;
    sc_signal< sc_lv<1> > p_38_i1_fu_546_p2;
    sc_signal< sc_lv<1> > p_38_i1_reg_1020;
    sc_signal< sc_lv<1> > p_39_demorgan_i1_fu_552_p2;
    sc_signal< sc_lv<1> > p_39_demorgan_i1_reg_1026;
    sc_signal< sc_lv<1> > signbit_2_fu_580_p3;
    sc_signal< sc_lv<1> > signbit_2_reg_1032;
    sc_signal< sc_lv<8> > p_Val2_23_fu_617_p2;
    sc_signal< sc_lv<8> > p_Val2_23_reg_1038;
    sc_signal< sc_lv<1> > p_38_i2_fu_673_p2;
    sc_signal< sc_lv<1> > p_38_i2_reg_1044;
    sc_signal< sc_lv<1> > p_39_demorgan_i2_fu_679_p2;
    sc_signal< sc_lv<1> > p_39_demorgan_i2_reg_1050;
    sc_signal< sc_lv<24> > stream_out_24_data_t_fu_859_p4;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<8> > loc_V_fu_215_p1;
    sc_signal< sc_lv<8> > loc_V_1_fu_219_p4;
    sc_signal< sc_lv<8> > p_Val2_1_fu_255_p0;
    sc_signal< sc_lv<18> > OP1_V_1_fu_247_p1;
    sc_signal< sc_lv<10> > p_Val2_1_fu_255_p1;
    sc_signal< sc_lv<18> > p_Val2_1_fu_255_p2;
    sc_signal< sc_lv<8> > p_Val2_9_fu_273_p0;
    sc_signal< sc_lv<10> > p_Val2_9_fu_273_p1;
    sc_signal< sc_lv<18> > p_Val2_9_fu_273_p2;
    sc_signal< sc_lv<8> > p_Val2_16_fu_291_p0;
    sc_signal< sc_lv<10> > p_Val2_16_fu_291_p1;
    sc_signal< sc_lv<18> > p_Val2_16_fu_291_p2;
    sc_signal< sc_lv<18> > tmp_3_fu_310_p3;
    sc_signal< sc_lv<20> > grp_fu_894_p3;
    sc_signal< sc_lv<20> > tmp_3_cast_fu_317_p1;
    sc_signal< sc_lv<20> > p_Val2_5_fu_321_p2;
    sc_signal< sc_lv<1> > tmp_28_fu_344_p3;
    sc_signal< sc_lv<8> > tmp_7_fu_351_p1;
    sc_signal< sc_lv<8> > p_Val2_6_fu_334_p4;
    sc_signal< sc_lv<1> > tmp_30_fu_369_p3;
    sc_signal< sc_lv<1> > tmp_29_fu_355_p3;
    sc_signal< sc_lv<1> > tmp_5_fu_377_p2;
    sc_signal< sc_lv<4> > tmp_2_fu_389_p4;
    sc_signal< sc_lv<1> > carry_fu_383_p2;
    sc_signal< sc_lv<1> > Range1_all_ones_fu_399_p2;
    sc_signal< sc_lv<1> > Range1_all_zeros_fu_405_p2;
    sc_signal< sc_lv<1> > deleted_zeros_fu_411_p3;
    sc_signal< sc_lv<18> > tmp_12_fu_437_p3;
    sc_signal< sc_lv<20> > grp_fu_904_p3;
    sc_signal< sc_lv<20> > tmp_16_cast_fu_444_p1;
    sc_signal< sc_lv<20> > p_Val2_13_fu_448_p2;
    sc_signal< sc_lv<1> > tmp_32_fu_471_p3;
    sc_signal< sc_lv<8> > tmp_13_fu_478_p1;
    sc_signal< sc_lv<8> > p_Val2_14_fu_461_p4;
    sc_signal< sc_lv<1> > tmp_34_fu_496_p3;
    sc_signal< sc_lv<1> > tmp_33_fu_482_p3;
    sc_signal< sc_lv<1> > tmp_14_fu_504_p2;
    sc_signal< sc_lv<4> > tmp_15_fu_516_p4;
    sc_signal< sc_lv<1> > carry_1_fu_510_p2;
    sc_signal< sc_lv<1> > Range1_all_ones_1_fu_526_p2;
    sc_signal< sc_lv<1> > Range1_all_zeros_1_fu_532_p2;
    sc_signal< sc_lv<1> > deleted_zeros_1_fu_538_p3;
    sc_signal< sc_lv<18> > tmp_21_fu_564_p3;
    sc_signal< sc_lv<20> > grp_fu_914_p3;
    sc_signal< sc_lv<20> > tmp_27_cast_fu_571_p1;
    sc_signal< sc_lv<20> > p_Val2_21_fu_575_p2;
    sc_signal< sc_lv<1> > tmp_36_fu_598_p3;
    sc_signal< sc_lv<8> > tmp_22_fu_605_p1;
    sc_signal< sc_lv<8> > p_Val2_22_fu_588_p4;
    sc_signal< sc_lv<1> > tmp_38_fu_623_p3;
    sc_signal< sc_lv<1> > tmp_37_fu_609_p3;
    sc_signal< sc_lv<1> > tmp_23_fu_631_p2;
    sc_signal< sc_lv<4> > tmp_24_fu_643_p4;
    sc_signal< sc_lv<1> > carry_2_fu_637_p2;
    sc_signal< sc_lv<1> > Range1_all_ones_2_fu_653_p2;
    sc_signal< sc_lv<1> > Range1_all_zeros_2_fu_659_p2;
    sc_signal< sc_lv<1> > deleted_zeros_2_fu_665_p3;
    sc_signal< sc_lv<1> > tmp_8_fu_685_p2;
    sc_signal< sc_lv<1> > signbit_not_fu_695_p2;
    sc_signal< sc_lv<1> > neg_src_5_not_fu_700_p2;
    sc_signal< sc_lv<1> > p_39_demorgan_i_not_fu_710_p2;
    sc_signal< sc_lv<1> > brmerge_i_i_not_fu_705_p2;
    sc_signal< sc_lv<1> > neg_src_fu_690_p2;
    sc_signal< sc_lv<1> > brmerge_fu_715_p2;
    sc_signal< sc_lv<8> > p_mux_fu_721_p3;
    sc_signal< sc_lv<8> > p_s_fu_728_p3;
    sc_signal< sc_lv<1> > tmp_16_fu_743_p2;
    sc_signal< sc_lv<1> > signbit_1_not_fu_753_p2;
    sc_signal< sc_lv<1> > neg_src_not_fu_758_p2;
    sc_signal< sc_lv<1> > p_39_demorgan_i461_no_fu_768_p2;
    sc_signal< sc_lv<1> > brmerge_i_i463_not_fu_763_p2;
    sc_signal< sc_lv<1> > neg_src_6_fu_748_p2;
    sc_signal< sc_lv<1> > brmerge1_fu_773_p2;
    sc_signal< sc_lv<8> > p_mux1_fu_779_p3;
    sc_signal< sc_lv<8> > p_1_fu_786_p3;
    sc_signal< sc_lv<1> > tmp_25_fu_801_p2;
    sc_signal< sc_lv<1> > signbit_2_not_fu_811_p2;
    sc_signal< sc_lv<1> > neg_src_6_not_fu_816_p2;
    sc_signal< sc_lv<1> > p_39_demorgan_i482_no_fu_826_p2;
    sc_signal< sc_lv<1> > brmerge_i_i484_not_fu_821_p2;
    sc_signal< sc_lv<1> > neg_src_7_fu_806_p2;
    sc_signal< sc_lv<1> > brmerge2_fu_831_p2;
    sc_signal< sc_lv<8> > p_mux2_fu_837_p3;
    sc_signal< sc_lv<8> > p_2_fu_844_p3;
    sc_signal< sc_lv<8> > out3_V_fu_851_p3;
    sc_signal< sc_lv<8> > out2_V_fu_793_p3;
    sc_signal< sc_lv<8> > out1_V_fu_735_p3;
    sc_signal< sc_lv<8> > grp_fu_870_p0;
    sc_signal< sc_lv<18> > OP1_V_fu_239_p1;
    sc_signal< sc_lv<8> > grp_fu_878_p0;
    sc_signal< sc_lv<8> > grp_fu_886_p0;
    sc_signal< sc_lv<8> > grp_fu_894_p0;
    sc_signal< sc_lv<18> > OP1_V_2_fu_301_p1;
    sc_signal< sc_lv<8> > grp_fu_904_p0;
    sc_signal< sc_lv<8> > grp_fu_914_p0;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_0;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<8> ap_const_lv8_FF;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_OP1_V_1_fu_247_p1();
    void thread_OP1_V_2_fu_301_p1();
    void thread_OP1_V_fu_239_p1();
    void thread_Range1_all_ones_1_fu_526_p2();
    void thread_Range1_all_ones_2_fu_653_p2();
    void thread_Range1_all_ones_fu_399_p2();
    void thread_Range1_all_zeros_1_fu_532_p2();
    void thread_Range1_all_zeros_2_fu_659_p2();
    void thread_Range1_all_zeros_fu_405_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_block_state4_pp0_stage0_iter3();
    void thread_ap_block_state5_pp0_stage0_iter4();
    void thread_ap_enable_pp0();
    void thread_ap_idle_pp0();
    void thread_ap_reset_idle_pp0();
    void thread_ap_rst_n_control_inv();
    void thread_ap_rst_n_inv();
    void thread_bias_c1_V_0_ack_out();
    void thread_bias_c2_V_0_ack_out();
    void thread_bias_c3_V_0_ack_out();
    void thread_brmerge1_fu_773_p2();
    void thread_brmerge2_fu_831_p2();
    void thread_brmerge_fu_715_p2();
    void thread_brmerge_i_i463_not_fu_763_p2();
    void thread_brmerge_i_i484_not_fu_821_p2();
    void thread_brmerge_i_i_not_fu_705_p2();
    void thread_c1_c1_V_0_ack_out();
    void thread_c1_c2_V_0_ack_out();
    void thread_c1_c3_V_0_ack_out();
    void thread_c2_c1_V_0_ack_out();
    void thread_c2_c2_V_0_ack_out();
    void thread_c2_c3_V_0_ack_out();
    void thread_c3_c1_V_0_ack_out();
    void thread_c3_c2_V_0_ack_out();
    void thread_c3_c3_V_0_ack_out();
    void thread_carry_1_fu_510_p2();
    void thread_carry_2_fu_637_p2();
    void thread_carry_fu_383_p2();
    void thread_deleted_zeros_1_fu_538_p3();
    void thread_deleted_zeros_2_fu_665_p3();
    void thread_deleted_zeros_fu_411_p3();
    void thread_grp_fu_870_p0();
    void thread_grp_fu_878_p0();
    void thread_grp_fu_886_p0();
    void thread_grp_fu_894_p0();
    void thread_grp_fu_904_p0();
    void thread_grp_fu_914_p0();
    void thread_loc_V_1_fu_219_p4();
    void thread_loc_V_fu_215_p1();
    void thread_neg_src_5_not_fu_700_p2();
    void thread_neg_src_6_fu_748_p2();
    void thread_neg_src_6_not_fu_816_p2();
    void thread_neg_src_7_fu_806_p2();
    void thread_neg_src_fu_690_p2();
    void thread_neg_src_not_fu_758_p2();
    void thread_out1_V_fu_735_p3();
    void thread_out2_V_fu_793_p3();
    void thread_out3_V_fu_851_p3();
    void thread_p_1_fu_786_p3();
    void thread_p_2_fu_844_p3();
    void thread_p_38_i1_fu_546_p2();
    void thread_p_38_i2_fu_673_p2();
    void thread_p_38_i_fu_419_p2();
    void thread_p_39_demorgan_i1_fu_552_p2();
    void thread_p_39_demorgan_i2_fu_679_p2();
    void thread_p_39_demorgan_i461_no_fu_768_p2();
    void thread_p_39_demorgan_i482_no_fu_826_p2();
    void thread_p_39_demorgan_i_fu_425_p2();
    void thread_p_39_demorgan_i_not_fu_710_p2();
    void thread_p_Val2_13_fu_448_p2();
    void thread_p_Val2_14_fu_461_p4();
    void thread_p_Val2_15_fu_490_p2();
    void thread_p_Val2_16_fu_291_p0();
    void thread_p_Val2_16_fu_291_p1();
    void thread_p_Val2_16_fu_291_p2();
    void thread_p_Val2_1_fu_255_p0();
    void thread_p_Val2_1_fu_255_p1();
    void thread_p_Val2_1_fu_255_p2();
    void thread_p_Val2_21_fu_575_p2();
    void thread_p_Val2_22_fu_588_p4();
    void thread_p_Val2_23_fu_617_p2();
    void thread_p_Val2_5_fu_321_p2();
    void thread_p_Val2_6_fu_334_p4();
    void thread_p_Val2_7_fu_363_p2();
    void thread_p_Val2_9_fu_273_p0();
    void thread_p_Val2_9_fu_273_p1();
    void thread_p_Val2_9_fu_273_p2();
    void thread_p_mux1_fu_779_p3();
    void thread_p_mux2_fu_837_p3();
    void thread_p_mux_fu_721_p3();
    void thread_p_s_fu_728_p3();
    void thread_signbit_1_fu_453_p3();
    void thread_signbit_1_not_fu_753_p2();
    void thread_signbit_2_fu_580_p3();
    void thread_signbit_2_not_fu_811_p2();
    void thread_signbit_fu_326_p3();
    void thread_signbit_not_fu_695_p2();
    void thread_stream_in_24_TDATA_blk_n();
    void thread_stream_in_24_TREADY();
    void thread_stream_in_24_data_0_ack_in();
    void thread_stream_in_24_data_0_ack_out();
    void thread_stream_in_24_data_0_data_out();
    void thread_stream_in_24_data_0_load_A();
    void thread_stream_in_24_data_0_load_B();
    void thread_stream_in_24_data_0_sel();
    void thread_stream_in_24_data_0_state_cmp_full();
    void thread_stream_in_24_data_0_vld_in();
    void thread_stream_in_24_data_0_vld_out();
    void thread_stream_in_24_last_V_0_ack_in();
    void thread_stream_in_24_last_V_0_ack_out();
    void thread_stream_in_24_last_V_0_data_out();
    void thread_stream_in_24_last_V_0_load_A();
    void thread_stream_in_24_last_V_0_load_B();
    void thread_stream_in_24_last_V_0_sel();
    void thread_stream_in_24_last_V_0_state_cmp_full();
    void thread_stream_in_24_last_V_0_vld_in();
    void thread_stream_in_24_last_V_0_vld_out();
    void thread_stream_in_24_user_V_0_ack_in();
    void thread_stream_in_24_user_V_0_ack_out();
    void thread_stream_in_24_user_V_0_data_out();
    void thread_stream_in_24_user_V_0_load_A();
    void thread_stream_in_24_user_V_0_load_B();
    void thread_stream_in_24_user_V_0_sel();
    void thread_stream_in_24_user_V_0_state_cmp_full();
    void thread_stream_in_24_user_V_0_vld_in();
    void thread_stream_in_24_user_V_0_vld_out();
    void thread_stream_out_24_TDATA();
    void thread_stream_out_24_TDATA_blk_n();
    void thread_stream_out_24_TLAST();
    void thread_stream_out_24_TUSER();
    void thread_stream_out_24_TVALID();
    void thread_stream_out_24_data_1_ack_in();
    void thread_stream_out_24_data_1_ack_out();
    void thread_stream_out_24_data_1_data_out();
    void thread_stream_out_24_data_1_load_A();
    void thread_stream_out_24_data_1_load_B();
    void thread_stream_out_24_data_1_sel();
    void thread_stream_out_24_data_1_state_cmp_full();
    void thread_stream_out_24_data_1_vld_in();
    void thread_stream_out_24_data_1_vld_out();
    void thread_stream_out_24_data_t_fu_859_p4();
    void thread_stream_out_24_last_V_1_ack_in();
    void thread_stream_out_24_last_V_1_ack_out();
    void thread_stream_out_24_last_V_1_data_out();
    void thread_stream_out_24_last_V_1_load_A();
    void thread_stream_out_24_last_V_1_load_B();
    void thread_stream_out_24_last_V_1_sel();
    void thread_stream_out_24_last_V_1_state_cmp_full();
    void thread_stream_out_24_last_V_1_vld_in();
    void thread_stream_out_24_last_V_1_vld_out();
    void thread_stream_out_24_user_V_1_ack_in();
    void thread_stream_out_24_user_V_1_ack_out();
    void thread_stream_out_24_user_V_1_data_out();
    void thread_stream_out_24_user_V_1_load_A();
    void thread_stream_out_24_user_V_1_load_B();
    void thread_stream_out_24_user_V_1_sel();
    void thread_stream_out_24_user_V_1_state_cmp_full();
    void thread_stream_out_24_user_V_1_vld_in();
    void thread_stream_out_24_user_V_1_vld_out();
    void thread_tmp_12_fu_437_p3();
    void thread_tmp_13_fu_478_p1();
    void thread_tmp_14_fu_504_p2();
    void thread_tmp_15_fu_516_p4();
    void thread_tmp_16_cast_fu_444_p1();
    void thread_tmp_16_fu_743_p2();
    void thread_tmp_21_fu_564_p3();
    void thread_tmp_22_fu_605_p1();
    void thread_tmp_23_fu_631_p2();
    void thread_tmp_24_fu_643_p4();
    void thread_tmp_25_fu_801_p2();
    void thread_tmp_27_cast_fu_571_p1();
    void thread_tmp_28_fu_344_p3();
    void thread_tmp_29_fu_355_p3();
    void thread_tmp_2_fu_389_p4();
    void thread_tmp_30_fu_369_p3();
    void thread_tmp_32_fu_471_p3();
    void thread_tmp_33_fu_482_p3();
    void thread_tmp_34_fu_496_p3();
    void thread_tmp_36_fu_598_p3();
    void thread_tmp_37_fu_609_p3();
    void thread_tmp_38_fu_623_p3();
    void thread_tmp_3_cast_fu_317_p1();
    void thread_tmp_3_fu_310_p3();
    void thread_tmp_5_fu_377_p2();
    void thread_tmp_7_fu_351_p1();
    void thread_tmp_8_fu_685_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
