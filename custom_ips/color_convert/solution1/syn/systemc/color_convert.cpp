// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "color_convert.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic color_convert::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic color_convert::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> color_convert::ap_ST_fsm_pp0_stage0 = "1";
const bool color_convert::ap_const_boolean_1 = true;
const sc_lv<1> color_convert::ap_const_lv1_0 = "0";
const sc_lv<1> color_convert::ap_const_lv1_1 = "1";
const sc_lv<2> color_convert::ap_const_lv2_0 = "00";
const sc_lv<2> color_convert::ap_const_lv2_2 = "10";
const sc_lv<2> color_convert::ap_const_lv2_3 = "11";
const sc_lv<2> color_convert::ap_const_lv2_1 = "1";
const sc_lv<32> color_convert::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool color_convert::ap_const_boolean_0 = false;
const int color_convert::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> color_convert::ap_const_lv32_8 = "1000";
const sc_lv<32> color_convert::ap_const_lv32_F = "1111";
const sc_lv<32> color_convert::ap_const_lv32_10 = "10000";
const sc_lv<32> color_convert::ap_const_lv32_17 = "10111";
const sc_lv<8> color_convert::ap_const_lv8_0 = "00000000";
const sc_lv<32> color_convert::ap_const_lv32_13 = "10011";
const sc_lv<32> color_convert::ap_const_lv32_7 = "111";
const sc_lv<4> color_convert::ap_const_lv4_F = "1111";
const sc_lv<4> color_convert::ap_const_lv4_0 = "0000";
const sc_lv<8> color_convert::ap_const_lv8_FF = "11111111";

color_convert::color_convert(sc_module_name name) : sc_module(name), mVcdFile(0) {
    color_convert_AXILiteS_s_axi_U = new color_convert_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("color_convert_AXILiteS_s_axi_U");
    color_convert_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    color_convert_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    color_convert_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    color_convert_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    color_convert_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    color_convert_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    color_convert_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    color_convert_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    color_convert_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    color_convert_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    color_convert_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    color_convert_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    color_convert_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    color_convert_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    color_convert_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    color_convert_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    color_convert_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    color_convert_AXILiteS_s_axi_U->ACLK(control);
    color_convert_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    color_convert_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    color_convert_AXILiteS_s_axi_U->c1_c1_V(c1_c1_V);
    color_convert_AXILiteS_s_axi_U->c1_c2_V(c1_c2_V);
    color_convert_AXILiteS_s_axi_U->c1_c3_V(c1_c3_V);
    color_convert_AXILiteS_s_axi_U->c2_c1_V(c2_c1_V);
    color_convert_AXILiteS_s_axi_U->c2_c2_V(c2_c2_V);
    color_convert_AXILiteS_s_axi_U->c2_c3_V(c2_c3_V);
    color_convert_AXILiteS_s_axi_U->c3_c1_V(c3_c1_V);
    color_convert_AXILiteS_s_axi_U->c3_c2_V(c3_c2_V);
    color_convert_AXILiteS_s_axi_U->c3_c3_V(c3_c3_V);
    color_convert_AXILiteS_s_axi_U->bias_c1_V(bias_c1_V);
    color_convert_AXILiteS_s_axi_U->bias_c2_V(bias_c2_V);
    color_convert_AXILiteS_s_axi_U->bias_c3_V(bias_c3_V);
    color_convert_AXILiteS_s_axi_U->clk(ap_clk);
    color_convert_AXILiteS_s_axi_U->rst(ap_rst_n_control_inv);
    color_convert_macbkb_U1 = new color_convert_macbkb<1,1,8,10,18,19>("color_convert_macbkb_U1");
    color_convert_macbkb_U1->din0(grp_fu_870_p0);
    color_convert_macbkb_U1->din1(c1_c1_V_0_data_reg);
    color_convert_macbkb_U1->din2(p_Val2_1_fu_255_p2);
    color_convert_macbkb_U1->dout(grp_fu_870_p3);
    color_convert_macbkb_U2 = new color_convert_macbkb<1,1,8,10,18,19>("color_convert_macbkb_U2");
    color_convert_macbkb_U2->din0(grp_fu_878_p0);
    color_convert_macbkb_U2->din1(c2_c1_V_0_data_reg);
    color_convert_macbkb_U2->din2(p_Val2_9_fu_273_p2);
    color_convert_macbkb_U2->dout(grp_fu_878_p3);
    color_convert_macbkb_U3 = new color_convert_macbkb<1,1,8,10,18,19>("color_convert_macbkb_U3");
    color_convert_macbkb_U3->din0(grp_fu_886_p0);
    color_convert_macbkb_U3->din1(c3_c1_V_0_data_reg);
    color_convert_macbkb_U3->din2(p_Val2_16_fu_291_p2);
    color_convert_macbkb_U3->dout(grp_fu_886_p3);
    color_convert_maccud_U4 = new color_convert_maccud<1,1,8,10,19,20>("color_convert_maccud_U4");
    color_convert_maccud_U4->din0(grp_fu_894_p0);
    color_convert_maccud_U4->din1(c1_c3_V_read_reg_949);
    color_convert_maccud_U4->din2(p_Val2_2_reg_969);
    color_convert_maccud_U4->dout(grp_fu_894_p3);
    color_convert_maccud_U5 = new color_convert_maccud<1,1,8,10,19,20>("color_convert_maccud_U5");
    color_convert_maccud_U5->din0(grp_fu_904_p0);
    color_convert_maccud_U5->din1(c2_c3_V_read_reg_944);
    color_convert_maccud_U5->din2(p_Val2_11_reg_974);
    color_convert_maccud_U5->dout(grp_fu_904_p3);
    color_convert_maccud_U6 = new color_convert_maccud<1,1,8,10,19,20>("color_convert_maccud_U6");
    color_convert_maccud_U6->din0(grp_fu_914_p0);
    color_convert_maccud_U6->din1(c3_c3_V_read_reg_939);
    color_convert_maccud_U6->din2(p_Val2_19_reg_979);
    color_convert_maccud_U6->dout(grp_fu_914_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_OP1_V_1_fu_247_p1);
    sensitive << ( loc_V_1_fu_219_p4 );

    SC_METHOD(thread_OP1_V_2_fu_301_p1);
    sensitive << ( loc_V_2_reg_964 );

    SC_METHOD(thread_OP1_V_fu_239_p1);
    sensitive << ( loc_V_fu_215_p1 );

    SC_METHOD(thread_Range1_all_ones_1_fu_526_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_15_fu_516_p4 );

    SC_METHOD(thread_Range1_all_ones_2_fu_653_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_24_fu_643_p4 );

    SC_METHOD(thread_Range1_all_ones_fu_399_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_2_fu_389_p4 );

    SC_METHOD(thread_Range1_all_zeros_1_fu_532_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_15_fu_516_p4 );

    SC_METHOD(thread_Range1_all_zeros_2_fu_659_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_24_fu_643_p4 );

    SC_METHOD(thread_Range1_all_zeros_fu_405_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_2_fu_389_p4 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( stream_in_24_data_0_vld_out );
    sensitive << ( stream_out_24_data_1_ack_in );
    sensitive << ( stream_out_24_user_V_1_ack_in );
    sensitive << ( stream_out_24_last_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter4 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( stream_in_24_data_0_vld_out );
    sensitive << ( stream_out_24_data_1_ack_in );
    sensitive << ( stream_out_24_user_V_1_ack_in );
    sensitive << ( stream_out_24_last_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( stream_in_24_data_0_vld_out );
    sensitive << ( stream_out_24_data_1_ack_in );
    sensitive << ( stream_out_24_user_V_1_ack_in );
    sensitive << ( stream_out_24_last_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);
    sensitive << ( stream_in_24_data_0_vld_out );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter4);
    sensitive << ( stream_out_24_data_1_ack_in );
    sensitive << ( stream_out_24_user_V_1_ack_in );
    sensitive << ( stream_out_24_last_V_1_ack_in );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_reset_idle_pp0);

    SC_METHOD(thread_ap_rst_n_control_inv);
    sensitive << ( ap_rst_n_control );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_bias_c1_V_0_ack_out);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_bias_c2_V_0_ack_out);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_bias_c3_V_0_ack_out);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_brmerge1_fu_773_p2);
    sensitive << ( neg_src_not_fu_758_p2 );
    sensitive << ( p_39_demorgan_i461_no_fu_768_p2 );

    SC_METHOD(thread_brmerge2_fu_831_p2);
    sensitive << ( neg_src_6_not_fu_816_p2 );
    sensitive << ( p_39_demorgan_i482_no_fu_826_p2 );

    SC_METHOD(thread_brmerge_fu_715_p2);
    sensitive << ( neg_src_5_not_fu_700_p2 );
    sensitive << ( p_39_demorgan_i_not_fu_710_p2 );

    SC_METHOD(thread_brmerge_i_i463_not_fu_763_p2);
    sensitive << ( p_39_demorgan_i1_reg_1026 );
    sensitive << ( neg_src_not_fu_758_p2 );

    SC_METHOD(thread_brmerge_i_i484_not_fu_821_p2);
    sensitive << ( p_39_demorgan_i2_reg_1050 );
    sensitive << ( neg_src_6_not_fu_816_p2 );

    SC_METHOD(thread_brmerge_i_i_not_fu_705_p2);
    sensitive << ( p_39_demorgan_i_reg_1002 );
    sensitive << ( neg_src_5_not_fu_700_p2 );

    SC_METHOD(thread_c1_c1_V_0_ack_out);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_c1_c2_V_0_ack_out);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_c1_c3_V_0_ack_out);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_c2_c1_V_0_ack_out);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_c2_c2_V_0_ack_out);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_c2_c3_V_0_ack_out);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_c3_c1_V_0_ack_out);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_c3_c2_V_0_ack_out);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_c3_c3_V_0_ack_out);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_carry_1_fu_510_p2);
    sensitive << ( tmp_33_fu_482_p3 );
    sensitive << ( tmp_14_fu_504_p2 );

    SC_METHOD(thread_carry_2_fu_637_p2);
    sensitive << ( tmp_37_fu_609_p3 );
    sensitive << ( tmp_23_fu_631_p2 );

    SC_METHOD(thread_carry_fu_383_p2);
    sensitive << ( tmp_29_fu_355_p3 );
    sensitive << ( tmp_5_fu_377_p2 );

    SC_METHOD(thread_deleted_zeros_1_fu_538_p3);
    sensitive << ( carry_1_fu_510_p2 );
    sensitive << ( Range1_all_ones_1_fu_526_p2 );
    sensitive << ( Range1_all_zeros_1_fu_532_p2 );

    SC_METHOD(thread_deleted_zeros_2_fu_665_p3);
    sensitive << ( carry_2_fu_637_p2 );
    sensitive << ( Range1_all_ones_2_fu_653_p2 );
    sensitive << ( Range1_all_zeros_2_fu_659_p2 );

    SC_METHOD(thread_deleted_zeros_fu_411_p3);
    sensitive << ( carry_fu_383_p2 );
    sensitive << ( Range1_all_ones_fu_399_p2 );
    sensitive << ( Range1_all_zeros_fu_405_p2 );

    SC_METHOD(thread_grp_fu_870_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( OP1_V_fu_239_p1 );

    SC_METHOD(thread_grp_fu_878_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( OP1_V_fu_239_p1 );

    SC_METHOD(thread_grp_fu_886_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( OP1_V_fu_239_p1 );

    SC_METHOD(thread_grp_fu_894_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( OP1_V_2_fu_301_p1 );

    SC_METHOD(thread_grp_fu_904_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( OP1_V_2_fu_301_p1 );

    SC_METHOD(thread_grp_fu_914_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( OP1_V_2_fu_301_p1 );

    SC_METHOD(thread_loc_V_1_fu_219_p4);
    sensitive << ( stream_in_24_data_0_data_out );

    SC_METHOD(thread_loc_V_fu_215_p1);
    sensitive << ( stream_in_24_data_0_data_out );

    SC_METHOD(thread_neg_src_5_not_fu_700_p2);
    sensitive << ( p_38_i_reg_996 );
    sensitive << ( signbit_not_fu_695_p2 );

    SC_METHOD(thread_neg_src_6_fu_748_p2);
    sensitive << ( signbit_1_reg_1008 );
    sensitive << ( tmp_16_fu_743_p2 );

    SC_METHOD(thread_neg_src_6_not_fu_816_p2);
    sensitive << ( p_38_i2_reg_1044 );
    sensitive << ( signbit_2_not_fu_811_p2 );

    SC_METHOD(thread_neg_src_7_fu_806_p2);
    sensitive << ( signbit_2_reg_1032 );
    sensitive << ( tmp_25_fu_801_p2 );

    SC_METHOD(thread_neg_src_fu_690_p2);
    sensitive << ( signbit_reg_984 );
    sensitive << ( tmp_8_fu_685_p2 );

    SC_METHOD(thread_neg_src_not_fu_758_p2);
    sensitive << ( p_38_i1_reg_1020 );
    sensitive << ( signbit_1_not_fu_753_p2 );

    SC_METHOD(thread_out1_V_fu_735_p3);
    sensitive << ( brmerge_fu_715_p2 );
    sensitive << ( p_mux_fu_721_p3 );
    sensitive << ( p_s_fu_728_p3 );

    SC_METHOD(thread_out2_V_fu_793_p3);
    sensitive << ( brmerge1_fu_773_p2 );
    sensitive << ( p_mux1_fu_779_p3 );
    sensitive << ( p_1_fu_786_p3 );

    SC_METHOD(thread_out3_V_fu_851_p3);
    sensitive << ( brmerge2_fu_831_p2 );
    sensitive << ( p_mux2_fu_837_p3 );
    sensitive << ( p_2_fu_844_p3 );

    SC_METHOD(thread_p_1_fu_786_p3);
    sensitive << ( p_Val2_15_reg_1014 );
    sensitive << ( neg_src_6_fu_748_p2 );

    SC_METHOD(thread_p_2_fu_844_p3);
    sensitive << ( p_Val2_23_reg_1038 );
    sensitive << ( neg_src_7_fu_806_p2 );

    SC_METHOD(thread_p_38_i1_fu_546_p2);
    sensitive << ( carry_1_fu_510_p2 );
    sensitive << ( Range1_all_ones_1_fu_526_p2 );

    SC_METHOD(thread_p_38_i2_fu_673_p2);
    sensitive << ( carry_2_fu_637_p2 );
    sensitive << ( Range1_all_ones_2_fu_653_p2 );

    SC_METHOD(thread_p_38_i_fu_419_p2);
    sensitive << ( carry_fu_383_p2 );
    sensitive << ( Range1_all_ones_fu_399_p2 );

    SC_METHOD(thread_p_39_demorgan_i1_fu_552_p2);
    sensitive << ( signbit_1_fu_453_p3 );
    sensitive << ( deleted_zeros_1_fu_538_p3 );

    SC_METHOD(thread_p_39_demorgan_i2_fu_679_p2);
    sensitive << ( signbit_2_fu_580_p3 );
    sensitive << ( deleted_zeros_2_fu_665_p3 );

    SC_METHOD(thread_p_39_demorgan_i461_no_fu_768_p2);
    sensitive << ( p_39_demorgan_i1_reg_1026 );

    SC_METHOD(thread_p_39_demorgan_i482_no_fu_826_p2);
    sensitive << ( p_39_demorgan_i2_reg_1050 );

    SC_METHOD(thread_p_39_demorgan_i_fu_425_p2);
    sensitive << ( signbit_fu_326_p3 );
    sensitive << ( deleted_zeros_fu_411_p3 );

    SC_METHOD(thread_p_39_demorgan_i_not_fu_710_p2);
    sensitive << ( p_39_demorgan_i_reg_1002 );

    SC_METHOD(thread_p_Val2_13_fu_448_p2);
    sensitive << ( grp_fu_904_p3 );
    sensitive << ( tmp_16_cast_fu_444_p1 );

    SC_METHOD(thread_p_Val2_14_fu_461_p4);
    sensitive << ( p_Val2_13_fu_448_p2 );

    SC_METHOD(thread_p_Val2_15_fu_490_p2);
    sensitive << ( tmp_13_fu_478_p1 );
    sensitive << ( p_Val2_14_fu_461_p4 );

    SC_METHOD(thread_p_Val2_16_fu_291_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( OP1_V_1_fu_247_p1 );

    SC_METHOD(thread_p_Val2_16_fu_291_p1);
    sensitive << ( c3_c2_V_0_data_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_p_Val2_16_fu_291_p2);
    sensitive << ( p_Val2_16_fu_291_p0 );
    sensitive << ( p_Val2_16_fu_291_p1 );

    SC_METHOD(thread_p_Val2_1_fu_255_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( OP1_V_1_fu_247_p1 );

    SC_METHOD(thread_p_Val2_1_fu_255_p1);
    sensitive << ( c1_c2_V_0_data_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_p_Val2_1_fu_255_p2);
    sensitive << ( p_Val2_1_fu_255_p0 );
    sensitive << ( p_Val2_1_fu_255_p1 );

    SC_METHOD(thread_p_Val2_21_fu_575_p2);
    sensitive << ( grp_fu_914_p3 );
    sensitive << ( tmp_27_cast_fu_571_p1 );

    SC_METHOD(thread_p_Val2_22_fu_588_p4);
    sensitive << ( p_Val2_21_fu_575_p2 );

    SC_METHOD(thread_p_Val2_23_fu_617_p2);
    sensitive << ( tmp_22_fu_605_p1 );
    sensitive << ( p_Val2_22_fu_588_p4 );

    SC_METHOD(thread_p_Val2_5_fu_321_p2);
    sensitive << ( grp_fu_894_p3 );
    sensitive << ( tmp_3_cast_fu_317_p1 );

    SC_METHOD(thread_p_Val2_6_fu_334_p4);
    sensitive << ( p_Val2_5_fu_321_p2 );

    SC_METHOD(thread_p_Val2_7_fu_363_p2);
    sensitive << ( tmp_7_fu_351_p1 );
    sensitive << ( p_Val2_6_fu_334_p4 );

    SC_METHOD(thread_p_Val2_9_fu_273_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( OP1_V_1_fu_247_p1 );

    SC_METHOD(thread_p_Val2_9_fu_273_p1);
    sensitive << ( c2_c2_V_0_data_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_p_Val2_9_fu_273_p2);
    sensitive << ( p_Val2_9_fu_273_p0 );
    sensitive << ( p_Val2_9_fu_273_p1 );

    SC_METHOD(thread_p_mux1_fu_779_p3);
    sensitive << ( p_Val2_15_reg_1014 );
    sensitive << ( brmerge_i_i463_not_fu_763_p2 );

    SC_METHOD(thread_p_mux2_fu_837_p3);
    sensitive << ( p_Val2_23_reg_1038 );
    sensitive << ( brmerge_i_i484_not_fu_821_p2 );

    SC_METHOD(thread_p_mux_fu_721_p3);
    sensitive << ( p_Val2_7_reg_990 );
    sensitive << ( brmerge_i_i_not_fu_705_p2 );

    SC_METHOD(thread_p_s_fu_728_p3);
    sensitive << ( p_Val2_7_reg_990 );
    sensitive << ( neg_src_fu_690_p2 );

    SC_METHOD(thread_signbit_1_fu_453_p3);
    sensitive << ( p_Val2_13_fu_448_p2 );

    SC_METHOD(thread_signbit_1_not_fu_753_p2);
    sensitive << ( signbit_1_reg_1008 );

    SC_METHOD(thread_signbit_2_fu_580_p3);
    sensitive << ( p_Val2_21_fu_575_p2 );

    SC_METHOD(thread_signbit_2_not_fu_811_p2);
    sensitive << ( signbit_2_reg_1032 );

    SC_METHOD(thread_signbit_fu_326_p3);
    sensitive << ( p_Val2_5_fu_321_p2 );

    SC_METHOD(thread_signbit_not_fu_695_p2);
    sensitive << ( signbit_reg_984 );

    SC_METHOD(thread_stream_in_24_TDATA_blk_n);
    sensitive << ( stream_in_24_data_0_state );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_stream_in_24_TREADY);
    sensitive << ( stream_in_24_last_V_0_state );

    SC_METHOD(thread_stream_in_24_data_0_ack_in);
    sensitive << ( stream_in_24_data_0_state );

    SC_METHOD(thread_stream_in_24_data_0_ack_out);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_stream_in_24_data_0_data_out);
    sensitive << ( stream_in_24_data_0_payload_A );
    sensitive << ( stream_in_24_data_0_payload_B );
    sensitive << ( stream_in_24_data_0_sel );

    SC_METHOD(thread_stream_in_24_data_0_load_A);
    sensitive << ( stream_in_24_data_0_sel_wr );
    sensitive << ( stream_in_24_data_0_state_cmp_full );

    SC_METHOD(thread_stream_in_24_data_0_load_B);
    sensitive << ( stream_in_24_data_0_sel_wr );
    sensitive << ( stream_in_24_data_0_state_cmp_full );

    SC_METHOD(thread_stream_in_24_data_0_sel);
    sensitive << ( stream_in_24_data_0_sel_rd );

    SC_METHOD(thread_stream_in_24_data_0_state_cmp_full);
    sensitive << ( stream_in_24_data_0_state );

    SC_METHOD(thread_stream_in_24_data_0_vld_in);
    sensitive << ( stream_in_24_TVALID );

    SC_METHOD(thread_stream_in_24_data_0_vld_out);
    sensitive << ( stream_in_24_data_0_state );

    SC_METHOD(thread_stream_in_24_last_V_0_ack_in);
    sensitive << ( stream_in_24_last_V_0_state );

    SC_METHOD(thread_stream_in_24_last_V_0_ack_out);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_stream_in_24_last_V_0_data_out);
    sensitive << ( stream_in_24_last_V_0_payload_A );
    sensitive << ( stream_in_24_last_V_0_payload_B );
    sensitive << ( stream_in_24_last_V_0_sel );

    SC_METHOD(thread_stream_in_24_last_V_0_load_A);
    sensitive << ( stream_in_24_last_V_0_sel_wr );
    sensitive << ( stream_in_24_last_V_0_state_cmp_full );

    SC_METHOD(thread_stream_in_24_last_V_0_load_B);
    sensitive << ( stream_in_24_last_V_0_sel_wr );
    sensitive << ( stream_in_24_last_V_0_state_cmp_full );

    SC_METHOD(thread_stream_in_24_last_V_0_sel);
    sensitive << ( stream_in_24_last_V_0_sel_rd );

    SC_METHOD(thread_stream_in_24_last_V_0_state_cmp_full);
    sensitive << ( stream_in_24_last_V_0_state );

    SC_METHOD(thread_stream_in_24_last_V_0_vld_in);
    sensitive << ( stream_in_24_TVALID );

    SC_METHOD(thread_stream_in_24_last_V_0_vld_out);
    sensitive << ( stream_in_24_last_V_0_state );

    SC_METHOD(thread_stream_in_24_user_V_0_ack_in);
    sensitive << ( stream_in_24_user_V_0_state );

    SC_METHOD(thread_stream_in_24_user_V_0_ack_out);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_stream_in_24_user_V_0_data_out);
    sensitive << ( stream_in_24_user_V_0_payload_A );
    sensitive << ( stream_in_24_user_V_0_payload_B );
    sensitive << ( stream_in_24_user_V_0_sel );

    SC_METHOD(thread_stream_in_24_user_V_0_load_A);
    sensitive << ( stream_in_24_user_V_0_sel_wr );
    sensitive << ( stream_in_24_user_V_0_state_cmp_full );

    SC_METHOD(thread_stream_in_24_user_V_0_load_B);
    sensitive << ( stream_in_24_user_V_0_sel_wr );
    sensitive << ( stream_in_24_user_V_0_state_cmp_full );

    SC_METHOD(thread_stream_in_24_user_V_0_sel);
    sensitive << ( stream_in_24_user_V_0_sel_rd );

    SC_METHOD(thread_stream_in_24_user_V_0_state_cmp_full);
    sensitive << ( stream_in_24_user_V_0_state );

    SC_METHOD(thread_stream_in_24_user_V_0_vld_in);
    sensitive << ( stream_in_24_TVALID );

    SC_METHOD(thread_stream_in_24_user_V_0_vld_out);
    sensitive << ( stream_in_24_user_V_0_state );

    SC_METHOD(thread_stream_out_24_TDATA);
    sensitive << ( stream_out_24_data_1_data_out );

    SC_METHOD(thread_stream_out_24_TDATA_blk_n);
    sensitive << ( stream_out_24_data_1_state );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );

    SC_METHOD(thread_stream_out_24_TLAST);
    sensitive << ( stream_out_24_last_V_1_data_out );

    SC_METHOD(thread_stream_out_24_TUSER);
    sensitive << ( stream_out_24_user_V_1_data_out );

    SC_METHOD(thread_stream_out_24_TVALID);
    sensitive << ( stream_out_24_last_V_1_state );

    SC_METHOD(thread_stream_out_24_data_1_ack_in);
    sensitive << ( stream_out_24_data_1_state );

    SC_METHOD(thread_stream_out_24_data_1_ack_out);
    sensitive << ( stream_out_24_TREADY );

    SC_METHOD(thread_stream_out_24_data_1_data_out);
    sensitive << ( stream_out_24_data_1_payload_A );
    sensitive << ( stream_out_24_data_1_payload_B );
    sensitive << ( stream_out_24_data_1_sel );

    SC_METHOD(thread_stream_out_24_data_1_load_A);
    sensitive << ( stream_out_24_data_1_sel_wr );
    sensitive << ( stream_out_24_data_1_state_cmp_full );

    SC_METHOD(thread_stream_out_24_data_1_load_B);
    sensitive << ( stream_out_24_data_1_sel_wr );
    sensitive << ( stream_out_24_data_1_state_cmp_full );

    SC_METHOD(thread_stream_out_24_data_1_sel);
    sensitive << ( stream_out_24_data_1_sel_rd );

    SC_METHOD(thread_stream_out_24_data_1_state_cmp_full);
    sensitive << ( stream_out_24_data_1_state );

    SC_METHOD(thread_stream_out_24_data_1_vld_in);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_stream_out_24_data_1_vld_out);
    sensitive << ( stream_out_24_data_1_state );

    SC_METHOD(thread_stream_out_24_data_t_fu_859_p4);
    sensitive << ( out3_V_fu_851_p3 );
    sensitive << ( out2_V_fu_793_p3 );
    sensitive << ( out1_V_fu_735_p3 );

    SC_METHOD(thread_stream_out_24_last_V_1_ack_in);
    sensitive << ( stream_out_24_last_V_1_state );

    SC_METHOD(thread_stream_out_24_last_V_1_ack_out);
    sensitive << ( stream_out_24_TREADY );

    SC_METHOD(thread_stream_out_24_last_V_1_data_out);
    sensitive << ( stream_out_24_last_V_1_payload_A );
    sensitive << ( stream_out_24_last_V_1_payload_B );
    sensitive << ( stream_out_24_last_V_1_sel );

    SC_METHOD(thread_stream_out_24_last_V_1_load_A);
    sensitive << ( stream_out_24_last_V_1_sel_wr );
    sensitive << ( stream_out_24_last_V_1_state_cmp_full );

    SC_METHOD(thread_stream_out_24_last_V_1_load_B);
    sensitive << ( stream_out_24_last_V_1_sel_wr );
    sensitive << ( stream_out_24_last_V_1_state_cmp_full );

    SC_METHOD(thread_stream_out_24_last_V_1_sel);
    sensitive << ( stream_out_24_last_V_1_sel_rd );

    SC_METHOD(thread_stream_out_24_last_V_1_state_cmp_full);
    sensitive << ( stream_out_24_last_V_1_state );

    SC_METHOD(thread_stream_out_24_last_V_1_vld_in);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_stream_out_24_last_V_1_vld_out);
    sensitive << ( stream_out_24_last_V_1_state );

    SC_METHOD(thread_stream_out_24_user_V_1_ack_in);
    sensitive << ( stream_out_24_user_V_1_state );

    SC_METHOD(thread_stream_out_24_user_V_1_ack_out);
    sensitive << ( stream_out_24_TREADY );

    SC_METHOD(thread_stream_out_24_user_V_1_data_out);
    sensitive << ( stream_out_24_user_V_1_payload_A );
    sensitive << ( stream_out_24_user_V_1_payload_B );
    sensitive << ( stream_out_24_user_V_1_sel );

    SC_METHOD(thread_stream_out_24_user_V_1_load_A);
    sensitive << ( stream_out_24_user_V_1_sel_wr );
    sensitive << ( stream_out_24_user_V_1_state_cmp_full );

    SC_METHOD(thread_stream_out_24_user_V_1_load_B);
    sensitive << ( stream_out_24_user_V_1_sel_wr );
    sensitive << ( stream_out_24_user_V_1_state_cmp_full );

    SC_METHOD(thread_stream_out_24_user_V_1_sel);
    sensitive << ( stream_out_24_user_V_1_sel_rd );

    SC_METHOD(thread_stream_out_24_user_V_1_state_cmp_full);
    sensitive << ( stream_out_24_user_V_1_state );

    SC_METHOD(thread_stream_out_24_user_V_1_vld_in);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_stream_out_24_user_V_1_vld_out);
    sensitive << ( stream_out_24_user_V_1_state );

    SC_METHOD(thread_tmp_12_fu_437_p3);
    sensitive << ( bias_c2_V_read_reg_929 );

    SC_METHOD(thread_tmp_13_fu_478_p1);
    sensitive << ( tmp_32_fu_471_p3 );

    SC_METHOD(thread_tmp_14_fu_504_p2);
    sensitive << ( tmp_34_fu_496_p3 );

    SC_METHOD(thread_tmp_15_fu_516_p4);
    sensitive << ( p_Val2_13_fu_448_p2 );

    SC_METHOD(thread_tmp_16_cast_fu_444_p1);
    sensitive << ( tmp_12_fu_437_p3 );

    SC_METHOD(thread_tmp_16_fu_743_p2);
    sensitive << ( p_38_i1_reg_1020 );

    SC_METHOD(thread_tmp_21_fu_564_p3);
    sensitive << ( bias_c3_V_read_reg_924 );

    SC_METHOD(thread_tmp_22_fu_605_p1);
    sensitive << ( tmp_36_fu_598_p3 );

    SC_METHOD(thread_tmp_23_fu_631_p2);
    sensitive << ( tmp_38_fu_623_p3 );

    SC_METHOD(thread_tmp_24_fu_643_p4);
    sensitive << ( p_Val2_21_fu_575_p2 );

    SC_METHOD(thread_tmp_25_fu_801_p2);
    sensitive << ( p_38_i2_reg_1044 );

    SC_METHOD(thread_tmp_27_cast_fu_571_p1);
    sensitive << ( tmp_21_fu_564_p3 );

    SC_METHOD(thread_tmp_28_fu_344_p3);
    sensitive << ( grp_fu_894_p3 );

    SC_METHOD(thread_tmp_29_fu_355_p3);
    sensitive << ( p_Val2_5_fu_321_p2 );

    SC_METHOD(thread_tmp_2_fu_389_p4);
    sensitive << ( p_Val2_5_fu_321_p2 );

    SC_METHOD(thread_tmp_30_fu_369_p3);
    sensitive << ( p_Val2_7_fu_363_p2 );

    SC_METHOD(thread_tmp_32_fu_471_p3);
    sensitive << ( grp_fu_904_p3 );

    SC_METHOD(thread_tmp_33_fu_482_p3);
    sensitive << ( p_Val2_13_fu_448_p2 );

    SC_METHOD(thread_tmp_34_fu_496_p3);
    sensitive << ( p_Val2_15_fu_490_p2 );

    SC_METHOD(thread_tmp_36_fu_598_p3);
    sensitive << ( grp_fu_914_p3 );

    SC_METHOD(thread_tmp_37_fu_609_p3);
    sensitive << ( p_Val2_21_fu_575_p2 );

    SC_METHOD(thread_tmp_38_fu_623_p3);
    sensitive << ( p_Val2_23_fu_617_p2 );

    SC_METHOD(thread_tmp_3_cast_fu_317_p1);
    sensitive << ( tmp_3_fu_310_p3 );

    SC_METHOD(thread_tmp_3_fu_310_p3);
    sensitive << ( bias_c1_V_read_reg_934 );

    SC_METHOD(thread_tmp_5_fu_377_p2);
    sensitive << ( tmp_30_fu_369_p3 );

    SC_METHOD(thread_tmp_7_fu_351_p1);
    sensitive << ( tmp_28_fu_344_p3 );

    SC_METHOD(thread_tmp_8_fu_685_p2);
    sensitive << ( p_38_i_reg_996 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_reset_idle_pp0 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    stream_in_24_data_0_sel_rd = SC_LOGIC_0;
    stream_in_24_data_0_sel_wr = SC_LOGIC_0;
    stream_in_24_data_0_state = "00";
    stream_in_24_user_V_0_sel_rd = SC_LOGIC_0;
    stream_in_24_user_V_0_sel_wr = SC_LOGIC_0;
    stream_in_24_user_V_0_state = "00";
    stream_in_24_last_V_0_sel_rd = SC_LOGIC_0;
    stream_in_24_last_V_0_sel_wr = SC_LOGIC_0;
    stream_in_24_last_V_0_state = "00";
    stream_out_24_data_1_sel_rd = SC_LOGIC_0;
    stream_out_24_data_1_sel_wr = SC_LOGIC_0;
    stream_out_24_data_1_state = "00";
    stream_out_24_user_V_1_sel_rd = SC_LOGIC_0;
    stream_out_24_user_V_1_sel_wr = SC_LOGIC_0;
    stream_out_24_user_V_1_state = "00";
    stream_out_24_last_V_1_sel_rd = SC_LOGIC_0;
    stream_out_24_last_V_1_sel_wr = SC_LOGIC_0;
    stream_out_24_last_V_1_state = "00";
    c1_c1_V_0_data_reg = "0000000000";
    c1_c1_V_0_vld_reg = SC_LOGIC_0;
    c1_c2_V_0_data_reg = "0000000000";
    c1_c2_V_0_vld_reg = SC_LOGIC_0;
    c1_c3_V_0_data_reg = "0000000000";
    c1_c3_V_0_vld_reg = SC_LOGIC_0;
    c2_c1_V_0_data_reg = "0000000000";
    c2_c1_V_0_vld_reg = SC_LOGIC_0;
    c2_c2_V_0_data_reg = "0000000000";
    c2_c2_V_0_vld_reg = SC_LOGIC_0;
    c2_c3_V_0_data_reg = "0000000000";
    c2_c3_V_0_vld_reg = SC_LOGIC_0;
    c3_c1_V_0_data_reg = "0000000000";
    c3_c1_V_0_vld_reg = SC_LOGIC_0;
    c3_c2_V_0_data_reg = "0000000000";
    c3_c2_V_0_vld_reg = SC_LOGIC_0;
    c3_c3_V_0_data_reg = "0000000000";
    c3_c3_V_0_vld_reg = SC_LOGIC_0;
    bias_c1_V_0_data_reg = "0000000000";
    bias_c1_V_0_vld_reg = SC_LOGIC_0;
    bias_c2_V_0_data_reg = "0000000000";
    bias_c2_V_0_vld_reg = SC_LOGIC_0;
    bias_c3_V_0_data_reg = "0000000000";
    bias_c3_V_0_vld_reg = SC_LOGIC_0;
    ap_CS_fsm = "1";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "color_convert_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, stream_in_24_TDATA, "(port)stream_in_24_TDATA");
    sc_trace(mVcdFile, stream_in_24_TVALID, "(port)stream_in_24_TVALID");
    sc_trace(mVcdFile, stream_in_24_TREADY, "(port)stream_in_24_TREADY");
    sc_trace(mVcdFile, stream_in_24_TUSER, "(port)stream_in_24_TUSER");
    sc_trace(mVcdFile, stream_in_24_TLAST, "(port)stream_in_24_TLAST");
    sc_trace(mVcdFile, stream_out_24_TDATA, "(port)stream_out_24_TDATA");
    sc_trace(mVcdFile, stream_out_24_TVALID, "(port)stream_out_24_TVALID");
    sc_trace(mVcdFile, stream_out_24_TREADY, "(port)stream_out_24_TREADY");
    sc_trace(mVcdFile, stream_out_24_TUSER, "(port)stream_out_24_TUSER");
    sc_trace(mVcdFile, stream_out_24_TLAST, "(port)stream_out_24_TLAST");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, control, "(port)control");
    sc_trace(mVcdFile, ap_rst_n_control, "(port)ap_rst_n_control");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, stream_in_24_data_0_data_out, "stream_in_24_data_0_data_out");
    sc_trace(mVcdFile, stream_in_24_data_0_vld_in, "stream_in_24_data_0_vld_in");
    sc_trace(mVcdFile, stream_in_24_data_0_vld_out, "stream_in_24_data_0_vld_out");
    sc_trace(mVcdFile, stream_in_24_data_0_ack_in, "stream_in_24_data_0_ack_in");
    sc_trace(mVcdFile, stream_in_24_data_0_ack_out, "stream_in_24_data_0_ack_out");
    sc_trace(mVcdFile, stream_in_24_data_0_payload_A, "stream_in_24_data_0_payload_A");
    sc_trace(mVcdFile, stream_in_24_data_0_payload_B, "stream_in_24_data_0_payload_B");
    sc_trace(mVcdFile, stream_in_24_data_0_sel_rd, "stream_in_24_data_0_sel_rd");
    sc_trace(mVcdFile, stream_in_24_data_0_sel_wr, "stream_in_24_data_0_sel_wr");
    sc_trace(mVcdFile, stream_in_24_data_0_sel, "stream_in_24_data_0_sel");
    sc_trace(mVcdFile, stream_in_24_data_0_load_A, "stream_in_24_data_0_load_A");
    sc_trace(mVcdFile, stream_in_24_data_0_load_B, "stream_in_24_data_0_load_B");
    sc_trace(mVcdFile, stream_in_24_data_0_state, "stream_in_24_data_0_state");
    sc_trace(mVcdFile, stream_in_24_data_0_state_cmp_full, "stream_in_24_data_0_state_cmp_full");
    sc_trace(mVcdFile, stream_in_24_user_V_0_data_out, "stream_in_24_user_V_0_data_out");
    sc_trace(mVcdFile, stream_in_24_user_V_0_vld_in, "stream_in_24_user_V_0_vld_in");
    sc_trace(mVcdFile, stream_in_24_user_V_0_vld_out, "stream_in_24_user_V_0_vld_out");
    sc_trace(mVcdFile, stream_in_24_user_V_0_ack_in, "stream_in_24_user_V_0_ack_in");
    sc_trace(mVcdFile, stream_in_24_user_V_0_ack_out, "stream_in_24_user_V_0_ack_out");
    sc_trace(mVcdFile, stream_in_24_user_V_0_payload_A, "stream_in_24_user_V_0_payload_A");
    sc_trace(mVcdFile, stream_in_24_user_V_0_payload_B, "stream_in_24_user_V_0_payload_B");
    sc_trace(mVcdFile, stream_in_24_user_V_0_sel_rd, "stream_in_24_user_V_0_sel_rd");
    sc_trace(mVcdFile, stream_in_24_user_V_0_sel_wr, "stream_in_24_user_V_0_sel_wr");
    sc_trace(mVcdFile, stream_in_24_user_V_0_sel, "stream_in_24_user_V_0_sel");
    sc_trace(mVcdFile, stream_in_24_user_V_0_load_A, "stream_in_24_user_V_0_load_A");
    sc_trace(mVcdFile, stream_in_24_user_V_0_load_B, "stream_in_24_user_V_0_load_B");
    sc_trace(mVcdFile, stream_in_24_user_V_0_state, "stream_in_24_user_V_0_state");
    sc_trace(mVcdFile, stream_in_24_user_V_0_state_cmp_full, "stream_in_24_user_V_0_state_cmp_full");
    sc_trace(mVcdFile, stream_in_24_last_V_0_data_out, "stream_in_24_last_V_0_data_out");
    sc_trace(mVcdFile, stream_in_24_last_V_0_vld_in, "stream_in_24_last_V_0_vld_in");
    sc_trace(mVcdFile, stream_in_24_last_V_0_vld_out, "stream_in_24_last_V_0_vld_out");
    sc_trace(mVcdFile, stream_in_24_last_V_0_ack_in, "stream_in_24_last_V_0_ack_in");
    sc_trace(mVcdFile, stream_in_24_last_V_0_ack_out, "stream_in_24_last_V_0_ack_out");
    sc_trace(mVcdFile, stream_in_24_last_V_0_payload_A, "stream_in_24_last_V_0_payload_A");
    sc_trace(mVcdFile, stream_in_24_last_V_0_payload_B, "stream_in_24_last_V_0_payload_B");
    sc_trace(mVcdFile, stream_in_24_last_V_0_sel_rd, "stream_in_24_last_V_0_sel_rd");
    sc_trace(mVcdFile, stream_in_24_last_V_0_sel_wr, "stream_in_24_last_V_0_sel_wr");
    sc_trace(mVcdFile, stream_in_24_last_V_0_sel, "stream_in_24_last_V_0_sel");
    sc_trace(mVcdFile, stream_in_24_last_V_0_load_A, "stream_in_24_last_V_0_load_A");
    sc_trace(mVcdFile, stream_in_24_last_V_0_load_B, "stream_in_24_last_V_0_load_B");
    sc_trace(mVcdFile, stream_in_24_last_V_0_state, "stream_in_24_last_V_0_state");
    sc_trace(mVcdFile, stream_in_24_last_V_0_state_cmp_full, "stream_in_24_last_V_0_state_cmp_full");
    sc_trace(mVcdFile, stream_out_24_data_1_data_out, "stream_out_24_data_1_data_out");
    sc_trace(mVcdFile, stream_out_24_data_1_vld_in, "stream_out_24_data_1_vld_in");
    sc_trace(mVcdFile, stream_out_24_data_1_vld_out, "stream_out_24_data_1_vld_out");
    sc_trace(mVcdFile, stream_out_24_data_1_ack_in, "stream_out_24_data_1_ack_in");
    sc_trace(mVcdFile, stream_out_24_data_1_ack_out, "stream_out_24_data_1_ack_out");
    sc_trace(mVcdFile, stream_out_24_data_1_payload_A, "stream_out_24_data_1_payload_A");
    sc_trace(mVcdFile, stream_out_24_data_1_payload_B, "stream_out_24_data_1_payload_B");
    sc_trace(mVcdFile, stream_out_24_data_1_sel_rd, "stream_out_24_data_1_sel_rd");
    sc_trace(mVcdFile, stream_out_24_data_1_sel_wr, "stream_out_24_data_1_sel_wr");
    sc_trace(mVcdFile, stream_out_24_data_1_sel, "stream_out_24_data_1_sel");
    sc_trace(mVcdFile, stream_out_24_data_1_load_A, "stream_out_24_data_1_load_A");
    sc_trace(mVcdFile, stream_out_24_data_1_load_B, "stream_out_24_data_1_load_B");
    sc_trace(mVcdFile, stream_out_24_data_1_state, "stream_out_24_data_1_state");
    sc_trace(mVcdFile, stream_out_24_data_1_state_cmp_full, "stream_out_24_data_1_state_cmp_full");
    sc_trace(mVcdFile, stream_out_24_user_V_1_data_out, "stream_out_24_user_V_1_data_out");
    sc_trace(mVcdFile, stream_out_24_user_V_1_vld_in, "stream_out_24_user_V_1_vld_in");
    sc_trace(mVcdFile, stream_out_24_user_V_1_vld_out, "stream_out_24_user_V_1_vld_out");
    sc_trace(mVcdFile, stream_out_24_user_V_1_ack_in, "stream_out_24_user_V_1_ack_in");
    sc_trace(mVcdFile, stream_out_24_user_V_1_ack_out, "stream_out_24_user_V_1_ack_out");
    sc_trace(mVcdFile, stream_out_24_user_V_1_payload_A, "stream_out_24_user_V_1_payload_A");
    sc_trace(mVcdFile, stream_out_24_user_V_1_payload_B, "stream_out_24_user_V_1_payload_B");
    sc_trace(mVcdFile, stream_out_24_user_V_1_sel_rd, "stream_out_24_user_V_1_sel_rd");
    sc_trace(mVcdFile, stream_out_24_user_V_1_sel_wr, "stream_out_24_user_V_1_sel_wr");
    sc_trace(mVcdFile, stream_out_24_user_V_1_sel, "stream_out_24_user_V_1_sel");
    sc_trace(mVcdFile, stream_out_24_user_V_1_load_A, "stream_out_24_user_V_1_load_A");
    sc_trace(mVcdFile, stream_out_24_user_V_1_load_B, "stream_out_24_user_V_1_load_B");
    sc_trace(mVcdFile, stream_out_24_user_V_1_state, "stream_out_24_user_V_1_state");
    sc_trace(mVcdFile, stream_out_24_user_V_1_state_cmp_full, "stream_out_24_user_V_1_state_cmp_full");
    sc_trace(mVcdFile, stream_out_24_last_V_1_data_out, "stream_out_24_last_V_1_data_out");
    sc_trace(mVcdFile, stream_out_24_last_V_1_vld_in, "stream_out_24_last_V_1_vld_in");
    sc_trace(mVcdFile, stream_out_24_last_V_1_vld_out, "stream_out_24_last_V_1_vld_out");
    sc_trace(mVcdFile, stream_out_24_last_V_1_ack_in, "stream_out_24_last_V_1_ack_in");
    sc_trace(mVcdFile, stream_out_24_last_V_1_ack_out, "stream_out_24_last_V_1_ack_out");
    sc_trace(mVcdFile, stream_out_24_last_V_1_payload_A, "stream_out_24_last_V_1_payload_A");
    sc_trace(mVcdFile, stream_out_24_last_V_1_payload_B, "stream_out_24_last_V_1_payload_B");
    sc_trace(mVcdFile, stream_out_24_last_V_1_sel_rd, "stream_out_24_last_V_1_sel_rd");
    sc_trace(mVcdFile, stream_out_24_last_V_1_sel_wr, "stream_out_24_last_V_1_sel_wr");
    sc_trace(mVcdFile, stream_out_24_last_V_1_sel, "stream_out_24_last_V_1_sel");
    sc_trace(mVcdFile, stream_out_24_last_V_1_load_A, "stream_out_24_last_V_1_load_A");
    sc_trace(mVcdFile, stream_out_24_last_V_1_load_B, "stream_out_24_last_V_1_load_B");
    sc_trace(mVcdFile, stream_out_24_last_V_1_state, "stream_out_24_last_V_1_state");
    sc_trace(mVcdFile, stream_out_24_last_V_1_state_cmp_full, "stream_out_24_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, c1_c1_V, "c1_c1_V");
    sc_trace(mVcdFile, c1_c1_V_0_data_reg, "c1_c1_V_0_data_reg");
    sc_trace(mVcdFile, c1_c1_V_0_vld_reg, "c1_c1_V_0_vld_reg");
    sc_trace(mVcdFile, c1_c1_V_0_ack_out, "c1_c1_V_0_ack_out");
    sc_trace(mVcdFile, c1_c2_V, "c1_c2_V");
    sc_trace(mVcdFile, c1_c2_V_0_data_reg, "c1_c2_V_0_data_reg");
    sc_trace(mVcdFile, c1_c2_V_0_vld_reg, "c1_c2_V_0_vld_reg");
    sc_trace(mVcdFile, c1_c2_V_0_ack_out, "c1_c2_V_0_ack_out");
    sc_trace(mVcdFile, c1_c3_V, "c1_c3_V");
    sc_trace(mVcdFile, c1_c3_V_0_data_reg, "c1_c3_V_0_data_reg");
    sc_trace(mVcdFile, c1_c3_V_0_vld_reg, "c1_c3_V_0_vld_reg");
    sc_trace(mVcdFile, c1_c3_V_0_ack_out, "c1_c3_V_0_ack_out");
    sc_trace(mVcdFile, c2_c1_V, "c2_c1_V");
    sc_trace(mVcdFile, c2_c1_V_0_data_reg, "c2_c1_V_0_data_reg");
    sc_trace(mVcdFile, c2_c1_V_0_vld_reg, "c2_c1_V_0_vld_reg");
    sc_trace(mVcdFile, c2_c1_V_0_ack_out, "c2_c1_V_0_ack_out");
    sc_trace(mVcdFile, c2_c2_V, "c2_c2_V");
    sc_trace(mVcdFile, c2_c2_V_0_data_reg, "c2_c2_V_0_data_reg");
    sc_trace(mVcdFile, c2_c2_V_0_vld_reg, "c2_c2_V_0_vld_reg");
    sc_trace(mVcdFile, c2_c2_V_0_ack_out, "c2_c2_V_0_ack_out");
    sc_trace(mVcdFile, c2_c3_V, "c2_c3_V");
    sc_trace(mVcdFile, c2_c3_V_0_data_reg, "c2_c3_V_0_data_reg");
    sc_trace(mVcdFile, c2_c3_V_0_vld_reg, "c2_c3_V_0_vld_reg");
    sc_trace(mVcdFile, c2_c3_V_0_ack_out, "c2_c3_V_0_ack_out");
    sc_trace(mVcdFile, c3_c1_V, "c3_c1_V");
    sc_trace(mVcdFile, c3_c1_V_0_data_reg, "c3_c1_V_0_data_reg");
    sc_trace(mVcdFile, c3_c1_V_0_vld_reg, "c3_c1_V_0_vld_reg");
    sc_trace(mVcdFile, c3_c1_V_0_ack_out, "c3_c1_V_0_ack_out");
    sc_trace(mVcdFile, c3_c2_V, "c3_c2_V");
    sc_trace(mVcdFile, c3_c2_V_0_data_reg, "c3_c2_V_0_data_reg");
    sc_trace(mVcdFile, c3_c2_V_0_vld_reg, "c3_c2_V_0_vld_reg");
    sc_trace(mVcdFile, c3_c2_V_0_ack_out, "c3_c2_V_0_ack_out");
    sc_trace(mVcdFile, c3_c3_V, "c3_c3_V");
    sc_trace(mVcdFile, c3_c3_V_0_data_reg, "c3_c3_V_0_data_reg");
    sc_trace(mVcdFile, c3_c3_V_0_vld_reg, "c3_c3_V_0_vld_reg");
    sc_trace(mVcdFile, c3_c3_V_0_ack_out, "c3_c3_V_0_ack_out");
    sc_trace(mVcdFile, bias_c1_V, "bias_c1_V");
    sc_trace(mVcdFile, bias_c1_V_0_data_reg, "bias_c1_V_0_data_reg");
    sc_trace(mVcdFile, bias_c1_V_0_vld_reg, "bias_c1_V_0_vld_reg");
    sc_trace(mVcdFile, bias_c1_V_0_ack_out, "bias_c1_V_0_ack_out");
    sc_trace(mVcdFile, bias_c2_V, "bias_c2_V");
    sc_trace(mVcdFile, bias_c2_V_0_data_reg, "bias_c2_V_0_data_reg");
    sc_trace(mVcdFile, bias_c2_V_0_vld_reg, "bias_c2_V_0_vld_reg");
    sc_trace(mVcdFile, bias_c2_V_0_ack_out, "bias_c2_V_0_ack_out");
    sc_trace(mVcdFile, bias_c3_V, "bias_c3_V");
    sc_trace(mVcdFile, bias_c3_V_0_data_reg, "bias_c3_V_0_data_reg");
    sc_trace(mVcdFile, bias_c3_V_0_vld_reg, "bias_c3_V_0_vld_reg");
    sc_trace(mVcdFile, bias_c3_V_0_ack_out, "bias_c3_V_0_ack_out");
    sc_trace(mVcdFile, stream_in_24_TDATA_blk_n, "stream_in_24_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, stream_out_24_TDATA_blk_n, "stream_out_24_TDATA_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_rst_n_control_inv, "ap_rst_n_control_inv");
    sc_trace(mVcdFile, bias_c3_V_read_reg_924, "bias_c3_V_read_reg_924");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter2, "ap_block_state3_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter3, "ap_block_state4_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter4, "ap_block_state5_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, bias_c2_V_read_reg_929, "bias_c2_V_read_reg_929");
    sc_trace(mVcdFile, bias_c1_V_read_reg_934, "bias_c1_V_read_reg_934");
    sc_trace(mVcdFile, c3_c3_V_read_reg_939, "c3_c3_V_read_reg_939");
    sc_trace(mVcdFile, c2_c3_V_read_reg_944, "c2_c3_V_read_reg_944");
    sc_trace(mVcdFile, c1_c3_V_read_reg_949, "c1_c3_V_read_reg_949");
    sc_trace(mVcdFile, stream_in_24_user_V_s_reg_954, "stream_in_24_user_V_s_reg_954");
    sc_trace(mVcdFile, stream_in_24_user_V_s_reg_954_pp0_iter2_reg, "stream_in_24_user_V_s_reg_954_pp0_iter2_reg");
    sc_trace(mVcdFile, stream_in_24_last_V_s_reg_959, "stream_in_24_last_V_s_reg_959");
    sc_trace(mVcdFile, stream_in_24_last_V_s_reg_959_pp0_iter2_reg, "stream_in_24_last_V_s_reg_959_pp0_iter2_reg");
    sc_trace(mVcdFile, loc_V_2_reg_964, "loc_V_2_reg_964");
    sc_trace(mVcdFile, grp_fu_870_p3, "grp_fu_870_p3");
    sc_trace(mVcdFile, p_Val2_2_reg_969, "p_Val2_2_reg_969");
    sc_trace(mVcdFile, grp_fu_878_p3, "grp_fu_878_p3");
    sc_trace(mVcdFile, p_Val2_11_reg_974, "p_Val2_11_reg_974");
    sc_trace(mVcdFile, grp_fu_886_p3, "grp_fu_886_p3");
    sc_trace(mVcdFile, p_Val2_19_reg_979, "p_Val2_19_reg_979");
    sc_trace(mVcdFile, signbit_fu_326_p3, "signbit_fu_326_p3");
    sc_trace(mVcdFile, signbit_reg_984, "signbit_reg_984");
    sc_trace(mVcdFile, p_Val2_7_fu_363_p2, "p_Val2_7_fu_363_p2");
    sc_trace(mVcdFile, p_Val2_7_reg_990, "p_Val2_7_reg_990");
    sc_trace(mVcdFile, p_38_i_fu_419_p2, "p_38_i_fu_419_p2");
    sc_trace(mVcdFile, p_38_i_reg_996, "p_38_i_reg_996");
    sc_trace(mVcdFile, p_39_demorgan_i_fu_425_p2, "p_39_demorgan_i_fu_425_p2");
    sc_trace(mVcdFile, p_39_demorgan_i_reg_1002, "p_39_demorgan_i_reg_1002");
    sc_trace(mVcdFile, signbit_1_fu_453_p3, "signbit_1_fu_453_p3");
    sc_trace(mVcdFile, signbit_1_reg_1008, "signbit_1_reg_1008");
    sc_trace(mVcdFile, p_Val2_15_fu_490_p2, "p_Val2_15_fu_490_p2");
    sc_trace(mVcdFile, p_Val2_15_reg_1014, "p_Val2_15_reg_1014");
    sc_trace(mVcdFile, p_38_i1_fu_546_p2, "p_38_i1_fu_546_p2");
    sc_trace(mVcdFile, p_38_i1_reg_1020, "p_38_i1_reg_1020");
    sc_trace(mVcdFile, p_39_demorgan_i1_fu_552_p2, "p_39_demorgan_i1_fu_552_p2");
    sc_trace(mVcdFile, p_39_demorgan_i1_reg_1026, "p_39_demorgan_i1_reg_1026");
    sc_trace(mVcdFile, signbit_2_fu_580_p3, "signbit_2_fu_580_p3");
    sc_trace(mVcdFile, signbit_2_reg_1032, "signbit_2_reg_1032");
    sc_trace(mVcdFile, p_Val2_23_fu_617_p2, "p_Val2_23_fu_617_p2");
    sc_trace(mVcdFile, p_Val2_23_reg_1038, "p_Val2_23_reg_1038");
    sc_trace(mVcdFile, p_38_i2_fu_673_p2, "p_38_i2_fu_673_p2");
    sc_trace(mVcdFile, p_38_i2_reg_1044, "p_38_i2_reg_1044");
    sc_trace(mVcdFile, p_39_demorgan_i2_fu_679_p2, "p_39_demorgan_i2_fu_679_p2");
    sc_trace(mVcdFile, p_39_demorgan_i2_reg_1050, "p_39_demorgan_i2_reg_1050");
    sc_trace(mVcdFile, stream_out_24_data_t_fu_859_p4, "stream_out_24_data_t_fu_859_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, loc_V_fu_215_p1, "loc_V_fu_215_p1");
    sc_trace(mVcdFile, loc_V_1_fu_219_p4, "loc_V_1_fu_219_p4");
    sc_trace(mVcdFile, p_Val2_1_fu_255_p0, "p_Val2_1_fu_255_p0");
    sc_trace(mVcdFile, OP1_V_1_fu_247_p1, "OP1_V_1_fu_247_p1");
    sc_trace(mVcdFile, p_Val2_1_fu_255_p1, "p_Val2_1_fu_255_p1");
    sc_trace(mVcdFile, p_Val2_1_fu_255_p2, "p_Val2_1_fu_255_p2");
    sc_trace(mVcdFile, p_Val2_9_fu_273_p0, "p_Val2_9_fu_273_p0");
    sc_trace(mVcdFile, p_Val2_9_fu_273_p1, "p_Val2_9_fu_273_p1");
    sc_trace(mVcdFile, p_Val2_9_fu_273_p2, "p_Val2_9_fu_273_p2");
    sc_trace(mVcdFile, p_Val2_16_fu_291_p0, "p_Val2_16_fu_291_p0");
    sc_trace(mVcdFile, p_Val2_16_fu_291_p1, "p_Val2_16_fu_291_p1");
    sc_trace(mVcdFile, p_Val2_16_fu_291_p2, "p_Val2_16_fu_291_p2");
    sc_trace(mVcdFile, tmp_3_fu_310_p3, "tmp_3_fu_310_p3");
    sc_trace(mVcdFile, grp_fu_894_p3, "grp_fu_894_p3");
    sc_trace(mVcdFile, tmp_3_cast_fu_317_p1, "tmp_3_cast_fu_317_p1");
    sc_trace(mVcdFile, p_Val2_5_fu_321_p2, "p_Val2_5_fu_321_p2");
    sc_trace(mVcdFile, tmp_28_fu_344_p3, "tmp_28_fu_344_p3");
    sc_trace(mVcdFile, tmp_7_fu_351_p1, "tmp_7_fu_351_p1");
    sc_trace(mVcdFile, p_Val2_6_fu_334_p4, "p_Val2_6_fu_334_p4");
    sc_trace(mVcdFile, tmp_30_fu_369_p3, "tmp_30_fu_369_p3");
    sc_trace(mVcdFile, tmp_29_fu_355_p3, "tmp_29_fu_355_p3");
    sc_trace(mVcdFile, tmp_5_fu_377_p2, "tmp_5_fu_377_p2");
    sc_trace(mVcdFile, tmp_2_fu_389_p4, "tmp_2_fu_389_p4");
    sc_trace(mVcdFile, carry_fu_383_p2, "carry_fu_383_p2");
    sc_trace(mVcdFile, Range1_all_ones_fu_399_p2, "Range1_all_ones_fu_399_p2");
    sc_trace(mVcdFile, Range1_all_zeros_fu_405_p2, "Range1_all_zeros_fu_405_p2");
    sc_trace(mVcdFile, deleted_zeros_fu_411_p3, "deleted_zeros_fu_411_p3");
    sc_trace(mVcdFile, tmp_12_fu_437_p3, "tmp_12_fu_437_p3");
    sc_trace(mVcdFile, grp_fu_904_p3, "grp_fu_904_p3");
    sc_trace(mVcdFile, tmp_16_cast_fu_444_p1, "tmp_16_cast_fu_444_p1");
    sc_trace(mVcdFile, p_Val2_13_fu_448_p2, "p_Val2_13_fu_448_p2");
    sc_trace(mVcdFile, tmp_32_fu_471_p3, "tmp_32_fu_471_p3");
    sc_trace(mVcdFile, tmp_13_fu_478_p1, "tmp_13_fu_478_p1");
    sc_trace(mVcdFile, p_Val2_14_fu_461_p4, "p_Val2_14_fu_461_p4");
    sc_trace(mVcdFile, tmp_34_fu_496_p3, "tmp_34_fu_496_p3");
    sc_trace(mVcdFile, tmp_33_fu_482_p3, "tmp_33_fu_482_p3");
    sc_trace(mVcdFile, tmp_14_fu_504_p2, "tmp_14_fu_504_p2");
    sc_trace(mVcdFile, tmp_15_fu_516_p4, "tmp_15_fu_516_p4");
    sc_trace(mVcdFile, carry_1_fu_510_p2, "carry_1_fu_510_p2");
    sc_trace(mVcdFile, Range1_all_ones_1_fu_526_p2, "Range1_all_ones_1_fu_526_p2");
    sc_trace(mVcdFile, Range1_all_zeros_1_fu_532_p2, "Range1_all_zeros_1_fu_532_p2");
    sc_trace(mVcdFile, deleted_zeros_1_fu_538_p3, "deleted_zeros_1_fu_538_p3");
    sc_trace(mVcdFile, tmp_21_fu_564_p3, "tmp_21_fu_564_p3");
    sc_trace(mVcdFile, grp_fu_914_p3, "grp_fu_914_p3");
    sc_trace(mVcdFile, tmp_27_cast_fu_571_p1, "tmp_27_cast_fu_571_p1");
    sc_trace(mVcdFile, p_Val2_21_fu_575_p2, "p_Val2_21_fu_575_p2");
    sc_trace(mVcdFile, tmp_36_fu_598_p3, "tmp_36_fu_598_p3");
    sc_trace(mVcdFile, tmp_22_fu_605_p1, "tmp_22_fu_605_p1");
    sc_trace(mVcdFile, p_Val2_22_fu_588_p4, "p_Val2_22_fu_588_p4");
    sc_trace(mVcdFile, tmp_38_fu_623_p3, "tmp_38_fu_623_p3");
    sc_trace(mVcdFile, tmp_37_fu_609_p3, "tmp_37_fu_609_p3");
    sc_trace(mVcdFile, tmp_23_fu_631_p2, "tmp_23_fu_631_p2");
    sc_trace(mVcdFile, tmp_24_fu_643_p4, "tmp_24_fu_643_p4");
    sc_trace(mVcdFile, carry_2_fu_637_p2, "carry_2_fu_637_p2");
    sc_trace(mVcdFile, Range1_all_ones_2_fu_653_p2, "Range1_all_ones_2_fu_653_p2");
    sc_trace(mVcdFile, Range1_all_zeros_2_fu_659_p2, "Range1_all_zeros_2_fu_659_p2");
    sc_trace(mVcdFile, deleted_zeros_2_fu_665_p3, "deleted_zeros_2_fu_665_p3");
    sc_trace(mVcdFile, tmp_8_fu_685_p2, "tmp_8_fu_685_p2");
    sc_trace(mVcdFile, signbit_not_fu_695_p2, "signbit_not_fu_695_p2");
    sc_trace(mVcdFile, neg_src_5_not_fu_700_p2, "neg_src_5_not_fu_700_p2");
    sc_trace(mVcdFile, p_39_demorgan_i_not_fu_710_p2, "p_39_demorgan_i_not_fu_710_p2");
    sc_trace(mVcdFile, brmerge_i_i_not_fu_705_p2, "brmerge_i_i_not_fu_705_p2");
    sc_trace(mVcdFile, neg_src_fu_690_p2, "neg_src_fu_690_p2");
    sc_trace(mVcdFile, brmerge_fu_715_p2, "brmerge_fu_715_p2");
    sc_trace(mVcdFile, p_mux_fu_721_p3, "p_mux_fu_721_p3");
    sc_trace(mVcdFile, p_s_fu_728_p3, "p_s_fu_728_p3");
    sc_trace(mVcdFile, tmp_16_fu_743_p2, "tmp_16_fu_743_p2");
    sc_trace(mVcdFile, signbit_1_not_fu_753_p2, "signbit_1_not_fu_753_p2");
    sc_trace(mVcdFile, neg_src_not_fu_758_p2, "neg_src_not_fu_758_p2");
    sc_trace(mVcdFile, p_39_demorgan_i461_no_fu_768_p2, "p_39_demorgan_i461_no_fu_768_p2");
    sc_trace(mVcdFile, brmerge_i_i463_not_fu_763_p2, "brmerge_i_i463_not_fu_763_p2");
    sc_trace(mVcdFile, neg_src_6_fu_748_p2, "neg_src_6_fu_748_p2");
    sc_trace(mVcdFile, brmerge1_fu_773_p2, "brmerge1_fu_773_p2");
    sc_trace(mVcdFile, p_mux1_fu_779_p3, "p_mux1_fu_779_p3");
    sc_trace(mVcdFile, p_1_fu_786_p3, "p_1_fu_786_p3");
    sc_trace(mVcdFile, tmp_25_fu_801_p2, "tmp_25_fu_801_p2");
    sc_trace(mVcdFile, signbit_2_not_fu_811_p2, "signbit_2_not_fu_811_p2");
    sc_trace(mVcdFile, neg_src_6_not_fu_816_p2, "neg_src_6_not_fu_816_p2");
    sc_trace(mVcdFile, p_39_demorgan_i482_no_fu_826_p2, "p_39_demorgan_i482_no_fu_826_p2");
    sc_trace(mVcdFile, brmerge_i_i484_not_fu_821_p2, "brmerge_i_i484_not_fu_821_p2");
    sc_trace(mVcdFile, neg_src_7_fu_806_p2, "neg_src_7_fu_806_p2");
    sc_trace(mVcdFile, brmerge2_fu_831_p2, "brmerge2_fu_831_p2");
    sc_trace(mVcdFile, p_mux2_fu_837_p3, "p_mux2_fu_837_p3");
    sc_trace(mVcdFile, p_2_fu_844_p3, "p_2_fu_844_p3");
    sc_trace(mVcdFile, out3_V_fu_851_p3, "out3_V_fu_851_p3");
    sc_trace(mVcdFile, out2_V_fu_793_p3, "out2_V_fu_793_p3");
    sc_trace(mVcdFile, out1_V_fu_735_p3, "out1_V_fu_735_p3");
    sc_trace(mVcdFile, grp_fu_870_p0, "grp_fu_870_p0");
    sc_trace(mVcdFile, OP1_V_fu_239_p1, "OP1_V_fu_239_p1");
    sc_trace(mVcdFile, grp_fu_878_p0, "grp_fu_878_p0");
    sc_trace(mVcdFile, grp_fu_886_p0, "grp_fu_886_p0");
    sc_trace(mVcdFile, grp_fu_894_p0, "grp_fu_894_p0");
    sc_trace(mVcdFile, OP1_V_2_fu_301_p1, "OP1_V_2_fu_301_p1");
    sc_trace(mVcdFile, grp_fu_904_p0, "grp_fu_904_p0");
    sc_trace(mVcdFile, grp_fu_914_p0, "grp_fu_914_p0");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_reset_idle_pp0, "ap_reset_idle_pp0");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
    mHdltvinHandle.open("color_convert.hdltvin.dat");
    mHdltvoutHandle.open("color_convert.hdltvout.dat");
}

color_convert::~color_convert() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete color_convert_AXILiteS_s_axi_U;
    delete color_convert_macbkb_U1;
    delete color_convert_macbkb_U2;
    delete color_convert_macbkb_U3;
    delete color_convert_maccud_U4;
    delete color_convert_maccud_U5;
    delete color_convert_maccud_U6;
}

void color_convert::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void color_convert::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_24_data_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_24_data_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_in_24_data_0_vld_out.read()))) {
            stream_in_24_data_0_sel_rd =  (sc_logic) (~stream_in_24_data_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_24_data_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_24_data_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_in_24_data_0_ack_in.read()))) {
            stream_in_24_data_0_sel_wr =  (sc_logic) (~stream_in_24_data_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_24_data_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, stream_in_24_data_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, stream_in_24_data_0_ack_out.read()) && 
              esl_seteq<1,2,2>(stream_in_24_data_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, stream_in_24_data_0_vld_in.read()) && 
              esl_seteq<1,2,2>(stream_in_24_data_0_state.read(), ap_const_lv2_2)))) {
            stream_in_24_data_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_24_data_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, stream_in_24_data_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(stream_in_24_data_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, stream_in_24_data_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(stream_in_24_data_0_state.read(), ap_const_lv2_1)))) {
            stream_in_24_data_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_24_data_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(stream_in_24_data_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_24_data_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(stream_in_24_data_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(stream_in_24_data_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, stream_in_24_data_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, stream_in_24_data_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, stream_in_24_data_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, stream_in_24_data_0_ack_out.read()))))) {
            stream_in_24_data_0_state = ap_const_lv2_3;
        } else {
            stream_in_24_data_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_24_last_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_24_last_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_in_24_last_V_0_vld_out.read()))) {
            stream_in_24_last_V_0_sel_rd =  (sc_logic) (~stream_in_24_last_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_24_last_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_24_last_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_in_24_last_V_0_ack_in.read()))) {
            stream_in_24_last_V_0_sel_wr =  (sc_logic) (~stream_in_24_last_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_24_last_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, stream_in_24_last_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, stream_in_24_last_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_24_last_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, stream_in_24_last_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, stream_in_24_last_V_0_state.read())))) {
            stream_in_24_last_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_24_last_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, stream_in_24_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_24_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, stream_in_24_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_in_24_last_V_0_state.read())))) {
            stream_in_24_last_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_24_last_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, stream_in_24_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_24_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_in_24_last_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_24_last_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, stream_in_24_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, stream_in_24_last_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, stream_in_24_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, stream_in_24_last_V_0_ack_out.read()))))) {
            stream_in_24_last_V_0_state = ap_const_lv2_3;
        } else {
            stream_in_24_last_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_24_user_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_24_user_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_in_24_user_V_0_vld_out.read()))) {
            stream_in_24_user_V_0_sel_rd =  (sc_logic) (~stream_in_24_user_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_24_user_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_24_user_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_in_24_user_V_0_ack_in.read()))) {
            stream_in_24_user_V_0_sel_wr =  (sc_logic) (~stream_in_24_user_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_24_user_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, stream_in_24_user_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, stream_in_24_user_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_24_user_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, stream_in_24_user_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, stream_in_24_user_V_0_state.read())))) {
            stream_in_24_user_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_24_user_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, stream_in_24_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_24_user_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, stream_in_24_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_in_24_user_V_0_state.read())))) {
            stream_in_24_user_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_24_user_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, stream_in_24_user_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_24_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_in_24_user_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_24_user_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, stream_in_24_user_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, stream_in_24_user_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, stream_in_24_user_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, stream_in_24_user_V_0_ack_out.read()))))) {
            stream_in_24_user_V_0_state = ap_const_lv2_3;
        } else {
            stream_in_24_user_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_out_24_data_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_out_24_data_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_out_24_data_1_vld_out.read()))) {
            stream_out_24_data_1_sel_rd =  (sc_logic) (~stream_out_24_data_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_out_24_data_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_out_24_data_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_out_24_data_1_ack_in.read()))) {
            stream_out_24_data_1_sel_wr =  (sc_logic) (~stream_out_24_data_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_out_24_data_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, stream_out_24_data_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, stream_out_24_data_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, stream_out_24_data_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, stream_out_24_data_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, stream_out_24_data_1_state.read())))) {
            stream_out_24_data_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_out_24_data_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, stream_out_24_data_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, stream_out_24_data_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, stream_out_24_data_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_out_24_data_1_state.read())))) {
            stream_out_24_data_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_out_24_data_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, stream_out_24_data_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, stream_out_24_data_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_out_24_data_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, stream_out_24_data_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, stream_out_24_data_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, stream_out_24_data_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, stream_out_24_data_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, stream_out_24_data_1_ack_out.read()))))) {
            stream_out_24_data_1_state = ap_const_lv2_3;
        } else {
            stream_out_24_data_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_out_24_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_out_24_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_out_24_last_V_1_vld_out.read()))) {
            stream_out_24_last_V_1_sel_rd =  (sc_logic) (~stream_out_24_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_out_24_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_out_24_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_out_24_last_V_1_ack_in.read()))) {
            stream_out_24_last_V_1_sel_wr =  (sc_logic) (~stream_out_24_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_out_24_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, stream_out_24_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, stream_out_24_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, stream_out_24_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, stream_out_24_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, stream_out_24_last_V_1_state.read())))) {
            stream_out_24_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_out_24_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, stream_out_24_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, stream_out_24_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, stream_out_24_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_out_24_last_V_1_state.read())))) {
            stream_out_24_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_out_24_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, stream_out_24_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, stream_out_24_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_out_24_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, stream_out_24_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, stream_out_24_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, stream_out_24_last_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, stream_out_24_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, stream_out_24_last_V_1_ack_out.read()))))) {
            stream_out_24_last_V_1_state = ap_const_lv2_3;
        } else {
            stream_out_24_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_out_24_user_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_out_24_user_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_out_24_user_V_1_vld_out.read()))) {
            stream_out_24_user_V_1_sel_rd =  (sc_logic) (~stream_out_24_user_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_out_24_user_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_out_24_user_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_out_24_user_V_1_ack_in.read()))) {
            stream_out_24_user_V_1_sel_wr =  (sc_logic) (~stream_out_24_user_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_out_24_user_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, stream_out_24_user_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, stream_out_24_user_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, stream_out_24_user_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, stream_out_24_user_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, stream_out_24_user_V_1_state.read())))) {
            stream_out_24_user_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_out_24_user_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, stream_out_24_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, stream_out_24_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, stream_out_24_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_out_24_user_V_1_state.read())))) {
            stream_out_24_user_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_out_24_user_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, stream_out_24_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, stream_out_24_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_out_24_user_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, stream_out_24_user_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, stream_out_24_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, stream_out_24_user_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, stream_out_24_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, stream_out_24_user_V_1_ack_out.read()))))) {
            stream_out_24_user_V_1_state = ap_const_lv2_3;
        } else {
            stream_out_24_user_V_1_state = ap_const_lv2_2;
        }
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, bias_c1_V_0_vld_reg.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, bias_c1_V_0_vld_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, bias_c1_V_0_ack_out.read())))) {
        bias_c1_V_0_data_reg = bias_c1_V.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        bias_c1_V_read_reg_934 = bias_c1_V_0_data_reg.read();
        bias_c2_V_read_reg_929 = bias_c2_V_0_data_reg.read();
        bias_c3_V_read_reg_924 = bias_c3_V_0_data_reg.read();
        c1_c3_V_read_reg_949 = c1_c3_V_0_data_reg.read();
        c2_c3_V_read_reg_944 = c2_c3_V_0_data_reg.read();
        c3_c3_V_read_reg_939 = c3_c3_V_0_data_reg.read();
        loc_V_2_reg_964 = stream_in_24_data_0_data_out.read().range(23, 16);
        stream_in_24_last_V_s_reg_959 = stream_in_24_last_V_0_data_out.read();
        stream_in_24_user_V_s_reg_954 = stream_in_24_user_V_0_data_out.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, bias_c2_V_0_vld_reg.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, bias_c2_V_0_vld_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, bias_c2_V_0_ack_out.read())))) {
        bias_c2_V_0_data_reg = bias_c2_V.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, bias_c3_V_0_vld_reg.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, bias_c3_V_0_vld_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, bias_c3_V_0_ack_out.read())))) {
        bias_c3_V_0_data_reg = bias_c3_V.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, c1_c1_V_0_vld_reg.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, c1_c1_V_0_vld_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, c1_c1_V_0_ack_out.read())))) {
        c1_c1_V_0_data_reg = c1_c1_V.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, c1_c2_V_0_vld_reg.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, c1_c2_V_0_vld_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, c1_c2_V_0_ack_out.read())))) {
        c1_c2_V_0_data_reg = c1_c2_V.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, c1_c3_V_0_vld_reg.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, c1_c3_V_0_vld_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, c1_c3_V_0_ack_out.read())))) {
        c1_c3_V_0_data_reg = c1_c3_V.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, c2_c1_V_0_vld_reg.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, c2_c1_V_0_vld_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, c2_c1_V_0_ack_out.read())))) {
        c2_c1_V_0_data_reg = c2_c1_V.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, c2_c2_V_0_vld_reg.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, c2_c2_V_0_vld_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, c2_c2_V_0_ack_out.read())))) {
        c2_c2_V_0_data_reg = c2_c2_V.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, c2_c3_V_0_vld_reg.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, c2_c3_V_0_vld_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, c2_c3_V_0_ack_out.read())))) {
        c2_c3_V_0_data_reg = c2_c3_V.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, c3_c1_V_0_vld_reg.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, c3_c1_V_0_vld_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, c3_c1_V_0_ack_out.read())))) {
        c3_c1_V_0_data_reg = c3_c1_V.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, c3_c2_V_0_vld_reg.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, c3_c2_V_0_vld_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, c3_c2_V_0_ack_out.read())))) {
        c3_c2_V_0_data_reg = c3_c2_V.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, c3_c3_V_0_vld_reg.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, c3_c3_V_0_vld_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, c3_c3_V_0_ack_out.read())))) {
        c3_c3_V_0_data_reg = c3_c3_V.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        p_38_i1_reg_1020 = p_38_i1_fu_546_p2.read();
        p_38_i2_reg_1044 = p_38_i2_fu_673_p2.read();
        p_38_i_reg_996 = p_38_i_fu_419_p2.read();
        p_39_demorgan_i1_reg_1026 = p_39_demorgan_i1_fu_552_p2.read();
        p_39_demorgan_i2_reg_1050 = p_39_demorgan_i2_fu_679_p2.read();
        p_39_demorgan_i_reg_1002 = p_39_demorgan_i_fu_425_p2.read();
        p_Val2_15_reg_1014 = p_Val2_15_fu_490_p2.read();
        p_Val2_23_reg_1038 = p_Val2_23_fu_617_p2.read();
        p_Val2_7_reg_990 = p_Val2_7_fu_363_p2.read();
        signbit_1_reg_1008 = p_Val2_13_fu_448_p2.read().range(19, 19);
        signbit_2_reg_1032 = p_Val2_21_fu_575_p2.read().range(19, 19);
        signbit_reg_984 = p_Val2_5_fu_321_p2.read().range(19, 19);
        stream_in_24_last_V_s_reg_959_pp0_iter2_reg = stream_in_24_last_V_s_reg_959.read();
        stream_in_24_user_V_s_reg_954_pp0_iter2_reg = stream_in_24_user_V_s_reg_954.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        p_Val2_11_reg_974 = grp_fu_878_p3.read();
        p_Val2_19_reg_979 = grp_fu_886_p3.read();
        p_Val2_2_reg_969 = grp_fu_870_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_24_data_0_load_A.read())) {
        stream_in_24_data_0_payload_A = stream_in_24_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_24_data_0_load_B.read())) {
        stream_in_24_data_0_payload_B = stream_in_24_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_24_last_V_0_load_A.read())) {
        stream_in_24_last_V_0_payload_A = stream_in_24_TLAST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_24_last_V_0_load_B.read())) {
        stream_in_24_last_V_0_payload_B = stream_in_24_TLAST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_24_user_V_0_load_A.read())) {
        stream_in_24_user_V_0_payload_A = stream_in_24_TUSER.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_24_user_V_0_load_B.read())) {
        stream_in_24_user_V_0_payload_B = stream_in_24_TUSER.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_out_24_data_1_load_A.read())) {
        stream_out_24_data_1_payload_A = stream_out_24_data_t_fu_859_p4.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_out_24_data_1_load_B.read())) {
        stream_out_24_data_1_payload_B = stream_out_24_data_t_fu_859_p4.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_out_24_last_V_1_load_A.read())) {
        stream_out_24_last_V_1_payload_A = stream_in_24_last_V_s_reg_959_pp0_iter2_reg.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_out_24_last_V_1_load_B.read())) {
        stream_out_24_last_V_1_payload_B = stream_in_24_last_V_s_reg_959_pp0_iter2_reg.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_out_24_user_V_1_load_A.read())) {
        stream_out_24_user_V_1_payload_A = stream_in_24_user_V_s_reg_954_pp0_iter2_reg.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_out_24_user_V_1_load_B.read())) {
        stream_out_24_user_V_1_payload_B = stream_in_24_user_V_s_reg_954_pp0_iter2_reg.read();
    }
}

void color_convert::thread_OP1_V_1_fu_247_p1() {
    OP1_V_1_fu_247_p1 = esl_zext<18,8>(loc_V_1_fu_219_p4.read());
}

void color_convert::thread_OP1_V_2_fu_301_p1() {
    OP1_V_2_fu_301_p1 = esl_zext<18,8>(loc_V_2_reg_964.read());
}

void color_convert::thread_OP1_V_fu_239_p1() {
    OP1_V_fu_239_p1 = esl_zext<18,8>(loc_V_fu_215_p1.read());
}

void color_convert::thread_Range1_all_ones_1_fu_526_p2() {
    Range1_all_ones_1_fu_526_p2 = (!tmp_15_fu_516_p4.read().is_01() || !ap_const_lv4_F.is_01())? sc_lv<1>(): sc_lv<1>(tmp_15_fu_516_p4.read() == ap_const_lv4_F);
}

void color_convert::thread_Range1_all_ones_2_fu_653_p2() {
    Range1_all_ones_2_fu_653_p2 = (!tmp_24_fu_643_p4.read().is_01() || !ap_const_lv4_F.is_01())? sc_lv<1>(): sc_lv<1>(tmp_24_fu_643_p4.read() == ap_const_lv4_F);
}

void color_convert::thread_Range1_all_ones_fu_399_p2() {
    Range1_all_ones_fu_399_p2 = (!tmp_2_fu_389_p4.read().is_01() || !ap_const_lv4_F.is_01())? sc_lv<1>(): sc_lv<1>(tmp_2_fu_389_p4.read() == ap_const_lv4_F);
}

void color_convert::thread_Range1_all_zeros_1_fu_532_p2() {
    Range1_all_zeros_1_fu_532_p2 = (!tmp_15_fu_516_p4.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_15_fu_516_p4.read() == ap_const_lv4_0);
}

void color_convert::thread_Range1_all_zeros_2_fu_659_p2() {
    Range1_all_zeros_2_fu_659_p2 = (!tmp_24_fu_643_p4.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_24_fu_643_p4.read() == ap_const_lv4_0);
}

void color_convert::thread_Range1_all_zeros_fu_405_p2() {
    Range1_all_zeros_fu_405_p2 = (!tmp_2_fu_389_p4.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_2_fu_389_p4.read() == ap_const_lv4_0);
}

void color_convert::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[0];
}

void color_convert::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void color_convert::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, stream_in_24_data_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, stream_out_24_data_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, stream_out_24_user_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, stream_out_24_last_V_1_ack_in.read()))));
}

void color_convert::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, stream_in_24_data_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, stream_out_24_data_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, stream_out_24_data_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, stream_out_24_user_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, stream_out_24_last_V_1_ack_in.read()))));
}

void color_convert::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, stream_in_24_data_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, stream_out_24_data_1_ack_in.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, stream_out_24_data_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, stream_out_24_user_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, stream_out_24_last_V_1_ack_in.read()))));
}

void color_convert::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void color_convert::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = esl_seteq<1,1,1>(ap_const_logic_0, stream_in_24_data_0_vld_out.read());
}

void color_convert::thread_ap_block_state3_pp0_stage0_iter2() {
    ap_block_state3_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void color_convert::thread_ap_block_state4_pp0_stage0_iter3() {
    ap_block_state4_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void color_convert::thread_ap_block_state5_pp0_stage0_iter4() {
    ap_block_state5_pp0_stage0_iter4 = (esl_seteq<1,1,1>(ap_const_logic_0, stream_out_24_data_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, stream_out_24_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, stream_out_24_last_V_1_ack_in.read()));
}

void color_convert::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void color_convert::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void color_convert::thread_ap_reset_idle_pp0() {
    if (!esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        ap_reset_idle_pp0 = ap_const_logic_1;
    } else {
        ap_reset_idle_pp0 = ap_const_logic_0;
    }
}

void color_convert::thread_ap_rst_n_control_inv() {
    ap_rst_n_control_inv =  (sc_logic) (~ap_rst_n_control.read());
}

void color_convert::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void color_convert::thread_bias_c1_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1))) {
        bias_c1_V_0_ack_out = ap_const_logic_1;
    } else {
        bias_c1_V_0_ack_out = ap_const_logic_0;
    }
}

void color_convert::thread_bias_c2_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1))) {
        bias_c2_V_0_ack_out = ap_const_logic_1;
    } else {
        bias_c2_V_0_ack_out = ap_const_logic_0;
    }
}

void color_convert::thread_bias_c3_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1))) {
        bias_c3_V_0_ack_out = ap_const_logic_1;
    } else {
        bias_c3_V_0_ack_out = ap_const_logic_0;
    }
}

void color_convert::thread_brmerge1_fu_773_p2() {
    brmerge1_fu_773_p2 = (neg_src_not_fu_758_p2.read() | p_39_demorgan_i461_no_fu_768_p2.read());
}

void color_convert::thread_brmerge2_fu_831_p2() {
    brmerge2_fu_831_p2 = (neg_src_6_not_fu_816_p2.read() | p_39_demorgan_i482_no_fu_826_p2.read());
}

void color_convert::thread_brmerge_fu_715_p2() {
    brmerge_fu_715_p2 = (neg_src_5_not_fu_700_p2.read() | p_39_demorgan_i_not_fu_710_p2.read());
}

void color_convert::thread_brmerge_i_i463_not_fu_763_p2() {
    brmerge_i_i463_not_fu_763_p2 = (p_39_demorgan_i1_reg_1026.read() & neg_src_not_fu_758_p2.read());
}

void color_convert::thread_brmerge_i_i484_not_fu_821_p2() {
    brmerge_i_i484_not_fu_821_p2 = (p_39_demorgan_i2_reg_1050.read() & neg_src_6_not_fu_816_p2.read());
}

void color_convert::thread_brmerge_i_i_not_fu_705_p2() {
    brmerge_i_i_not_fu_705_p2 = (p_39_demorgan_i_reg_1002.read() & neg_src_5_not_fu_700_p2.read());
}

void color_convert::thread_c1_c1_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1))) {
        c1_c1_V_0_ack_out = ap_const_logic_1;
    } else {
        c1_c1_V_0_ack_out = ap_const_logic_0;
    }
}

void color_convert::thread_c1_c2_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1))) {
        c1_c2_V_0_ack_out = ap_const_logic_1;
    } else {
        c1_c2_V_0_ack_out = ap_const_logic_0;
    }
}

void color_convert::thread_c1_c3_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1))) {
        c1_c3_V_0_ack_out = ap_const_logic_1;
    } else {
        c1_c3_V_0_ack_out = ap_const_logic_0;
    }
}

void color_convert::thread_c2_c1_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1))) {
        c2_c1_V_0_ack_out = ap_const_logic_1;
    } else {
        c2_c1_V_0_ack_out = ap_const_logic_0;
    }
}

void color_convert::thread_c2_c2_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1))) {
        c2_c2_V_0_ack_out = ap_const_logic_1;
    } else {
        c2_c2_V_0_ack_out = ap_const_logic_0;
    }
}

void color_convert::thread_c2_c3_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1))) {
        c2_c3_V_0_ack_out = ap_const_logic_1;
    } else {
        c2_c3_V_0_ack_out = ap_const_logic_0;
    }
}

void color_convert::thread_c3_c1_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1))) {
        c3_c1_V_0_ack_out = ap_const_logic_1;
    } else {
        c3_c1_V_0_ack_out = ap_const_logic_0;
    }
}

void color_convert::thread_c3_c2_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1))) {
        c3_c2_V_0_ack_out = ap_const_logic_1;
    } else {
        c3_c2_V_0_ack_out = ap_const_logic_0;
    }
}

void color_convert::thread_c3_c3_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1))) {
        c3_c3_V_0_ack_out = ap_const_logic_1;
    } else {
        c3_c3_V_0_ack_out = ap_const_logic_0;
    }
}

void color_convert::thread_carry_1_fu_510_p2() {
    carry_1_fu_510_p2 = (tmp_33_fu_482_p3.read() & tmp_14_fu_504_p2.read());
}

void color_convert::thread_carry_2_fu_637_p2() {
    carry_2_fu_637_p2 = (tmp_37_fu_609_p3.read() & tmp_23_fu_631_p2.read());
}

void color_convert::thread_carry_fu_383_p2() {
    carry_fu_383_p2 = (tmp_29_fu_355_p3.read() & tmp_5_fu_377_p2.read());
}

void color_convert::thread_deleted_zeros_1_fu_538_p3() {
    deleted_zeros_1_fu_538_p3 = (!carry_1_fu_510_p2.read()[0].is_01())? sc_lv<1>(): ((carry_1_fu_510_p2.read()[0].to_bool())? Range1_all_ones_1_fu_526_p2.read(): Range1_all_zeros_1_fu_532_p2.read());
}

void color_convert::thread_deleted_zeros_2_fu_665_p3() {
    deleted_zeros_2_fu_665_p3 = (!carry_2_fu_637_p2.read()[0].is_01())? sc_lv<1>(): ((carry_2_fu_637_p2.read()[0].to_bool())? Range1_all_ones_2_fu_653_p2.read(): Range1_all_zeros_2_fu_659_p2.read());
}

void color_convert::thread_deleted_zeros_fu_411_p3() {
    deleted_zeros_fu_411_p3 = (!carry_fu_383_p2.read()[0].is_01())? sc_lv<1>(): ((carry_fu_383_p2.read()[0].to_bool())? Range1_all_ones_fu_399_p2.read(): Range1_all_zeros_fu_405_p2.read());
}

void color_convert::thread_grp_fu_870_p0() {
    grp_fu_870_p0 =  (sc_lv<8>) (OP1_V_fu_239_p1.read());
}

void color_convert::thread_grp_fu_878_p0() {
    grp_fu_878_p0 =  (sc_lv<8>) (OP1_V_fu_239_p1.read());
}

void color_convert::thread_grp_fu_886_p0() {
    grp_fu_886_p0 =  (sc_lv<8>) (OP1_V_fu_239_p1.read());
}

void color_convert::thread_grp_fu_894_p0() {
    grp_fu_894_p0 =  (sc_lv<8>) (OP1_V_2_fu_301_p1.read());
}

void color_convert::thread_grp_fu_904_p0() {
    grp_fu_904_p0 =  (sc_lv<8>) (OP1_V_2_fu_301_p1.read());
}

void color_convert::thread_grp_fu_914_p0() {
    grp_fu_914_p0 =  (sc_lv<8>) (OP1_V_2_fu_301_p1.read());
}

void color_convert::thread_loc_V_1_fu_219_p4() {
    loc_V_1_fu_219_p4 = stream_in_24_data_0_data_out.read().range(15, 8);
}

void color_convert::thread_loc_V_fu_215_p1() {
    loc_V_fu_215_p1 = stream_in_24_data_0_data_out.read().range(8-1, 0);
}

void color_convert::thread_neg_src_5_not_fu_700_p2() {
    neg_src_5_not_fu_700_p2 = (p_38_i_reg_996.read() | signbit_not_fu_695_p2.read());
}

void color_convert::thread_neg_src_6_fu_748_p2() {
    neg_src_6_fu_748_p2 = (signbit_1_reg_1008.read() & tmp_16_fu_743_p2.read());
}

void color_convert::thread_neg_src_6_not_fu_816_p2() {
    neg_src_6_not_fu_816_p2 = (p_38_i2_reg_1044.read() | signbit_2_not_fu_811_p2.read());
}

void color_convert::thread_neg_src_7_fu_806_p2() {
    neg_src_7_fu_806_p2 = (signbit_2_reg_1032.read() & tmp_25_fu_801_p2.read());
}

void color_convert::thread_neg_src_fu_690_p2() {
    neg_src_fu_690_p2 = (signbit_reg_984.read() & tmp_8_fu_685_p2.read());
}

void color_convert::thread_neg_src_not_fu_758_p2() {
    neg_src_not_fu_758_p2 = (p_38_i1_reg_1020.read() | signbit_1_not_fu_753_p2.read());
}

void color_convert::thread_out1_V_fu_735_p3() {
    out1_V_fu_735_p3 = (!brmerge_fu_715_p2.read()[0].is_01())? sc_lv<8>(): ((brmerge_fu_715_p2.read()[0].to_bool())? p_mux_fu_721_p3.read(): p_s_fu_728_p3.read());
}

void color_convert::thread_out2_V_fu_793_p3() {
    out2_V_fu_793_p3 = (!brmerge1_fu_773_p2.read()[0].is_01())? sc_lv<8>(): ((brmerge1_fu_773_p2.read()[0].to_bool())? p_mux1_fu_779_p3.read(): p_1_fu_786_p3.read());
}

void color_convert::thread_out3_V_fu_851_p3() {
    out3_V_fu_851_p3 = (!brmerge2_fu_831_p2.read()[0].is_01())? sc_lv<8>(): ((brmerge2_fu_831_p2.read()[0].to_bool())? p_mux2_fu_837_p3.read(): p_2_fu_844_p3.read());
}

void color_convert::thread_p_1_fu_786_p3() {
    p_1_fu_786_p3 = (!neg_src_6_fu_748_p2.read()[0].is_01())? sc_lv<8>(): ((neg_src_6_fu_748_p2.read()[0].to_bool())? ap_const_lv8_0: p_Val2_15_reg_1014.read());
}

void color_convert::thread_p_2_fu_844_p3() {
    p_2_fu_844_p3 = (!neg_src_7_fu_806_p2.read()[0].is_01())? sc_lv<8>(): ((neg_src_7_fu_806_p2.read()[0].to_bool())? ap_const_lv8_0: p_Val2_23_reg_1038.read());
}

void color_convert::thread_p_38_i1_fu_546_p2() {
    p_38_i1_fu_546_p2 = (carry_1_fu_510_p2.read() & Range1_all_ones_1_fu_526_p2.read());
}

void color_convert::thread_p_38_i2_fu_673_p2() {
    p_38_i2_fu_673_p2 = (carry_2_fu_637_p2.read() & Range1_all_ones_2_fu_653_p2.read());
}

void color_convert::thread_p_38_i_fu_419_p2() {
    p_38_i_fu_419_p2 = (carry_fu_383_p2.read() & Range1_all_ones_fu_399_p2.read());
}

void color_convert::thread_p_39_demorgan_i1_fu_552_p2() {
    p_39_demorgan_i1_fu_552_p2 = (deleted_zeros_1_fu_538_p3.read() | signbit_1_fu_453_p3.read());
}

void color_convert::thread_p_39_demorgan_i2_fu_679_p2() {
    p_39_demorgan_i2_fu_679_p2 = (deleted_zeros_2_fu_665_p3.read() | signbit_2_fu_580_p3.read());
}

void color_convert::thread_p_39_demorgan_i461_no_fu_768_p2() {
    p_39_demorgan_i461_no_fu_768_p2 = (p_39_demorgan_i1_reg_1026.read() ^ ap_const_lv1_1);
}

void color_convert::thread_p_39_demorgan_i482_no_fu_826_p2() {
    p_39_demorgan_i482_no_fu_826_p2 = (p_39_demorgan_i2_reg_1050.read() ^ ap_const_lv1_1);
}

void color_convert::thread_p_39_demorgan_i_fu_425_p2() {
    p_39_demorgan_i_fu_425_p2 = (deleted_zeros_fu_411_p3.read() | signbit_fu_326_p3.read());
}

void color_convert::thread_p_39_demorgan_i_not_fu_710_p2() {
    p_39_demorgan_i_not_fu_710_p2 = (p_39_demorgan_i_reg_1002.read() ^ ap_const_lv1_1);
}

void color_convert::thread_p_Val2_13_fu_448_p2() {
    p_Val2_13_fu_448_p2 = (!grp_fu_904_p3.read().is_01() || !tmp_16_cast_fu_444_p1.read().is_01())? sc_lv<20>(): (sc_bigint<20>(grp_fu_904_p3.read()) + sc_bigint<20>(tmp_16_cast_fu_444_p1.read()));
}

void color_convert::thread_p_Val2_14_fu_461_p4() {
    p_Val2_14_fu_461_p4 = p_Val2_13_fu_448_p2.read().range(15, 8);
}

void color_convert::thread_p_Val2_15_fu_490_p2() {
    p_Val2_15_fu_490_p2 = (!tmp_13_fu_478_p1.read().is_01() || !p_Val2_14_fu_461_p4.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_13_fu_478_p1.read()) + sc_biguint<8>(p_Val2_14_fu_461_p4.read()));
}

void color_convert::thread_p_Val2_16_fu_291_p0() {
    p_Val2_16_fu_291_p0 =  (sc_lv<8>) (OP1_V_1_fu_247_p1.read());
}

void color_convert::thread_p_Val2_16_fu_291_p1() {
    p_Val2_16_fu_291_p1 = c3_c2_V_0_data_reg.read();
}

void color_convert::thread_p_Val2_16_fu_291_p2() {
    p_Val2_16_fu_291_p2 = (!p_Val2_16_fu_291_p0.read().is_01() || !p_Val2_16_fu_291_p1.read().is_01())? sc_lv<18>(): sc_biguint<8>(p_Val2_16_fu_291_p0.read()) * sc_bigint<10>(p_Val2_16_fu_291_p1.read());
}

void color_convert::thread_p_Val2_1_fu_255_p0() {
    p_Val2_1_fu_255_p0 =  (sc_lv<8>) (OP1_V_1_fu_247_p1.read());
}

void color_convert::thread_p_Val2_1_fu_255_p1() {
    p_Val2_1_fu_255_p1 = c1_c2_V_0_data_reg.read();
}

void color_convert::thread_p_Val2_1_fu_255_p2() {
    p_Val2_1_fu_255_p2 = (!p_Val2_1_fu_255_p0.read().is_01() || !p_Val2_1_fu_255_p1.read().is_01())? sc_lv<18>(): sc_biguint<8>(p_Val2_1_fu_255_p0.read()) * sc_bigint<10>(p_Val2_1_fu_255_p1.read());
}

void color_convert::thread_p_Val2_21_fu_575_p2() {
    p_Val2_21_fu_575_p2 = (!grp_fu_914_p3.read().is_01() || !tmp_27_cast_fu_571_p1.read().is_01())? sc_lv<20>(): (sc_bigint<20>(grp_fu_914_p3.read()) + sc_bigint<20>(tmp_27_cast_fu_571_p1.read()));
}

void color_convert::thread_p_Val2_22_fu_588_p4() {
    p_Val2_22_fu_588_p4 = p_Val2_21_fu_575_p2.read().range(15, 8);
}

void color_convert::thread_p_Val2_23_fu_617_p2() {
    p_Val2_23_fu_617_p2 = (!tmp_22_fu_605_p1.read().is_01() || !p_Val2_22_fu_588_p4.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_22_fu_605_p1.read()) + sc_biguint<8>(p_Val2_22_fu_588_p4.read()));
}

void color_convert::thread_p_Val2_5_fu_321_p2() {
    p_Val2_5_fu_321_p2 = (!grp_fu_894_p3.read().is_01() || !tmp_3_cast_fu_317_p1.read().is_01())? sc_lv<20>(): (sc_bigint<20>(grp_fu_894_p3.read()) + sc_bigint<20>(tmp_3_cast_fu_317_p1.read()));
}

void color_convert::thread_p_Val2_6_fu_334_p4() {
    p_Val2_6_fu_334_p4 = p_Val2_5_fu_321_p2.read().range(15, 8);
}

void color_convert::thread_p_Val2_7_fu_363_p2() {
    p_Val2_7_fu_363_p2 = (!tmp_7_fu_351_p1.read().is_01() || !p_Val2_6_fu_334_p4.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_7_fu_351_p1.read()) + sc_biguint<8>(p_Val2_6_fu_334_p4.read()));
}

void color_convert::thread_p_Val2_9_fu_273_p0() {
    p_Val2_9_fu_273_p0 =  (sc_lv<8>) (OP1_V_1_fu_247_p1.read());
}

void color_convert::thread_p_Val2_9_fu_273_p1() {
    p_Val2_9_fu_273_p1 = c2_c2_V_0_data_reg.read();
}

void color_convert::thread_p_Val2_9_fu_273_p2() {
    p_Val2_9_fu_273_p2 = (!p_Val2_9_fu_273_p0.read().is_01() || !p_Val2_9_fu_273_p1.read().is_01())? sc_lv<18>(): sc_biguint<8>(p_Val2_9_fu_273_p0.read()) * sc_bigint<10>(p_Val2_9_fu_273_p1.read());
}

void color_convert::thread_p_mux1_fu_779_p3() {
    p_mux1_fu_779_p3 = (!brmerge_i_i463_not_fu_763_p2.read()[0].is_01())? sc_lv<8>(): ((brmerge_i_i463_not_fu_763_p2.read()[0].to_bool())? p_Val2_15_reg_1014.read(): ap_const_lv8_FF);
}

void color_convert::thread_p_mux2_fu_837_p3() {
    p_mux2_fu_837_p3 = (!brmerge_i_i484_not_fu_821_p2.read()[0].is_01())? sc_lv<8>(): ((brmerge_i_i484_not_fu_821_p2.read()[0].to_bool())? p_Val2_23_reg_1038.read(): ap_const_lv8_FF);
}

void color_convert::thread_p_mux_fu_721_p3() {
    p_mux_fu_721_p3 = (!brmerge_i_i_not_fu_705_p2.read()[0].is_01())? sc_lv<8>(): ((brmerge_i_i_not_fu_705_p2.read()[0].to_bool())? p_Val2_7_reg_990.read(): ap_const_lv8_FF);
}

void color_convert::thread_p_s_fu_728_p3() {
    p_s_fu_728_p3 = (!neg_src_fu_690_p2.read()[0].is_01())? sc_lv<8>(): ((neg_src_fu_690_p2.read()[0].to_bool())? ap_const_lv8_0: p_Val2_7_reg_990.read());
}

void color_convert::thread_signbit_1_fu_453_p3() {
    signbit_1_fu_453_p3 = p_Val2_13_fu_448_p2.read().range(19, 19);
}

void color_convert::thread_signbit_1_not_fu_753_p2() {
    signbit_1_not_fu_753_p2 = (signbit_1_reg_1008.read() ^ ap_const_lv1_1);
}

void color_convert::thread_signbit_2_fu_580_p3() {
    signbit_2_fu_580_p3 = p_Val2_21_fu_575_p2.read().range(19, 19);
}

void color_convert::thread_signbit_2_not_fu_811_p2() {
    signbit_2_not_fu_811_p2 = (signbit_2_reg_1032.read() ^ ap_const_lv1_1);
}

void color_convert::thread_signbit_fu_326_p3() {
    signbit_fu_326_p3 = p_Val2_5_fu_321_p2.read().range(19, 19);
}

void color_convert::thread_signbit_not_fu_695_p2() {
    signbit_not_fu_695_p2 = (signbit_reg_984.read() ^ ap_const_lv1_1);
}

void color_convert::thread_stream_in_24_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        stream_in_24_TDATA_blk_n = stream_in_24_data_0_state.read()[0];
    } else {
        stream_in_24_TDATA_blk_n = ap_const_logic_1;
    }
}

void color_convert::thread_stream_in_24_TREADY() {
    stream_in_24_TREADY = stream_in_24_last_V_0_state.read()[1];
}

void color_convert::thread_stream_in_24_data_0_ack_in() {
    stream_in_24_data_0_ack_in = stream_in_24_data_0_state.read()[1];
}

void color_convert::thread_stream_in_24_data_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        stream_in_24_data_0_ack_out = ap_const_logic_1;
    } else {
        stream_in_24_data_0_ack_out = ap_const_logic_0;
    }
}

void color_convert::thread_stream_in_24_data_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_24_data_0_sel.read())) {
        stream_in_24_data_0_data_out = stream_in_24_data_0_payload_B.read();
    } else {
        stream_in_24_data_0_data_out = stream_in_24_data_0_payload_A.read();
    }
}

void color_convert::thread_stream_in_24_data_0_load_A() {
    stream_in_24_data_0_load_A = (stream_in_24_data_0_state_cmp_full.read() & ~stream_in_24_data_0_sel_wr.read());
}

void color_convert::thread_stream_in_24_data_0_load_B() {
    stream_in_24_data_0_load_B = (stream_in_24_data_0_sel_wr.read() & stream_in_24_data_0_state_cmp_full.read());
}

void color_convert::thread_stream_in_24_data_0_sel() {
    stream_in_24_data_0_sel = stream_in_24_data_0_sel_rd.read();
}

void color_convert::thread_stream_in_24_data_0_state_cmp_full() {
    stream_in_24_data_0_state_cmp_full =  (sc_logic) ((!stream_in_24_data_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(stream_in_24_data_0_state.read() != ap_const_lv2_1))[0];
}

void color_convert::thread_stream_in_24_data_0_vld_in() {
    stream_in_24_data_0_vld_in = stream_in_24_TVALID.read();
}

void color_convert::thread_stream_in_24_data_0_vld_out() {
    stream_in_24_data_0_vld_out = stream_in_24_data_0_state.read()[0];
}

void color_convert::thread_stream_in_24_last_V_0_ack_in() {
    stream_in_24_last_V_0_ack_in = stream_in_24_last_V_0_state.read()[1];
}

void color_convert::thread_stream_in_24_last_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        stream_in_24_last_V_0_ack_out = ap_const_logic_1;
    } else {
        stream_in_24_last_V_0_ack_out = ap_const_logic_0;
    }
}

void color_convert::thread_stream_in_24_last_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_24_last_V_0_sel.read())) {
        stream_in_24_last_V_0_data_out = stream_in_24_last_V_0_payload_B.read();
    } else {
        stream_in_24_last_V_0_data_out = stream_in_24_last_V_0_payload_A.read();
    }
}

void color_convert::thread_stream_in_24_last_V_0_load_A() {
    stream_in_24_last_V_0_load_A = (stream_in_24_last_V_0_state_cmp_full.read() & ~stream_in_24_last_V_0_sel_wr.read());
}

void color_convert::thread_stream_in_24_last_V_0_load_B() {
    stream_in_24_last_V_0_load_B = (stream_in_24_last_V_0_sel_wr.read() & stream_in_24_last_V_0_state_cmp_full.read());
}

void color_convert::thread_stream_in_24_last_V_0_sel() {
    stream_in_24_last_V_0_sel = stream_in_24_last_V_0_sel_rd.read();
}

void color_convert::thread_stream_in_24_last_V_0_state_cmp_full() {
    stream_in_24_last_V_0_state_cmp_full =  (sc_logic) ((!stream_in_24_last_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(stream_in_24_last_V_0_state.read() != ap_const_lv2_1))[0];
}

void color_convert::thread_stream_in_24_last_V_0_vld_in() {
    stream_in_24_last_V_0_vld_in = stream_in_24_TVALID.read();
}

void color_convert::thread_stream_in_24_last_V_0_vld_out() {
    stream_in_24_last_V_0_vld_out = stream_in_24_last_V_0_state.read()[0];
}

void color_convert::thread_stream_in_24_user_V_0_ack_in() {
    stream_in_24_user_V_0_ack_in = stream_in_24_user_V_0_state.read()[1];
}

void color_convert::thread_stream_in_24_user_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        stream_in_24_user_V_0_ack_out = ap_const_logic_1;
    } else {
        stream_in_24_user_V_0_ack_out = ap_const_logic_0;
    }
}

void color_convert::thread_stream_in_24_user_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_24_user_V_0_sel.read())) {
        stream_in_24_user_V_0_data_out = stream_in_24_user_V_0_payload_B.read();
    } else {
        stream_in_24_user_V_0_data_out = stream_in_24_user_V_0_payload_A.read();
    }
}

void color_convert::thread_stream_in_24_user_V_0_load_A() {
    stream_in_24_user_V_0_load_A = (stream_in_24_user_V_0_state_cmp_full.read() & ~stream_in_24_user_V_0_sel_wr.read());
}

void color_convert::thread_stream_in_24_user_V_0_load_B() {
    stream_in_24_user_V_0_load_B = (stream_in_24_user_V_0_sel_wr.read() & stream_in_24_user_V_0_state_cmp_full.read());
}

void color_convert::thread_stream_in_24_user_V_0_sel() {
    stream_in_24_user_V_0_sel = stream_in_24_user_V_0_sel_rd.read();
}

void color_convert::thread_stream_in_24_user_V_0_state_cmp_full() {
    stream_in_24_user_V_0_state_cmp_full =  (sc_logic) ((!stream_in_24_user_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(stream_in_24_user_V_0_state.read() != ap_const_lv2_1))[0];
}

void color_convert::thread_stream_in_24_user_V_0_vld_in() {
    stream_in_24_user_V_0_vld_in = stream_in_24_TVALID.read();
}

void color_convert::thread_stream_in_24_user_V_0_vld_out() {
    stream_in_24_user_V_0_vld_out = stream_in_24_user_V_0_state.read()[0];
}

void color_convert::thread_stream_out_24_TDATA() {
    stream_out_24_TDATA = stream_out_24_data_1_data_out.read();
}

void color_convert::thread_stream_out_24_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read())))) {
        stream_out_24_TDATA_blk_n = stream_out_24_data_1_state.read()[1];
    } else {
        stream_out_24_TDATA_blk_n = ap_const_logic_1;
    }
}

void color_convert::thread_stream_out_24_TLAST() {
    stream_out_24_TLAST = stream_out_24_last_V_1_data_out.read();
}

void color_convert::thread_stream_out_24_TUSER() {
    stream_out_24_TUSER = stream_out_24_user_V_1_data_out.read();
}

void color_convert::thread_stream_out_24_TVALID() {
    stream_out_24_TVALID = stream_out_24_last_V_1_state.read()[0];
}

void color_convert::thread_stream_out_24_data_1_ack_in() {
    stream_out_24_data_1_ack_in = stream_out_24_data_1_state.read()[1];
}

void color_convert::thread_stream_out_24_data_1_ack_out() {
    stream_out_24_data_1_ack_out = stream_out_24_TREADY.read();
}

void color_convert::thread_stream_out_24_data_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_out_24_data_1_sel.read())) {
        stream_out_24_data_1_data_out = stream_out_24_data_1_payload_B.read();
    } else {
        stream_out_24_data_1_data_out = stream_out_24_data_1_payload_A.read();
    }
}

void color_convert::thread_stream_out_24_data_1_load_A() {
    stream_out_24_data_1_load_A = (stream_out_24_data_1_state_cmp_full.read() & ~stream_out_24_data_1_sel_wr.read());
}

void color_convert::thread_stream_out_24_data_1_load_B() {
    stream_out_24_data_1_load_B = (stream_out_24_data_1_sel_wr.read() & stream_out_24_data_1_state_cmp_full.read());
}

void color_convert::thread_stream_out_24_data_1_sel() {
    stream_out_24_data_1_sel = stream_out_24_data_1_sel_rd.read();
}

void color_convert::thread_stream_out_24_data_1_state_cmp_full() {
    stream_out_24_data_1_state_cmp_full =  (sc_logic) ((!stream_out_24_data_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(stream_out_24_data_1_state.read() != ap_const_lv2_1))[0];
}

void color_convert::thread_stream_out_24_data_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        stream_out_24_data_1_vld_in = ap_const_logic_1;
    } else {
        stream_out_24_data_1_vld_in = ap_const_logic_0;
    }
}

void color_convert::thread_stream_out_24_data_1_vld_out() {
    stream_out_24_data_1_vld_out = stream_out_24_data_1_state.read()[0];
}

void color_convert::thread_stream_out_24_data_t_fu_859_p4() {
    stream_out_24_data_t_fu_859_p4 = esl_concat<16,8>(esl_concat<8,8>(out3_V_fu_851_p3.read(), out2_V_fu_793_p3.read()), out1_V_fu_735_p3.read());
}

void color_convert::thread_stream_out_24_last_V_1_ack_in() {
    stream_out_24_last_V_1_ack_in = stream_out_24_last_V_1_state.read()[1];
}

void color_convert::thread_stream_out_24_last_V_1_ack_out() {
    stream_out_24_last_V_1_ack_out = stream_out_24_TREADY.read();
}

void color_convert::thread_stream_out_24_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_out_24_last_V_1_sel.read())) {
        stream_out_24_last_V_1_data_out = stream_out_24_last_V_1_payload_B.read();
    } else {
        stream_out_24_last_V_1_data_out = stream_out_24_last_V_1_payload_A.read();
    }
}

void color_convert::thread_stream_out_24_last_V_1_load_A() {
    stream_out_24_last_V_1_load_A = (stream_out_24_last_V_1_state_cmp_full.read() & ~stream_out_24_last_V_1_sel_wr.read());
}

void color_convert::thread_stream_out_24_last_V_1_load_B() {
    stream_out_24_last_V_1_load_B = (stream_out_24_last_V_1_sel_wr.read() & stream_out_24_last_V_1_state_cmp_full.read());
}

void color_convert::thread_stream_out_24_last_V_1_sel() {
    stream_out_24_last_V_1_sel = stream_out_24_last_V_1_sel_rd.read();
}

void color_convert::thread_stream_out_24_last_V_1_state_cmp_full() {
    stream_out_24_last_V_1_state_cmp_full =  (sc_logic) ((!stream_out_24_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(stream_out_24_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void color_convert::thread_stream_out_24_last_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        stream_out_24_last_V_1_vld_in = ap_const_logic_1;
    } else {
        stream_out_24_last_V_1_vld_in = ap_const_logic_0;
    }
}

void color_convert::thread_stream_out_24_last_V_1_vld_out() {
    stream_out_24_last_V_1_vld_out = stream_out_24_last_V_1_state.read()[0];
}

void color_convert::thread_stream_out_24_user_V_1_ack_in() {
    stream_out_24_user_V_1_ack_in = stream_out_24_user_V_1_state.read()[1];
}

void color_convert::thread_stream_out_24_user_V_1_ack_out() {
    stream_out_24_user_V_1_ack_out = stream_out_24_TREADY.read();
}

void color_convert::thread_stream_out_24_user_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_out_24_user_V_1_sel.read())) {
        stream_out_24_user_V_1_data_out = stream_out_24_user_V_1_payload_B.read();
    } else {
        stream_out_24_user_V_1_data_out = stream_out_24_user_V_1_payload_A.read();
    }
}

void color_convert::thread_stream_out_24_user_V_1_load_A() {
    stream_out_24_user_V_1_load_A = (stream_out_24_user_V_1_state_cmp_full.read() & ~stream_out_24_user_V_1_sel_wr.read());
}

void color_convert::thread_stream_out_24_user_V_1_load_B() {
    stream_out_24_user_V_1_load_B = (stream_out_24_user_V_1_sel_wr.read() & stream_out_24_user_V_1_state_cmp_full.read());
}

void color_convert::thread_stream_out_24_user_V_1_sel() {
    stream_out_24_user_V_1_sel = stream_out_24_user_V_1_sel_rd.read();
}

void color_convert::thread_stream_out_24_user_V_1_state_cmp_full() {
    stream_out_24_user_V_1_state_cmp_full =  (sc_logic) ((!stream_out_24_user_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(stream_out_24_user_V_1_state.read() != ap_const_lv2_1))[0];
}

void color_convert::thread_stream_out_24_user_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        stream_out_24_user_V_1_vld_in = ap_const_logic_1;
    } else {
        stream_out_24_user_V_1_vld_in = ap_const_logic_0;
    }
}

void color_convert::thread_stream_out_24_user_V_1_vld_out() {
    stream_out_24_user_V_1_vld_out = stream_out_24_user_V_1_state.read()[0];
}

void color_convert::thread_tmp_12_fu_437_p3() {
    tmp_12_fu_437_p3 = esl_concat<10,8>(bias_c2_V_read_reg_929.read(), ap_const_lv8_0);
}

void color_convert::thread_tmp_13_fu_478_p1() {
    tmp_13_fu_478_p1 = esl_zext<8,1>(tmp_32_fu_471_p3.read());
}

void color_convert::thread_tmp_14_fu_504_p2() {
    tmp_14_fu_504_p2 = (tmp_34_fu_496_p3.read() ^ ap_const_lv1_1);
}

void color_convert::thread_tmp_15_fu_516_p4() {
    tmp_15_fu_516_p4 = p_Val2_13_fu_448_p2.read().range(19, 16);
}

void color_convert::thread_tmp_16_cast_fu_444_p1() {
    tmp_16_cast_fu_444_p1 = esl_sext<20,18>(tmp_12_fu_437_p3.read());
}

void color_convert::thread_tmp_16_fu_743_p2() {
    tmp_16_fu_743_p2 = (p_38_i1_reg_1020.read() ^ ap_const_lv1_1);
}

void color_convert::thread_tmp_21_fu_564_p3() {
    tmp_21_fu_564_p3 = esl_concat<10,8>(bias_c3_V_read_reg_924.read(), ap_const_lv8_0);
}

void color_convert::thread_tmp_22_fu_605_p1() {
    tmp_22_fu_605_p1 = esl_zext<8,1>(tmp_36_fu_598_p3.read());
}

void color_convert::thread_tmp_23_fu_631_p2() {
    tmp_23_fu_631_p2 = (tmp_38_fu_623_p3.read() ^ ap_const_lv1_1);
}

void color_convert::thread_tmp_24_fu_643_p4() {
    tmp_24_fu_643_p4 = p_Val2_21_fu_575_p2.read().range(19, 16);
}

void color_convert::thread_tmp_25_fu_801_p2() {
    tmp_25_fu_801_p2 = (p_38_i2_reg_1044.read() ^ ap_const_lv1_1);
}

void color_convert::thread_tmp_27_cast_fu_571_p1() {
    tmp_27_cast_fu_571_p1 = esl_sext<20,18>(tmp_21_fu_564_p3.read());
}

void color_convert::thread_tmp_28_fu_344_p3() {
    tmp_28_fu_344_p3 = grp_fu_894_p3.read().range(7, 7);
}

void color_convert::thread_tmp_29_fu_355_p3() {
    tmp_29_fu_355_p3 = p_Val2_5_fu_321_p2.read().range(15, 15);
}

void color_convert::thread_tmp_2_fu_389_p4() {
    tmp_2_fu_389_p4 = p_Val2_5_fu_321_p2.read().range(19, 16);
}

void color_convert::thread_tmp_30_fu_369_p3() {
    tmp_30_fu_369_p3 = p_Val2_7_fu_363_p2.read().range(7, 7);
}

void color_convert::thread_tmp_32_fu_471_p3() {
    tmp_32_fu_471_p3 = grp_fu_904_p3.read().range(7, 7);
}

void color_convert::thread_tmp_33_fu_482_p3() {
    tmp_33_fu_482_p3 = p_Val2_13_fu_448_p2.read().range(15, 15);
}

void color_convert::thread_tmp_34_fu_496_p3() {
    tmp_34_fu_496_p3 = p_Val2_15_fu_490_p2.read().range(7, 7);
}

void color_convert::thread_tmp_36_fu_598_p3() {
    tmp_36_fu_598_p3 = grp_fu_914_p3.read().range(7, 7);
}

void color_convert::thread_tmp_37_fu_609_p3() {
    tmp_37_fu_609_p3 = p_Val2_21_fu_575_p2.read().range(15, 15);
}

void color_convert::thread_tmp_38_fu_623_p3() {
    tmp_38_fu_623_p3 = p_Val2_23_fu_617_p2.read().range(7, 7);
}

void color_convert::thread_tmp_3_cast_fu_317_p1() {
    tmp_3_cast_fu_317_p1 = esl_sext<20,18>(tmp_3_fu_310_p3.read());
}

void color_convert::thread_tmp_3_fu_310_p3() {
    tmp_3_fu_310_p3 = esl_concat<10,8>(bias_c1_V_read_reg_934.read(), ap_const_lv8_0);
}

void color_convert::thread_tmp_5_fu_377_p2() {
    tmp_5_fu_377_p2 = (tmp_30_fu_369_p3.read() ^ ap_const_lv1_1);
}

void color_convert::thread_tmp_7_fu_351_p1() {
    tmp_7_fu_351_p1 = esl_zext<8,1>(tmp_28_fu_344_p3.read());
}

void color_convert::thread_tmp_8_fu_685_p2() {
    tmp_8_fu_685_p2 = (p_38_i_reg_996.read() ^ ap_const_lv1_1);
}

void color_convert::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
break;
        default : 
            ap_NS_fsm = "X";
            break;
    }
}

void color_convert::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"stream_in_24_TDATA\" :  \"" << stream_in_24_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"stream_in_24_TVALID\" :  \"" << stream_in_24_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"stream_in_24_TREADY\" :  \"" << stream_in_24_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"stream_in_24_TUSER\" :  \"" << stream_in_24_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"stream_in_24_TLAST\" :  \"" << stream_in_24_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"stream_out_24_TDATA\" :  \"" << stream_out_24_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"stream_out_24_TVALID\" :  \"" << stream_out_24_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"stream_out_24_TREADY\" :  \"" << stream_out_24_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"stream_out_24_TUSER\" :  \"" << stream_out_24_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"stream_out_24_TLAST\" :  \"" << stream_out_24_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_rst_n_control\" :  \"" << ap_rst_n_control.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

