

================================================================
== Vivado HLS Report for 'color_convert'
================================================================
* Date:           Fri Oct 11 11:34:06 2019

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        color_convert
* Solution:       solution1
* Product family: zynquplus
* Target device:  xczu3eg-sbva484-1-e


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   7.00|     5.698|        0.88|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |    4|    4|    1|    1| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 5


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 1
  Pipeline-0 : II = 1, D = 5, States = { 1 2 3 4 5 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.00>
ST_1 : Operation 6 [2/2] (1.00ns)   --->   "%bias_c3_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %bias_c3_V)"   --->   Operation 6 'read' 'bias_c3_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 7 [2/2] (1.00ns)   --->   "%bias_c2_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %bias_c2_V)"   --->   Operation 7 'read' 'bias_c2_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 8 [2/2] (1.00ns)   --->   "%bias_c1_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %bias_c1_V)"   --->   Operation 8 'read' 'bias_c1_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 9 [2/2] (1.00ns)   --->   "%c3_c3_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c3_c3_V)"   --->   Operation 9 'read' 'c3_c3_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 10 [2/2] (1.00ns)   --->   "%c3_c2_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c3_c2_V)"   --->   Operation 10 'read' 'c3_c2_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 11 [2/2] (1.00ns)   --->   "%c3_c1_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c3_c1_V)"   --->   Operation 11 'read' 'c3_c1_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 12 [2/2] (1.00ns)   --->   "%c2_c3_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c2_c3_V)"   --->   Operation 12 'read' 'c2_c3_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 13 [2/2] (1.00ns)   --->   "%c2_c2_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c2_c2_V)"   --->   Operation 13 'read' 'c2_c2_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 14 [2/2] (1.00ns)   --->   "%c2_c1_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c2_c1_V)"   --->   Operation 14 'read' 'c2_c1_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 15 [2/2] (1.00ns)   --->   "%c1_c3_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c1_c3_V)"   --->   Operation 15 'read' 'c1_c3_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 16 [2/2] (1.00ns)   --->   "%c1_c2_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c1_c2_V)"   --->   Operation 16 'read' 'c1_c2_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 17 [2/2] (1.00ns)   --->   "%c1_c1_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c1_c1_V)"   --->   Operation 17 'read' 'c1_c1_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 18 [2/2] (0.00ns)   --->   "%empty = call { i24, i1, i1 } @_ssdm_op_Read.axis.volatile.i24P.i1P.i1P(i24* %stream_in_24_data, i1* %stream_in_24_user_V, i1* %stream_in_24_last_V)"   --->   Operation 18 'read' 'empty' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 2 <SV = 1> <Delay = 5.69>
ST_2 : Operation 19 [1/2] (1.00ns)   --->   "%bias_c3_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %bias_c3_V)"   --->   Operation 19 'read' 'bias_c3_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 20 [1/2] (1.00ns)   --->   "%bias_c2_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %bias_c2_V)"   --->   Operation 20 'read' 'bias_c2_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 21 [1/2] (1.00ns)   --->   "%bias_c1_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %bias_c1_V)"   --->   Operation 21 'read' 'bias_c1_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 22 [1/2] (1.00ns)   --->   "%c3_c3_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c3_c3_V)"   --->   Operation 22 'read' 'c3_c3_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 23 [1/2] (1.00ns)   --->   "%c3_c2_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c3_c2_V)"   --->   Operation 23 'read' 'c3_c2_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 24 [1/2] (1.00ns)   --->   "%c3_c1_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c3_c1_V)"   --->   Operation 24 'read' 'c3_c1_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 25 [1/2] (1.00ns)   --->   "%c2_c3_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c2_c3_V)"   --->   Operation 25 'read' 'c2_c3_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 26 [1/2] (1.00ns)   --->   "%c2_c2_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c2_c2_V)"   --->   Operation 26 'read' 'c2_c2_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 27 [1/2] (1.00ns)   --->   "%c2_c1_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c2_c1_V)"   --->   Operation 27 'read' 'c2_c1_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 28 [1/2] (1.00ns)   --->   "%c1_c3_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c1_c3_V)"   --->   Operation 28 'read' 'c1_c3_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 29 [1/2] (1.00ns)   --->   "%c1_c2_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c1_c2_V)"   --->   Operation 29 'read' 'c1_c2_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 30 [1/2] (1.00ns)   --->   "%c1_c1_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c1_c1_V)"   --->   Operation 30 'read' 'c1_c1_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 31 [1/2] (0.00ns)   --->   "%empty = call { i24, i1, i1 } @_ssdm_op_Read.axis.volatile.i24P.i1P.i1P(i24* %stream_in_24_data, i1* %stream_in_24_user_V, i1* %stream_in_24_last_V)"   --->   Operation 31 'read' 'empty' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%stream_in_24_data_tm = extractvalue { i24, i1, i1 } %empty, 0"   --->   Operation 32 'extractvalue' 'stream_in_24_data_tm' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%stream_in_24_user_V_s = extractvalue { i24, i1, i1 } %empty, 1"   --->   Operation 33 'extractvalue' 'stream_in_24_user_V_s' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%stream_in_24_last_V_s = extractvalue { i24, i1, i1 } %empty, 2"   --->   Operation 34 'extractvalue' 'stream_in_24_last_V_s' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%loc_V = trunc i24 %stream_in_24_data_tm to i8" [color_convert/color_convert.cpp:42]   --->   Operation 35 'trunc' 'loc_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%loc_V_1 = call i8 @_ssdm_op_PartSelect.i8.i24.i32.i32(i24 %stream_in_24_data_tm, i32 8, i32 15)" [color_convert/color_convert.cpp:43]   --->   Operation 36 'partselect' 'loc_V_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%loc_V_2 = call i8 @_ssdm_op_PartSelect.i8.i24.i32.i32(i24 %stream_in_24_data_tm, i32 16, i32 23)" [color_convert/color_convert.cpp:44]   --->   Operation 37 'partselect' 'loc_V_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%OP1_V = zext i8 %loc_V to i18" [color_convert/color_convert.cpp:46]   --->   Operation 38 'zext' 'OP1_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%OP2_V = sext i10 %c1_c1_V_read to i18" [color_convert/color_convert.cpp:46]   --->   Operation 39 'sext' 'OP2_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.63ns)   --->   "%p_Val2_s = mul i18 %OP1_V, %OP2_V" [color_convert/color_convert.cpp:46]   --->   Operation 40 'mul' 'p_Val2_s' <Predicate = true> <Delay = 0.63> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%OP1_V_1 = zext i8 %loc_V_1 to i18" [color_convert/color_convert.cpp:46]   --->   Operation 41 'zext' 'OP1_V_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%OP2_V_1 = sext i10 %c1_c2_V_read to i18" [color_convert/color_convert.cpp:46]   --->   Operation 42 'sext' 'OP2_V_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (2.49ns)   --->   "%p_Val2_1 = mul i18 %OP1_V_1, %OP2_V_1" [color_convert/color_convert.cpp:46]   --->   Operation 43 'mul' 'p_Val2_1' <Predicate = true> <Delay = 2.49> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 2.49> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%tmp = sext i18 %p_Val2_s to i19" [color_convert/color_convert.cpp:46]   --->   Operation 44 'sext' 'tmp' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%tmp_4 = sext i18 %p_Val2_1 to i19" [color_convert/color_convert.cpp:46]   --->   Operation 45 'sext' 'tmp_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (2.20ns)   --->   "%p_Val2_2 = add i19 %tmp_4, %tmp" [color_convert/color_convert.cpp:46]   --->   Operation 46 'add' 'p_Val2_2' <Predicate = true> <Delay = 2.20> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%OP2_V_3 = sext i10 %c2_c1_V_read to i18" [color_convert/color_convert.cpp:47]   --->   Operation 47 'sext' 'OP2_V_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.63ns)   --->   "%p_Val2_8 = mul i18 %OP1_V, %OP2_V_3" [color_convert/color_convert.cpp:47]   --->   Operation 48 'mul' 'p_Val2_8' <Predicate = true> <Delay = 0.63> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%OP2_V_4 = sext i10 %c2_c2_V_read to i18" [color_convert/color_convert.cpp:47]   --->   Operation 49 'sext' 'OP2_V_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (2.49ns)   --->   "%p_Val2_9 = mul i18 %OP1_V_1, %OP2_V_4" [color_convert/color_convert.cpp:47]   --->   Operation 50 'mul' 'p_Val2_9' <Predicate = true> <Delay = 2.49> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 2.49> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%tmp_6 = sext i18 %p_Val2_8 to i19" [color_convert/color_convert.cpp:47]   --->   Operation 51 'sext' 'tmp_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%tmp_1 = sext i18 %p_Val2_9 to i19" [color_convert/color_convert.cpp:47]   --->   Operation 52 'sext' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (2.20ns)   --->   "%p_Val2_11 = add i19 %tmp_1, %tmp_6" [color_convert/color_convert.cpp:47]   --->   Operation 53 'add' 'p_Val2_11' <Predicate = true> <Delay = 2.20> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%OP2_V_6 = sext i10 %c3_c1_V_read to i18" [color_convert/color_convert.cpp:48]   --->   Operation 54 'sext' 'OP2_V_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.63ns)   --->   "%p_Val2_17 = mul i18 %OP1_V, %OP2_V_6" [color_convert/color_convert.cpp:48]   --->   Operation 55 'mul' 'p_Val2_17' <Predicate = true> <Delay = 0.63> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%OP2_V_7 = sext i10 %c3_c2_V_read to i18" [color_convert/color_convert.cpp:48]   --->   Operation 56 'sext' 'OP2_V_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (2.49ns)   --->   "%p_Val2_16 = mul i18 %OP1_V_1, %OP2_V_7" [color_convert/color_convert.cpp:48]   --->   Operation 57 'mul' 'p_Val2_16' <Predicate = true> <Delay = 2.49> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 2.49> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%tmp_17 = sext i18 %p_Val2_17 to i19" [color_convert/color_convert.cpp:48]   --->   Operation 58 'sext' 'tmp_17' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "%tmp_18 = sext i18 %p_Val2_16 to i19" [color_convert/color_convert.cpp:48]   --->   Operation 59 'sext' 'tmp_18' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (2.20ns)   --->   "%p_Val2_19 = add i19 %tmp_18, %tmp_17" [color_convert/color_convert.cpp:48]   --->   Operation 60 'add' 'p_Val2_19' <Predicate = true> <Delay = 2.20> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>

State 3 <SV = 2> <Delay = 5.47>
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "%OP1_V_2 = zext i8 %loc_V_2 to i18" [color_convert/color_convert.cpp:46]   --->   Operation 61 'zext' 'OP1_V_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 62 [1/1] (0.00ns)   --->   "%OP2_V_2 = sext i10 %c1_c3_V_read to i18" [color_convert/color_convert.cpp:46]   --->   Operation 62 'sext' 'OP2_V_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 63 [1/1] (0.63ns)   --->   "%p_Val2_3 = mul i18 %OP1_V_2, %OP2_V_2" [color_convert/color_convert.cpp:46]   --->   Operation 63 'mul' 'p_Val2_3' <Predicate = true> <Delay = 0.63> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 64 [1/1] (0.00ns)   --->   "%tmp_9 = sext i19 %p_Val2_2 to i20" [color_convert/color_convert.cpp:46]   --->   Operation 64 'sext' 'tmp_9' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 65 [1/1] (0.00ns)   --->   "%tmp_s = sext i18 %p_Val2_3 to i20" [color_convert/color_convert.cpp:46]   --->   Operation 65 'sext' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 66 [1/1] (2.20ns)   --->   "%p_Val2_4 = add i20 %tmp_s, %tmp_9" [color_convert/color_convert.cpp:46]   --->   Operation 66 'add' 'p_Val2_4' <Predicate = true> <Delay = 2.20> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 67 [1/1] (0.00ns)   --->   "%tmp_3 = call i18 @_ssdm_op_BitConcatenate.i18.i10.i8(i10 %bias_c1_V_read, i8 0)" [color_convert/color_convert.cpp:46]   --->   Operation 67 'bitconcatenate' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 68 [1/1] (0.00ns)   --->   "%tmp_3_cast = sext i18 %tmp_3 to i20" [color_convert/color_convert.cpp:46]   --->   Operation 68 'sext' 'tmp_3_cast' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 69 [1/1] (1.06ns)   --->   "%p_Val2_5 = add i20 %p_Val2_4, %tmp_3_cast" [color_convert/color_convert.cpp:46]   --->   Operation 69 'add' 'p_Val2_5' <Predicate = true> <Delay = 1.06> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.90> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 70 [1/1] (0.00ns)   --->   "%signbit = call i1 @_ssdm_op_BitSelect.i1.i20.i32(i20 %p_Val2_5, i32 19)" [color_convert/color_convert.cpp:46]   --->   Operation 70 'bitselect' 'signbit' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 71 [1/1] (0.00ns)   --->   "%p_Val2_6 = call i8 @_ssdm_op_PartSelect.i8.i20.i32.i32(i20 %p_Val2_5, i32 8, i32 15)" [color_convert/color_convert.cpp:46]   --->   Operation 71 'partselect' 'p_Val2_6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 72 [1/1] (0.00ns)   --->   "%tmp_28 = call i1 @_ssdm_op_BitSelect.i1.i20.i32(i20 %p_Val2_4, i32 7)" [color_convert/color_convert.cpp:46]   --->   Operation 72 'bitselect' 'tmp_28' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 73 [1/1] (0.00ns)   --->   "%tmp_7 = zext i1 %tmp_28 to i8" [color_convert/color_convert.cpp:46]   --->   Operation 73 'zext' 'tmp_7' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 74 [1/1] (0.00ns) (grouped into LUT with out node carry)   --->   "%tmp_29 = call i1 @_ssdm_op_BitSelect.i1.i20.i32(i20 %p_Val2_5, i32 15)" [color_convert/color_convert.cpp:46]   --->   Operation 74 'bitselect' 'tmp_29' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 75 [1/1] (0.90ns)   --->   "%p_Val2_7 = add i8 %tmp_7, %p_Val2_6" [color_convert/color_convert.cpp:46]   --->   Operation 75 'add' 'p_Val2_7' <Predicate = true> <Delay = 0.90> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.90> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 76 [1/1] (0.00ns) (grouped into LUT with out node carry)   --->   "%tmp_30 = call i1 @_ssdm_op_BitSelect.i1.i8.i32(i8 %p_Val2_7, i32 7)" [color_convert/color_convert.cpp:46]   --->   Operation 76 'bitselect' 'tmp_30' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 77 [1/1] (0.00ns) (grouped into LUT with out node carry)   --->   "%tmp_5 = xor i1 %tmp_30, true" [color_convert/color_convert.cpp:46]   --->   Operation 77 'xor' 'tmp_5' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 78 [1/1] (0.33ns) (out node of the LUT)   --->   "%carry = and i1 %tmp_29, %tmp_5" [color_convert/color_convert.cpp:46]   --->   Operation 78 'and' 'carry' <Predicate = true> <Delay = 0.33> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 79 [1/1] (0.00ns)   --->   "%tmp_2 = call i4 @_ssdm_op_PartSelect.i4.i20.i32.i32(i20 %p_Val2_5, i32 16, i32 19)" [color_convert/color_convert.cpp:46]   --->   Operation 79 'partselect' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 80 [1/1] (0.88ns)   --->   "%Range1_all_ones = icmp eq i4 %tmp_2, -1" [color_convert/color_convert.cpp:46]   --->   Operation 80 'icmp' 'Range1_all_ones' <Predicate = true> <Delay = 0.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 81 [1/1] (0.88ns)   --->   "%Range1_all_zeros = icmp eq i4 %tmp_2, 0" [color_convert/color_convert.cpp:46]   --->   Operation 81 'icmp' 'Range1_all_zeros' <Predicate = true> <Delay = 0.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 82 [1/1] (0.00ns) (grouped into LUT with out node p_39_demorgan_i)   --->   "%deleted_zeros = select i1 %carry, i1 %Range1_all_ones, i1 %Range1_all_zeros" [color_convert/color_convert.cpp:46]   --->   Operation 82 'select' 'deleted_zeros' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 83 [1/1] (0.33ns)   --->   "%p_38_i = and i1 %carry, %Range1_all_ones" [color_convert/color_convert.cpp:46]   --->   Operation 83 'and' 'p_38_i' <Predicate = true> <Delay = 0.33> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 84 [1/1] (0.33ns) (out node of the LUT)   --->   "%p_39_demorgan_i = or i1 %deleted_zeros, %signbit" [color_convert/color_convert.cpp:46]   --->   Operation 84 'or' 'p_39_demorgan_i' <Predicate = true> <Delay = 0.33> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 85 [1/1] (0.00ns)   --->   "%OP2_V_5 = sext i10 %c2_c3_V_read to i18" [color_convert/color_convert.cpp:47]   --->   Operation 85 'sext' 'OP2_V_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 86 [1/1] (0.63ns)   --->   "%p_Val2_10 = mul i18 %OP1_V_2, %OP2_V_5" [color_convert/color_convert.cpp:47]   --->   Operation 86 'mul' 'p_Val2_10' <Predicate = true> <Delay = 0.63> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 87 [1/1] (0.00ns)   --->   "%tmp_10 = sext i19 %p_Val2_11 to i20" [color_convert/color_convert.cpp:47]   --->   Operation 87 'sext' 'tmp_10' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 88 [1/1] (0.00ns)   --->   "%tmp_11 = sext i18 %p_Val2_10 to i20" [color_convert/color_convert.cpp:47]   --->   Operation 88 'sext' 'tmp_11' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 89 [1/1] (2.20ns)   --->   "%p_Val2_12 = add i20 %tmp_11, %tmp_10" [color_convert/color_convert.cpp:47]   --->   Operation 89 'add' 'p_Val2_12' <Predicate = true> <Delay = 2.20> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 90 [1/1] (0.00ns)   --->   "%tmp_12 = call i18 @_ssdm_op_BitConcatenate.i18.i10.i8(i10 %bias_c2_V_read, i8 0)" [color_convert/color_convert.cpp:47]   --->   Operation 90 'bitconcatenate' 'tmp_12' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 91 [1/1] (0.00ns)   --->   "%tmp_16_cast = sext i18 %tmp_12 to i20" [color_convert/color_convert.cpp:47]   --->   Operation 91 'sext' 'tmp_16_cast' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 92 [1/1] (1.06ns)   --->   "%p_Val2_13 = add i20 %p_Val2_12, %tmp_16_cast" [color_convert/color_convert.cpp:47]   --->   Operation 92 'add' 'p_Val2_13' <Predicate = true> <Delay = 1.06> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.90> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 93 [1/1] (0.00ns)   --->   "%signbit_1 = call i1 @_ssdm_op_BitSelect.i1.i20.i32(i20 %p_Val2_13, i32 19)" [color_convert/color_convert.cpp:47]   --->   Operation 93 'bitselect' 'signbit_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 94 [1/1] (0.00ns)   --->   "%p_Val2_14 = call i8 @_ssdm_op_PartSelect.i8.i20.i32.i32(i20 %p_Val2_13, i32 8, i32 15)" [color_convert/color_convert.cpp:47]   --->   Operation 94 'partselect' 'p_Val2_14' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 95 [1/1] (0.00ns)   --->   "%tmp_32 = call i1 @_ssdm_op_BitSelect.i1.i20.i32(i20 %p_Val2_12, i32 7)" [color_convert/color_convert.cpp:47]   --->   Operation 95 'bitselect' 'tmp_32' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 96 [1/1] (0.00ns)   --->   "%tmp_13 = zext i1 %tmp_32 to i8" [color_convert/color_convert.cpp:47]   --->   Operation 96 'zext' 'tmp_13' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 97 [1/1] (0.00ns) (grouped into LUT with out node carry_1)   --->   "%tmp_33 = call i1 @_ssdm_op_BitSelect.i1.i20.i32(i20 %p_Val2_13, i32 15)" [color_convert/color_convert.cpp:47]   --->   Operation 97 'bitselect' 'tmp_33' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 98 [1/1] (0.90ns)   --->   "%p_Val2_15 = add i8 %tmp_13, %p_Val2_14" [color_convert/color_convert.cpp:47]   --->   Operation 98 'add' 'p_Val2_15' <Predicate = true> <Delay = 0.90> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.90> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 99 [1/1] (0.00ns) (grouped into LUT with out node carry_1)   --->   "%tmp_34 = call i1 @_ssdm_op_BitSelect.i1.i8.i32(i8 %p_Val2_15, i32 7)" [color_convert/color_convert.cpp:47]   --->   Operation 99 'bitselect' 'tmp_34' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 100 [1/1] (0.00ns) (grouped into LUT with out node carry_1)   --->   "%tmp_14 = xor i1 %tmp_34, true" [color_convert/color_convert.cpp:47]   --->   Operation 100 'xor' 'tmp_14' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 101 [1/1] (0.33ns) (out node of the LUT)   --->   "%carry_1 = and i1 %tmp_33, %tmp_14" [color_convert/color_convert.cpp:47]   --->   Operation 101 'and' 'carry_1' <Predicate = true> <Delay = 0.33> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 102 [1/1] (0.00ns)   --->   "%tmp_15 = call i4 @_ssdm_op_PartSelect.i4.i20.i32.i32(i20 %p_Val2_13, i32 16, i32 19)" [color_convert/color_convert.cpp:47]   --->   Operation 102 'partselect' 'tmp_15' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 103 [1/1] (0.88ns)   --->   "%Range1_all_ones_1 = icmp eq i4 %tmp_15, -1" [color_convert/color_convert.cpp:47]   --->   Operation 103 'icmp' 'Range1_all_ones_1' <Predicate = true> <Delay = 0.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 104 [1/1] (0.88ns)   --->   "%Range1_all_zeros_1 = icmp eq i4 %tmp_15, 0" [color_convert/color_convert.cpp:47]   --->   Operation 104 'icmp' 'Range1_all_zeros_1' <Predicate = true> <Delay = 0.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 105 [1/1] (0.00ns) (grouped into LUT with out node p_39_demorgan_i1)   --->   "%deleted_zeros_1 = select i1 %carry_1, i1 %Range1_all_ones_1, i1 %Range1_all_zeros_1" [color_convert/color_convert.cpp:47]   --->   Operation 105 'select' 'deleted_zeros_1' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 106 [1/1] (0.33ns)   --->   "%p_38_i1 = and i1 %carry_1, %Range1_all_ones_1" [color_convert/color_convert.cpp:47]   --->   Operation 106 'and' 'p_38_i1' <Predicate = true> <Delay = 0.33> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 107 [1/1] (0.33ns) (out node of the LUT)   --->   "%p_39_demorgan_i1 = or i1 %deleted_zeros_1, %signbit_1" [color_convert/color_convert.cpp:47]   --->   Operation 107 'or' 'p_39_demorgan_i1' <Predicate = true> <Delay = 0.33> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 108 [1/1] (0.00ns)   --->   "%OP2_V_8 = sext i10 %c3_c3_V_read to i18" [color_convert/color_convert.cpp:48]   --->   Operation 108 'sext' 'OP2_V_8' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 109 [1/1] (0.63ns)   --->   "%p_Val2_18 = mul i18 %OP1_V_2, %OP2_V_8" [color_convert/color_convert.cpp:48]   --->   Operation 109 'mul' 'p_Val2_18' <Predicate = true> <Delay = 0.63> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 110 [1/1] (0.00ns)   --->   "%tmp_19 = sext i19 %p_Val2_19 to i20" [color_convert/color_convert.cpp:48]   --->   Operation 110 'sext' 'tmp_19' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 111 [1/1] (0.00ns)   --->   "%tmp_20 = sext i18 %p_Val2_18 to i20" [color_convert/color_convert.cpp:48]   --->   Operation 111 'sext' 'tmp_20' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 112 [1/1] (2.20ns)   --->   "%p_Val2_20 = add i20 %tmp_20, %tmp_19" [color_convert/color_convert.cpp:48]   --->   Operation 112 'add' 'p_Val2_20' <Predicate = true> <Delay = 2.20> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 113 [1/1] (0.00ns)   --->   "%tmp_21 = call i18 @_ssdm_op_BitConcatenate.i18.i10.i8(i10 %bias_c3_V_read, i8 0)" [color_convert/color_convert.cpp:48]   --->   Operation 113 'bitconcatenate' 'tmp_21' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 114 [1/1] (0.00ns)   --->   "%tmp_27_cast = sext i18 %tmp_21 to i20" [color_convert/color_convert.cpp:48]   --->   Operation 114 'sext' 'tmp_27_cast' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 115 [1/1] (1.06ns)   --->   "%p_Val2_21 = add i20 %p_Val2_20, %tmp_27_cast" [color_convert/color_convert.cpp:48]   --->   Operation 115 'add' 'p_Val2_21' <Predicate = true> <Delay = 1.06> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.90> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 116 [1/1] (0.00ns)   --->   "%signbit_2 = call i1 @_ssdm_op_BitSelect.i1.i20.i32(i20 %p_Val2_21, i32 19)" [color_convert/color_convert.cpp:48]   --->   Operation 116 'bitselect' 'signbit_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 117 [1/1] (0.00ns)   --->   "%p_Val2_22 = call i8 @_ssdm_op_PartSelect.i8.i20.i32.i32(i20 %p_Val2_21, i32 8, i32 15)" [color_convert/color_convert.cpp:48]   --->   Operation 117 'partselect' 'p_Val2_22' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 118 [1/1] (0.00ns)   --->   "%tmp_36 = call i1 @_ssdm_op_BitSelect.i1.i20.i32(i20 %p_Val2_20, i32 7)" [color_convert/color_convert.cpp:48]   --->   Operation 118 'bitselect' 'tmp_36' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 119 [1/1] (0.00ns)   --->   "%tmp_22 = zext i1 %tmp_36 to i8" [color_convert/color_convert.cpp:48]   --->   Operation 119 'zext' 'tmp_22' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 120 [1/1] (0.00ns) (grouped into LUT with out node carry_2)   --->   "%tmp_37 = call i1 @_ssdm_op_BitSelect.i1.i20.i32(i20 %p_Val2_21, i32 15)" [color_convert/color_convert.cpp:48]   --->   Operation 120 'bitselect' 'tmp_37' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 121 [1/1] (0.90ns)   --->   "%p_Val2_23 = add i8 %tmp_22, %p_Val2_22" [color_convert/color_convert.cpp:48]   --->   Operation 121 'add' 'p_Val2_23' <Predicate = true> <Delay = 0.90> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.90> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 122 [1/1] (0.00ns) (grouped into LUT with out node carry_2)   --->   "%tmp_38 = call i1 @_ssdm_op_BitSelect.i1.i8.i32(i8 %p_Val2_23, i32 7)" [color_convert/color_convert.cpp:48]   --->   Operation 122 'bitselect' 'tmp_38' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 123 [1/1] (0.00ns) (grouped into LUT with out node carry_2)   --->   "%tmp_23 = xor i1 %tmp_38, true" [color_convert/color_convert.cpp:48]   --->   Operation 123 'xor' 'tmp_23' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 124 [1/1] (0.33ns) (out node of the LUT)   --->   "%carry_2 = and i1 %tmp_37, %tmp_23" [color_convert/color_convert.cpp:48]   --->   Operation 124 'and' 'carry_2' <Predicate = true> <Delay = 0.33> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 125 [1/1] (0.00ns)   --->   "%tmp_24 = call i4 @_ssdm_op_PartSelect.i4.i20.i32.i32(i20 %p_Val2_21, i32 16, i32 19)" [color_convert/color_convert.cpp:48]   --->   Operation 125 'partselect' 'tmp_24' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 126 [1/1] (0.88ns)   --->   "%Range1_all_ones_2 = icmp eq i4 %tmp_24, -1" [color_convert/color_convert.cpp:48]   --->   Operation 126 'icmp' 'Range1_all_ones_2' <Predicate = true> <Delay = 0.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 127 [1/1] (0.88ns)   --->   "%Range1_all_zeros_2 = icmp eq i4 %tmp_24, 0" [color_convert/color_convert.cpp:48]   --->   Operation 127 'icmp' 'Range1_all_zeros_2' <Predicate = true> <Delay = 0.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 128 [1/1] (0.00ns) (grouped into LUT with out node p_39_demorgan_i2)   --->   "%deleted_zeros_2 = select i1 %carry_2, i1 %Range1_all_ones_2, i1 %Range1_all_zeros_2" [color_convert/color_convert.cpp:48]   --->   Operation 128 'select' 'deleted_zeros_2' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 129 [1/1] (0.33ns)   --->   "%p_38_i2 = and i1 %carry_2, %Range1_all_ones_2" [color_convert/color_convert.cpp:48]   --->   Operation 129 'and' 'p_38_i2' <Predicate = true> <Delay = 0.33> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 130 [1/1] (0.33ns) (out node of the LUT)   --->   "%p_39_demorgan_i2 = or i1 %deleted_zeros_2, %signbit_2" [color_convert/color_convert.cpp:48]   --->   Operation 130 'or' 'p_39_demorgan_i2' <Predicate = true> <Delay = 0.33> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 0.89>
ST_4 : Operation 131 [1/1] (0.00ns) (grouped into LUT with out node p_s)   --->   "%tmp_8 = xor i1 %p_38_i, true" [color_convert/color_convert.cpp:46]   --->   Operation 131 'xor' 'tmp_8' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 132 [1/1] (0.00ns) (grouped into LUT with out node p_s)   --->   "%neg_src = and i1 %signbit, %tmp_8" [color_convert/color_convert.cpp:46]   --->   Operation 132 'and' 'neg_src' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 133 [1/1] (0.00ns) (grouped into LUT with out node neg_src_5_not)   --->   "%signbit_not = xor i1 %signbit, true" [color_convert/color_convert.cpp:46]   --->   Operation 133 'xor' 'signbit_not' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 134 [1/1] (0.33ns) (out node of the LUT)   --->   "%neg_src_5_not = or i1 %p_38_i, %signbit_not" [color_convert/color_convert.cpp:46]   --->   Operation 134 'or' 'neg_src_5_not' <Predicate = true> <Delay = 0.33> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 135 [1/1] (0.00ns) (grouped into LUT with out node out1_V)   --->   "%brmerge_i_i_not = and i1 %p_39_demorgan_i, %neg_src_5_not" [color_convert/color_convert.cpp:46]   --->   Operation 135 'and' 'brmerge_i_i_not' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 136 [1/1] (0.00ns) (grouped into LUT with out node out1_V)   --->   "%p_39_demorgan_i_not = xor i1 %p_39_demorgan_i, true" [color_convert/color_convert.cpp:46]   --->   Operation 136 'xor' 'p_39_demorgan_i_not' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 137 [1/1] (0.00ns) (grouped into LUT with out node out1_V)   --->   "%brmerge = or i1 %neg_src_5_not, %p_39_demorgan_i_not" [color_convert/color_convert.cpp:46]   --->   Operation 137 'or' 'brmerge' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 138 [1/1] (0.00ns) (grouped into LUT with out node out1_V)   --->   "%p_mux = select i1 %brmerge_i_i_not, i8 %p_Val2_7, i8 -1" [color_convert/color_convert.cpp:46]   --->   Operation 138 'select' 'p_mux' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 139 [1/1] (0.44ns) (out node of the LUT)   --->   "%p_s = select i1 %neg_src, i8 0, i8 %p_Val2_7" [color_convert/color_convert.cpp:46]   --->   Operation 139 'select' 'p_s' <Predicate = true> <Delay = 0.44> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 140 [1/1] (0.44ns) (out node of the LUT)   --->   "%out1_V = select i1 %brmerge, i8 %p_mux, i8 %p_s" [color_convert/color_convert.cpp:50]   --->   Operation 140 'select' 'out1_V' <Predicate = true> <Delay = 0.44> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 141 [1/1] (0.00ns) (grouped into LUT with out node p_1)   --->   "%tmp_16 = xor i1 %p_38_i1, true" [color_convert/color_convert.cpp:47]   --->   Operation 141 'xor' 'tmp_16' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 142 [1/1] (0.00ns) (grouped into LUT with out node p_1)   --->   "%neg_src_6 = and i1 %signbit_1, %tmp_16" [color_convert/color_convert.cpp:47]   --->   Operation 142 'and' 'neg_src_6' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 143 [1/1] (0.00ns) (grouped into LUT with out node neg_src_not)   --->   "%signbit_1_not = xor i1 %signbit_1, true" [color_convert/color_convert.cpp:47]   --->   Operation 143 'xor' 'signbit_1_not' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 144 [1/1] (0.33ns) (out node of the LUT)   --->   "%neg_src_not = or i1 %p_38_i1, %signbit_1_not" [color_convert/color_convert.cpp:47]   --->   Operation 144 'or' 'neg_src_not' <Predicate = true> <Delay = 0.33> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 145 [1/1] (0.00ns) (grouped into LUT with out node out2_V)   --->   "%brmerge_i_i463_not = and i1 %p_39_demorgan_i1, %neg_src_not" [color_convert/color_convert.cpp:47]   --->   Operation 145 'and' 'brmerge_i_i463_not' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 146 [1/1] (0.00ns) (grouped into LUT with out node out2_V)   --->   "%p_39_demorgan_i461_no = xor i1 %p_39_demorgan_i1, true" [color_convert/color_convert.cpp:47]   --->   Operation 146 'xor' 'p_39_demorgan_i461_no' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 147 [1/1] (0.00ns) (grouped into LUT with out node out2_V)   --->   "%brmerge1 = or i1 %neg_src_not, %p_39_demorgan_i461_no" [color_convert/color_convert.cpp:47]   --->   Operation 147 'or' 'brmerge1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 148 [1/1] (0.00ns) (grouped into LUT with out node out2_V)   --->   "%p_mux1 = select i1 %brmerge_i_i463_not, i8 %p_Val2_15, i8 -1" [color_convert/color_convert.cpp:47]   --->   Operation 148 'select' 'p_mux1' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 149 [1/1] (0.44ns) (out node of the LUT)   --->   "%p_1 = select i1 %neg_src_6, i8 0, i8 %p_Val2_15" [color_convert/color_convert.cpp:47]   --->   Operation 149 'select' 'p_1' <Predicate = true> <Delay = 0.44> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 150 [1/1] (0.44ns) (out node of the LUT)   --->   "%out2_V = select i1 %brmerge1, i8 %p_mux1, i8 %p_1" [color_convert/color_convert.cpp:51]   --->   Operation 150 'select' 'out2_V' <Predicate = true> <Delay = 0.44> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 151 [1/1] (0.00ns) (grouped into LUT with out node p_2)   --->   "%tmp_25 = xor i1 %p_38_i2, true" [color_convert/color_convert.cpp:48]   --->   Operation 151 'xor' 'tmp_25' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 152 [1/1] (0.00ns) (grouped into LUT with out node p_2)   --->   "%neg_src_7 = and i1 %signbit_2, %tmp_25" [color_convert/color_convert.cpp:48]   --->   Operation 152 'and' 'neg_src_7' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 153 [1/1] (0.00ns) (grouped into LUT with out node neg_src_6_not)   --->   "%signbit_2_not = xor i1 %signbit_2, true" [color_convert/color_convert.cpp:48]   --->   Operation 153 'xor' 'signbit_2_not' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 154 [1/1] (0.33ns) (out node of the LUT)   --->   "%neg_src_6_not = or i1 %p_38_i2, %signbit_2_not" [color_convert/color_convert.cpp:48]   --->   Operation 154 'or' 'neg_src_6_not' <Predicate = true> <Delay = 0.33> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 155 [1/1] (0.00ns) (grouped into LUT with out node out3_V)   --->   "%brmerge_i_i484_not = and i1 %p_39_demorgan_i2, %neg_src_6_not" [color_convert/color_convert.cpp:48]   --->   Operation 155 'and' 'brmerge_i_i484_not' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 156 [1/1] (0.00ns) (grouped into LUT with out node out3_V)   --->   "%p_39_demorgan_i482_no = xor i1 %p_39_demorgan_i2, true" [color_convert/color_convert.cpp:48]   --->   Operation 156 'xor' 'p_39_demorgan_i482_no' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 157 [1/1] (0.00ns) (grouped into LUT with out node out3_V)   --->   "%brmerge2 = or i1 %neg_src_6_not, %p_39_demorgan_i482_no" [color_convert/color_convert.cpp:48]   --->   Operation 157 'or' 'brmerge2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 158 [1/1] (0.00ns) (grouped into LUT with out node out3_V)   --->   "%p_mux2 = select i1 %brmerge_i_i484_not, i8 %p_Val2_23, i8 -1" [color_convert/color_convert.cpp:48]   --->   Operation 158 'select' 'p_mux2' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 159 [1/1] (0.44ns) (out node of the LUT)   --->   "%p_2 = select i1 %neg_src_7, i8 0, i8 %p_Val2_23" [color_convert/color_convert.cpp:48]   --->   Operation 159 'select' 'p_2' <Predicate = true> <Delay = 0.44> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 160 [1/1] (0.44ns) (out node of the LUT)   --->   "%out3_V = select i1 %brmerge2, i8 %p_mux2, i8 %p_2" [color_convert/color_convert.cpp:52]   --->   Operation 160 'select' 'out3_V' <Predicate = true> <Delay = 0.44> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 161 [1/1] (0.00ns)   --->   "%stream_out_24_data_t = call i24 @_ssdm_op_BitConcatenate.i24.i8.i8.i8(i8 %out3_V, i8 %out2_V, i8 %out1_V)" [color_convert/color_convert.cpp:52]   --->   Operation 161 'bitconcatenate' 'stream_out_24_data_t' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 162 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i24P.i1P.i1P(i24* %stream_out_24_data, i1* %stream_out_24_user_V, i1* %stream_out_24_last_V, i24 %stream_out_24_data_t, i1 %stream_in_24_user_V_s, i1 %stream_in_24_last_V_s)" [color_convert/color_convert.cpp:52]   --->   Operation 162 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 5 <SV = 4> <Delay = 0.00>
ST_5 : Operation 163 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i24* %stream_out_24_data), !map !79"   --->   Operation 163 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 164 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i24* %stream_in_24_data), !map !89"   --->   Operation 164 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 165 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %stream_in_24_user_V), !map !99"   --->   Operation 165 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 166 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %stream_in_24_last_V), !map !103"   --->   Operation 166 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 167 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %stream_out_24_user_V), !map !107"   --->   Operation 167 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 168 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %stream_out_24_last_V), !map !111"   --->   Operation 168 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 169 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i10 %c1_c1_V), !map !115"   --->   Operation 169 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 170 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i10 %c1_c2_V), !map !121"   --->   Operation 170 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 171 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i10 %c1_c3_V), !map !125"   --->   Operation 171 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 172 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i10 %c2_c1_V), !map !129"   --->   Operation 172 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 173 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i10 %c2_c2_V), !map !133"   --->   Operation 173 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 174 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i10 %c2_c3_V), !map !137"   --->   Operation 174 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 175 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i10 %c3_c1_V), !map !141"   --->   Operation 175 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 176 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i10 %c3_c2_V), !map !145"   --->   Operation 176 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 177 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i10 %c3_c3_V), !map !149"   --->   Operation 177 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 178 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i10 %bias_c1_V), !map !153"   --->   Operation 178 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 179 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i10 %bias_c2_V), !map !157"   --->   Operation 179 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 180 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i10 %bias_c3_V), !map !161"   --->   Operation 180 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 181 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([14 x i8]* @color_convert_str) nounwind"   --->   Operation 181 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 182 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecClockDomain([8 x i8]* @p_str, [1 x i8]* @p_str1) nounwind" [color_convert/color_convert.cpp:28]   --->   Operation 182 'specclockdomain' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 183 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [13 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [color_convert/color_convert.cpp:29]   --->   Operation 183 'specinterface' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 184 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i10 %c1_c1_V, i10 %c1_c2_V, i10 %c1_c3_V, [10 x i8]* @p_str3, i32 1, i32 1, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [8 x i8]* @p_str4, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [color_convert/color_convert.cpp:30]   --->   Operation 184 'specinterface' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 185 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i10 %c2_c1_V, i10 %c2_c2_V, i10 %c2_c3_V, [10 x i8]* @p_str3, i32 1, i32 1, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [8 x i8]* @p_str4, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [color_convert/color_convert.cpp:31]   --->   Operation 185 'specinterface' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 186 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i10 %c3_c1_V, i10 %c3_c2_V, i10 %c3_c3_V, [10 x i8]* @p_str3, i32 1, i32 1, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [8 x i8]* @p_str4, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [color_convert/color_convert.cpp:32]   --->   Operation 186 'specinterface' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 187 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i10 %bias_c1_V, i10 %bias_c2_V, i10 %bias_c3_V, [10 x i8]* @p_str3, i32 1, i32 1, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [8 x i8]* @p_str4, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [color_convert/color_convert.cpp:33]   --->   Operation 187 'specinterface' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 188 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i24* %stream_in_24_data, i1* %stream_in_24_user_V, i1* %stream_in_24_last_V, [5 x i8]* @p_str5, i32 1, i32 1, [5 x i8]* @p_str6, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind"   --->   Operation 188 'specinterface' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 189 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i24* %stream_out_24_data, i1* %stream_out_24_user_V, i1* %stream_out_24_last_V, [5 x i8]* @p_str5, i32 1, i32 1, [5 x i8]* @p_str6, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind"   --->   Operation 189 'specinterface' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 190 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [color_convert/color_convert.cpp:37]   --->   Operation 190 'specpipeline' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 191 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i24P.i1P.i1P(i24* %stream_out_24_data, i1* %stream_out_24_user_V, i1* %stream_out_24_last_V, i24 %stream_out_24_data_t, i1 %stream_in_24_user_V_s, i1 %stream_in_24_last_V_s)" [color_convert/color_convert.cpp:52]   --->   Operation 191 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_5 : Operation 192 [1/1] (0.00ns)   --->   "ret void" [color_convert/color_convert.cpp:53]   --->   Operation 192 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 7ns, clock uncertainty: 0.875ns.

 <State 1>: 1ns
The critical path consists of the following:
	s_axi read on port 'bias_c3_V' [19]  (1 ns)

 <State 2>: 5.7ns
The critical path consists of the following:
	s_axi read on port 'c3_c2_V' [23]  (1 ns)
	'mul' operation ('__Val2__', color_convert/color_convert.cpp:48) [152]  (2.49 ns)
	'add' operation ('__Val2__', color_convert/color_convert.cpp:48) [155]  (2.21 ns)

 <State 3>: 5.48ns
The critical path consists of the following:
	'mul' operation ('__Val2__', color_convert/color_convert.cpp:48) [157]  (0.638 ns)
	'add' operation ('__Val2__', color_convert/color_convert.cpp:48) [160]  (2.21 ns)
	'add' operation ('__Val2__', color_convert/color_convert.cpp:48) [163]  (1.06 ns)
	'add' operation ('__Val2__', color_convert/color_convert.cpp:48) [169]  (0.907 ns)
	'xor' operation ('tmp_23', color_convert/color_convert.cpp:48) [171]  (0 ns)
	'and' operation ('carry', color_convert/color_convert.cpp:48) [172]  (0.331 ns)
	'and' operation ('p_38_i2', color_convert/color_convert.cpp:48) [177]  (0.331 ns)

 <State 4>: 0.89ns
The critical path consists of the following:
	'xor' operation ('tmp_8', color_convert/color_convert.cpp:46) [98]  (0 ns)
	'and' operation ('neg_src', color_convert/color_convert.cpp:46) [99]  (0 ns)
	'select' operation ('p_s', color_convert/color_convert.cpp:46) [107]  (0.445 ns)
	'select' operation ('out1.V', color_convert/color_convert.cpp:50) [108]  (0.445 ns)

 <State 5>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
