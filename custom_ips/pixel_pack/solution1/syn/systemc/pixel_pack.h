// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _pixel_pack_HH_
#define _pixel_pack_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "pixel_pack_AXILiteS_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_AXILITES_ADDR_WIDTH = 5,
         unsigned int C_S_AXI_AXILITES_DATA_WIDTH = 32>
struct pixel_pack : public sc_module {
    // Port declarations 31
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<24> > stream_in_24_TDATA;
    sc_in< sc_logic > stream_in_24_TVALID;
    sc_out< sc_logic > stream_in_24_TREADY;
    sc_in< sc_lv<1> > stream_in_24_TUSER;
    sc_in< sc_lv<1> > stream_in_24_TLAST;
    sc_out< sc_lv<32> > stream_out_32_TDATA;
    sc_out< sc_logic > stream_out_32_TVALID;
    sc_in< sc_logic > stream_out_32_TREADY;
    sc_out< sc_lv<1> > stream_out_32_TUSER;
    sc_out< sc_lv<1> > stream_out_32_TLAST;
    sc_in< sc_logic > s_axi_AXILiteS_AWVALID;
    sc_out< sc_logic > s_axi_AXILiteS_AWREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_AWADDR;
    sc_in< sc_logic > s_axi_AXILiteS_WVALID;
    sc_out< sc_logic > s_axi_AXILiteS_WREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_WDATA;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH/8> > s_axi_AXILiteS_WSTRB;
    sc_in< sc_logic > s_axi_AXILiteS_ARVALID;
    sc_out< sc_logic > s_axi_AXILiteS_ARREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_ARADDR;
    sc_out< sc_logic > s_axi_AXILiteS_RVALID;
    sc_in< sc_logic > s_axi_AXILiteS_RREADY;
    sc_out< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_RDATA;
    sc_out< sc_lv<2> > s_axi_AXILiteS_RRESP;
    sc_out< sc_logic > s_axi_AXILiteS_BVALID;
    sc_in< sc_logic > s_axi_AXILiteS_BREADY;
    sc_out< sc_lv<2> > s_axi_AXILiteS_BRESP;
    sc_in_clk control;
    sc_in< sc_logic > ap_rst_n_control;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    pixel_pack(sc_module_name name);
    SC_HAS_PROCESS(pixel_pack);

    ~pixel_pack();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    pixel_pack_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>* pixel_pack_AXILiteS_s_axi_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<24> > stream_in_24_data_V_0_data_out;
    sc_signal< sc_logic > stream_in_24_data_V_0_vld_in;
    sc_signal< sc_logic > stream_in_24_data_V_0_vld_out;
    sc_signal< sc_logic > stream_in_24_data_V_0_ack_in;
    sc_signal< sc_logic > stream_in_24_data_V_0_ack_out;
    sc_signal< sc_lv<24> > stream_in_24_data_V_0_payload_A;
    sc_signal< sc_lv<24> > stream_in_24_data_V_0_payload_B;
    sc_signal< sc_logic > stream_in_24_data_V_0_sel_rd;
    sc_signal< sc_logic > stream_in_24_data_V_0_sel_wr;
    sc_signal< sc_logic > stream_in_24_data_V_0_sel;
    sc_signal< sc_logic > stream_in_24_data_V_0_load_A;
    sc_signal< sc_logic > stream_in_24_data_V_0_load_B;
    sc_signal< sc_lv<2> > stream_in_24_data_V_0_state;
    sc_signal< sc_logic > stream_in_24_data_V_0_state_cmp_full;
    sc_signal< sc_lv<1> > stream_in_24_user_V_0_data_out;
    sc_signal< sc_logic > stream_in_24_user_V_0_vld_in;
    sc_signal< sc_logic > stream_in_24_user_V_0_vld_out;
    sc_signal< sc_logic > stream_in_24_user_V_0_ack_in;
    sc_signal< sc_logic > stream_in_24_user_V_0_ack_out;
    sc_signal< sc_lv<1> > stream_in_24_user_V_0_payload_A;
    sc_signal< sc_lv<1> > stream_in_24_user_V_0_payload_B;
    sc_signal< sc_logic > stream_in_24_user_V_0_sel_rd;
    sc_signal< sc_logic > stream_in_24_user_V_0_sel_wr;
    sc_signal< sc_logic > stream_in_24_user_V_0_sel;
    sc_signal< sc_logic > stream_in_24_user_V_0_load_A;
    sc_signal< sc_logic > stream_in_24_user_V_0_load_B;
    sc_signal< sc_lv<2> > stream_in_24_user_V_0_state;
    sc_signal< sc_logic > stream_in_24_user_V_0_state_cmp_full;
    sc_signal< sc_lv<1> > stream_in_24_last_V_0_data_out;
    sc_signal< sc_logic > stream_in_24_last_V_0_vld_in;
    sc_signal< sc_logic > stream_in_24_last_V_0_vld_out;
    sc_signal< sc_logic > stream_in_24_last_V_0_ack_in;
    sc_signal< sc_logic > stream_in_24_last_V_0_ack_out;
    sc_signal< sc_lv<1> > stream_in_24_last_V_0_payload_A;
    sc_signal< sc_lv<1> > stream_in_24_last_V_0_payload_B;
    sc_signal< sc_logic > stream_in_24_last_V_0_sel_rd;
    sc_signal< sc_logic > stream_in_24_last_V_0_sel_wr;
    sc_signal< sc_logic > stream_in_24_last_V_0_sel;
    sc_signal< sc_logic > stream_in_24_last_V_0_load_A;
    sc_signal< sc_logic > stream_in_24_last_V_0_load_B;
    sc_signal< sc_lv<2> > stream_in_24_last_V_0_state;
    sc_signal< sc_logic > stream_in_24_last_V_0_state_cmp_full;
    sc_signal< sc_lv<32> > stream_out_32_data_V_1_data_in;
    sc_signal< sc_lv<32> > stream_out_32_data_V_1_data_out;
    sc_signal< sc_logic > stream_out_32_data_V_1_vld_in;
    sc_signal< sc_logic > stream_out_32_data_V_1_vld_out;
    sc_signal< sc_logic > stream_out_32_data_V_1_ack_in;
    sc_signal< sc_logic > stream_out_32_data_V_1_ack_out;
    sc_signal< sc_lv<32> > stream_out_32_data_V_1_payload_A;
    sc_signal< sc_lv<32> > stream_out_32_data_V_1_payload_B;
    sc_signal< sc_logic > stream_out_32_data_V_1_sel_rd;
    sc_signal< sc_logic > stream_out_32_data_V_1_sel_wr;
    sc_signal< sc_logic > stream_out_32_data_V_1_sel;
    sc_signal< sc_logic > stream_out_32_data_V_1_load_A;
    sc_signal< sc_logic > stream_out_32_data_V_1_load_B;
    sc_signal< sc_lv<2> > stream_out_32_data_V_1_state;
    sc_signal< sc_logic > stream_out_32_data_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > stream_out_32_user_V_1_data_in;
    sc_signal< sc_lv<1> > stream_out_32_user_V_1_data_out;
    sc_signal< sc_logic > stream_out_32_user_V_1_vld_in;
    sc_signal< sc_logic > stream_out_32_user_V_1_vld_out;
    sc_signal< sc_logic > stream_out_32_user_V_1_ack_in;
    sc_signal< sc_logic > stream_out_32_user_V_1_ack_out;
    sc_signal< sc_lv<1> > stream_out_32_user_V_1_payload_A;
    sc_signal< sc_lv<1> > stream_out_32_user_V_1_payload_B;
    sc_signal< sc_logic > stream_out_32_user_V_1_sel_rd;
    sc_signal< sc_logic > stream_out_32_user_V_1_sel_wr;
    sc_signal< sc_logic > stream_out_32_user_V_1_sel;
    sc_signal< sc_logic > stream_out_32_user_V_1_load_A;
    sc_signal< sc_logic > stream_out_32_user_V_1_load_B;
    sc_signal< sc_lv<2> > stream_out_32_user_V_1_state;
    sc_signal< sc_logic > stream_out_32_user_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > stream_out_32_last_V_1_data_in;
    sc_signal< sc_lv<1> > stream_out_32_last_V_1_data_out;
    sc_signal< sc_logic > stream_out_32_last_V_1_vld_in;
    sc_signal< sc_logic > stream_out_32_last_V_1_vld_out;
    sc_signal< sc_logic > stream_out_32_last_V_1_ack_in;
    sc_signal< sc_logic > stream_out_32_last_V_1_ack_out;
    sc_signal< sc_lv<1> > stream_out_32_last_V_1_payload_A;
    sc_signal< sc_lv<1> > stream_out_32_last_V_1_payload_B;
    sc_signal< sc_logic > stream_out_32_last_V_1_sel_rd;
    sc_signal< sc_logic > stream_out_32_last_V_1_sel_wr;
    sc_signal< sc_logic > stream_out_32_last_V_1_sel;
    sc_signal< sc_logic > stream_out_32_last_V_1_load_A;
    sc_signal< sc_logic > stream_out_32_last_V_1_load_B;
    sc_signal< sc_lv<2> > stream_out_32_last_V_1_state;
    sc_signal< sc_logic > stream_out_32_last_V_1_state_cmp_full;
    sc_signal< sc_lv<32> > mode;
    sc_signal< sc_lv<32> > mode_0_data_reg;
    sc_signal< sc_logic > mode_0_vld_reg;
    sc_signal< sc_logic > mode_0_ack_out;
    sc_signal< sc_lv<8> > alpha_V;
    sc_signal< sc_lv<8> > alpha_V_0_data_reg;
    sc_signal< sc_logic > alpha_V_0_vld_reg;
    sc_signal< sc_logic > alpha_V_0_ack_out;
    sc_signal< sc_logic > stream_in_24_TDATA_blk_n;
    sc_signal< sc_lv<19> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp4_stage1;
    sc_signal< sc_logic > ap_enable_reg_pp4_iter0;
    sc_signal< bool > ap_block_pp4_stage1;
    sc_signal< sc_lv<1> > delayed_last_reg_355;
    sc_signal< sc_lv<1> > delayed_last_2_reg_343;
    sc_signal< sc_logic > ap_CS_fsm_pp4_stage2;
    sc_signal< bool > ap_block_pp4_stage2;
    sc_signal< sc_lv<1> > last_2_reg_404;
    sc_signal< sc_logic > ap_CS_fsm_pp4_stage3;
    sc_signal< bool > ap_block_pp4_stage3;
    sc_signal< sc_lv<1> > last_2_1_reg_448;
    sc_signal< sc_logic > ap_CS_fsm_pp4_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp4_iter1;
    sc_signal< bool > ap_block_pp4_stage0;
    sc_signal< sc_lv<1> > last_2_2_reg_492;
    sc_signal< sc_logic > ap_CS_fsm_pp3_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp3_iter0;
    sc_signal< bool > ap_block_pp3_stage0;
    sc_signal< sc_logic > ap_CS_fsm_pp2_stage1;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter0;
    sc_signal< bool > ap_block_pp2_stage1;
    sc_signal< sc_lv<1> > delayed_last_1_reg_179;
    sc_signal< sc_lv<1> > delayed_last_3_reg_167;
    sc_signal< sc_logic > ap_CS_fsm_pp2_stage2;
    sc_signal< bool > ap_block_pp2_stage2;
    sc_signal< sc_lv<1> > last_6_reg_204;
    sc_signal< sc_logic > ap_CS_fsm_pp2_stage3;
    sc_signal< bool > ap_block_pp2_stage3;
    sc_signal< sc_lv<1> > last_6_1_reg_238;
    sc_signal< sc_logic > ap_CS_fsm_pp2_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter1;
    sc_signal< bool > ap_block_pp2_stage0;
    sc_signal< sc_lv<1> > last_6_2_reg_271;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage1;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< bool > ap_block_pp1_stage1;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_logic > stream_out_32_TDATA_blk_n;
    sc_signal< sc_lv<1> > delayed_last_2_reg_343_pp4_iter1_reg;
    sc_signal< sc_logic > ap_enable_reg_pp3_iter1;
    sc_signal< sc_lv<1> > delayed_last_3_reg_167_pp2_iter1_reg;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > ap_rst_n_control_inv;
    sc_signal< bool > ap_block_state10_pp2_stage0_iter0;
    sc_signal< bool > ap_predicate_op153_read_state14;
    sc_signal< bool > ap_block_state14_pp2_stage0_iter1;
    sc_signal< bool > ap_block_state14_io;
    sc_signal< bool > ap_block_pp2_stage0_11001;
    sc_signal< sc_lv<1> > delayed_last_1_reg_179_pp2_iter1_reg;
    sc_signal< sc_lv<32> > p_0467_s_reg_192;
    sc_signal< sc_lv<32> > p_0467_2_3_reg_302;
    sc_signal< bool > ap_block_state20_pp4_stage0_iter0;
    sc_signal< bool > ap_predicate_op235_read_state24;
    sc_signal< bool > ap_block_state24_pp4_stage0_iter1;
    sc_signal< bool > ap_block_state24_io;
    sc_signal< bool > ap_block_pp4_stage0_11001;
    sc_signal< sc_lv<1> > delayed_last_reg_355_pp4_iter1_reg;
    sc_signal< sc_lv<4> > p_071_s_reg_368;
    sc_signal< sc_lv<4> > p_067_s_reg_380;
    sc_signal< sc_lv<96> > p_087_s_reg_392;
    sc_signal< bool > ap_predicate_op191_read_state21;
    sc_signal< bool > ap_block_state21_pp4_stage1_iter0;
    sc_signal< bool > ap_block_state25_pp4_stage1_iter1;
    sc_signal< bool > ap_block_state25_io;
    sc_signal< bool > ap_block_pp4_stage1_11001;
    sc_signal< bool > ap_predicate_op207_read_state22;
    sc_signal< bool > ap_block_state22_pp4_stage2_iter0;
    sc_signal< bool > ap_block_state26_pp4_stage2_iter1;
    sc_signal< bool > ap_block_state26_io;
    sc_signal< bool > ap_block_pp4_stage2_11001;
    sc_signal< sc_lv<4> > p_071_2_3_reg_533;
    sc_signal< sc_lv<4> > p_067_2_3_reg_545;
    sc_signal< sc_lv<96> > p_087_2_3_reg_557;
    sc_signal< sc_lv<8> > alpha_V_read_reg_1069;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > grp_read_fu_138_p2;
    sc_signal< sc_lv<1> > grp_fu_589_p1;
    sc_signal< bool > ap_block_state4_pp0_stage1_iter0;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<1> > user_3_1_fu_615_p2;
    sc_signal< sc_lv<32> > p_Result_2_fu_718_p5;
    sc_signal< bool > ap_block_state8_pp1_stage1_iter0;
    sc_signal< bool > ap_block_pp1_stage1_11001;
    sc_signal< sc_lv<1> > user_2_1_fu_743_p2;
    sc_signal< sc_lv<32> > p_Result_35_1_fu_754_p3;
    sc_signal< bool > ap_predicate_op113_read_state11;
    sc_signal< bool > ap_block_state11_pp2_stage1_iter0;
    sc_signal< bool > ap_block_state15_pp2_stage1_iter1;
    sc_signal< bool > ap_block_state15_io;
    sc_signal< bool > ap_block_pp2_stage1_11001;
    sc_signal< sc_lv<32> > p_Result_9_fu_767_p5;
    sc_signal< sc_lv<1> > user_s_fu_783_p2;
    sc_signal< bool > ap_predicate_op127_read_state12;
    sc_signal< bool > ap_block_state12_pp2_stage2_iter0;
    sc_signal< bool > ap_block_pp2_stage2_11001;
    sc_signal< sc_lv<32> > p_Result_33_1_fu_793_p5;
    sc_signal< sc_lv<1> > user_2_fu_809_p2;
    sc_signal< bool > ap_predicate_op140_read_state13;
    sc_signal< bool > ap_block_state13_pp2_stage3_iter0;
    sc_signal< bool > ap_block_pp2_stage3_11001;
    sc_signal< sc_lv<32> > p_Result_33_2_fu_819_p5;
    sc_signal< bool > ap_block_state17_pp3_stage0_iter0;
    sc_signal< bool > ap_block_state18_pp3_stage0_iter1;
    sc_signal< bool > ap_block_pp3_stage0_11001;
    sc_signal< sc_lv<32> > p_Result_s_fu_859_p3;
    sc_signal< sc_lv<96> > p_Result_7_fu_867_p5;
    sc_signal< sc_lv<4> > tmp_13_fu_879_p4;
    sc_signal< sc_lv<4> > tmp_14_fu_889_p4;
    sc_signal< sc_lv<96> > p_Result_26_1_fu_899_p5;
    sc_signal< sc_lv<4> > tmp_16_fu_911_p4;
    sc_signal< sc_lv<4> > tmp_17_fu_921_p4;
    sc_signal< sc_lv<96> > p_Result_26_2_fu_931_p5;
    sc_signal< bool > ap_predicate_op221_read_state23;
    sc_signal< bool > ap_block_state23_pp4_stage3_iter0;
    sc_signal< bool > ap_block_state27_pp4_stage3_iter1;
    sc_signal< bool > ap_block_state27_io;
    sc_signal< bool > ap_block_pp4_stage3_11001;
    sc_signal< sc_lv<4> > tmp_19_fu_943_p4;
    sc_signal< sc_lv<4> > tmp_20_fu_953_p4;
    sc_signal< sc_lv<32> > tmp_25_fu_998_p1;
    sc_signal< sc_lv<1> > tmp_26_fu_1003_p1;
    sc_signal< sc_lv<32> > p_Result_29_1_reg_1213;
    sc_signal< sc_lv<1> > tmp_28_reg_1218;
    sc_signal< sc_lv<1> > tmp_29_reg_1223;
    sc_signal< sc_lv<32> > p_Result_29_2_reg_1228;
    sc_signal< sc_lv<1> > tmp_30_reg_1233;
    sc_signal< sc_lv<1> > tmp_31_reg_1238;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< bool > ap_block_pp1_stage1_subdone;
    sc_signal< bool > ap_block_state7_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state9_pp1_stage0_iter1;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< bool > ap_block_pp2_stage1_subdone;
    sc_signal< sc_logic > ap_condition_pp2_exit_iter0_state11;
    sc_signal< bool > ap_block_pp2_stage3_subdone;
    sc_signal< bool > ap_block_pp3_stage0_subdone;
    sc_signal< bool > ap_block_pp4_stage1_subdone;
    sc_signal< sc_logic > ap_condition_pp4_exit_iter0_state21;
    sc_signal< bool > ap_block_pp4_stage3_subdone;
    sc_signal< sc_lv<1> > ap_phi_mux_last_6_3_phi_fu_321_p4;
    sc_signal< sc_lv<32> > ap_phi_mux_p_0467_s_phi_fu_196_p4;
    sc_signal< sc_lv<1> > ap_phi_reg_pp2_iter0_last_6_reg_204;
    sc_signal< sc_lv<32> > ap_phi_reg_pp2_iter0_p_0467_2_reg_215;
    sc_signal< sc_lv<1> > ap_phi_reg_pp2_iter0_user_1_reg_226;
    sc_signal< sc_lv<1> > ap_phi_reg_pp2_iter0_last_6_1_reg_238;
    sc_signal< sc_lv<32> > ap_phi_reg_pp2_iter0_p_0467_2_1_reg_249;
    sc_signal< sc_lv<1> > ap_phi_reg_pp2_iter0_user_1_1_reg_260;
    sc_signal< sc_lv<1> > ap_phi_reg_pp2_iter0_last_6_2_reg_271;
    sc_signal< sc_lv<32> > ap_phi_reg_pp2_iter0_p_0467_2_2_reg_282;
    sc_signal< sc_lv<32> > ap_phi_reg_pp2_iter1_p_0467_2_2_reg_282;
    sc_signal< sc_lv<1> > ap_phi_reg_pp2_iter0_user_1_2_reg_292;
    sc_signal< sc_lv<1> > ap_phi_reg_pp2_iter1_user_1_2_reg_292;
    sc_signal< sc_lv<32> > ap_phi_mux_p_0467_2_3_phi_fu_307_p4;
    sc_signal< sc_lv<32> > p_Result_33_3_fu_846_p5;
    sc_signal< sc_lv<32> > ap_phi_reg_pp2_iter1_p_0467_2_3_reg_302;
    sc_signal< sc_lv<1> > ap_phi_reg_pp2_iter1_last_6_3_reg_316;
    sc_signal< sc_lv<1> > ap_phi_mux_user_1_3_phi_fu_334_p4;
    sc_signal< sc_lv<1> > user_3_fu_835_p2;
    sc_signal< sc_lv<1> > ap_phi_reg_pp2_iter1_user_1_3_reg_330;
    sc_signal< sc_lv<1> > ap_phi_mux_last_2_3_phi_fu_573_p4;
    sc_signal< sc_lv<4> > ap_phi_mux_p_071_s_phi_fu_372_p4;
    sc_signal< sc_lv<4> > ap_phi_mux_p_067_s_phi_fu_384_p4;
    sc_signal< sc_lv<96> > ap_phi_mux_p_087_s_phi_fu_396_p4;
    sc_signal< sc_lv<1> > ap_phi_reg_pp4_iter0_last_2_reg_404;
    sc_signal< sc_lv<4> > ap_phi_reg_pp4_iter0_p_071_2_reg_415;
    sc_signal< sc_lv<4> > ap_phi_reg_pp4_iter0_p_067_2_reg_426;
    sc_signal< sc_lv<96> > ap_phi_reg_pp4_iter0_p_087_2_reg_437;
    sc_signal< sc_lv<1> > ap_phi_reg_pp4_iter0_last_2_1_reg_448;
    sc_signal< sc_lv<4> > ap_phi_reg_pp4_iter0_p_071_2_1_reg_459;
    sc_signal< sc_lv<4> > ap_phi_reg_pp4_iter0_p_067_2_1_reg_470;
    sc_signal< sc_lv<96> > ap_phi_reg_pp4_iter0_p_087_2_1_reg_481;
    sc_signal< sc_lv<1> > ap_phi_reg_pp4_iter0_last_2_2_reg_492;
    sc_signal< sc_lv<4> > ap_phi_reg_pp4_iter0_p_071_2_2_reg_503;
    sc_signal< sc_lv<4> > ap_phi_reg_pp4_iter1_p_071_2_2_reg_503;
    sc_signal< sc_lv<4> > ap_phi_reg_pp4_iter0_p_067_2_2_reg_513;
    sc_signal< sc_lv<4> > ap_phi_reg_pp4_iter1_p_067_2_2_reg_513;
    sc_signal< sc_lv<96> > ap_phi_reg_pp4_iter0_p_087_2_2_reg_523;
    sc_signal< sc_lv<96> > ap_phi_reg_pp4_iter1_p_087_2_2_reg_523;
    sc_signal< sc_lv<4> > ap_phi_mux_p_071_2_3_phi_fu_537_p4;
    sc_signal< sc_lv<4> > tmp_22_fu_976_p4;
    sc_signal< sc_lv<4> > ap_phi_reg_pp4_iter1_p_071_2_3_reg_533;
    sc_signal< sc_lv<4> > ap_phi_mux_p_067_2_3_phi_fu_549_p4;
    sc_signal< sc_lv<4> > tmp_23_fu_987_p4;
    sc_signal< sc_lv<4> > ap_phi_reg_pp4_iter1_p_067_2_3_reg_545;
    sc_signal< sc_lv<96> > ap_phi_mux_p_087_2_3_phi_fu_561_p4;
    sc_signal< sc_lv<96> > p_Result_26_3_fu_963_p5;
    sc_signal< sc_lv<96> > ap_phi_reg_pp4_iter1_p_087_2_3_reg_557;
    sc_signal< sc_lv<1> > ap_phi_reg_pp4_iter1_last_2_3_reg_569;
    sc_signal< bool > ap_block_pp0_stage1_01001;
    sc_signal< bool > ap_block_pp1_stage1_01001;
    sc_signal< bool > ap_block_pp2_stage0_01001;
    sc_signal< bool > ap_block_pp3_stage0_01001;
    sc_signal< bool > ap_block_pp4_stage0_01001;
    sc_signal< bool > ap_block_pp4_stage1_01001;
    sc_signal< bool > ap_block_pp4_stage2_01001;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< bool > ap_block_pp1_stage0_01001;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< bool > ap_block_pp2_stage1_01001;
    sc_signal< bool > ap_block_pp4_stage3_01001;
    sc_signal< sc_lv<8> > p_Result_s_30_fu_622_p4;
    sc_signal< sc_lv<8> > p_Result_1_fu_636_p4;
    sc_signal< sc_lv<9> > tmp_fu_632_p1;
    sc_signal< sc_lv<9> > tmp_1_fu_646_p1;
    sc_signal< sc_lv<8> > p_Result_3_fu_656_p4;
    sc_signal< sc_lv<8> > p_Result_4_fu_670_p4;
    sc_signal< sc_lv<9> > tmp_3_fu_666_p1;
    sc_signal< sc_lv<9> > tmp_4_fu_680_p1;
    sc_signal< sc_lv<9> > out_c1_V_fu_650_p2;
    sc_signal< sc_lv<9> > out_c2_V_fu_684_p2;
    sc_signal< sc_lv<8> > p_Result_8_fu_708_p4;
    sc_signal< sc_lv<8> > tmp_12_fu_704_p1;
    sc_signal< sc_lv<8> > p_Result_6_fu_694_p4;
    sc_signal< sc_lv<8> > tmp_11_fu_690_p1;
    sc_signal< sc_lv<16> > tmp_10_fu_750_p1;
    sc_signal< sc_lv<16> > tmp_8_fu_735_p1;
    sc_signal< sc_lv<8> > tmp_15_fu_763_p1;
    sc_signal< sc_lv<8> > tmp_18_fu_789_p1;
    sc_signal< sc_lv<8> > tmp_21_fu_815_p1;
    sc_signal< sc_lv<8> > tmp_24_fu_842_p1;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< bool > ap_block_state6;
    sc_signal< sc_lv<19> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp2_stage0_subdone;
    sc_signal< bool > ap_block_pp2_stage2_subdone;
    sc_signal< bool > ap_block_pp4_stage0_subdone;
    sc_signal< bool > ap_block_pp4_stage2_subdone;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    sc_signal< sc_logic > ap_idle_pp2;
    sc_signal< sc_logic > ap_enable_pp2;
    sc_signal< sc_logic > ap_idle_pp3;
    sc_signal< sc_logic > ap_enable_pp3;
    sc_signal< sc_logic > ap_idle_pp4;
    sc_signal< sc_logic > ap_enable_pp4;
    sc_signal< bool > ap_condition_1111;
    sc_signal< bool > ap_condition_1051;
    sc_signal< bool > ap_condition_1749;
    sc_signal< bool > ap_condition_1753;
    sc_signal< bool > ap_condition_1079;
    sc_signal< bool > ap_condition_1760;
    sc_signal< bool > ap_condition_1764;
    sc_signal< bool > ap_condition_1144;
    sc_signal< bool > ap_condition_1130;
    sc_signal< bool > ap_condition_1122;
    sc_signal< bool > ap_condition_1067;
    sc_signal< bool > ap_condition_873;
    sc_signal< bool > ap_condition_1049;
    sc_signal< bool > ap_condition_1109;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<19> ap_ST_fsm_state1;
    static const sc_lv<19> ap_ST_fsm_state2;
    static const sc_lv<19> ap_ST_fsm_pp0_stage0;
    static const sc_lv<19> ap_ST_fsm_pp0_stage1;
    static const sc_lv<19> ap_ST_fsm_state6;
    static const sc_lv<19> ap_ST_fsm_pp1_stage0;
    static const sc_lv<19> ap_ST_fsm_pp1_stage1;
    static const sc_lv<19> ap_ST_fsm_pp2_stage0;
    static const sc_lv<19> ap_ST_fsm_pp2_stage1;
    static const sc_lv<19> ap_ST_fsm_pp2_stage2;
    static const sc_lv<19> ap_ST_fsm_pp2_stage3;
    static const sc_lv<19> ap_ST_fsm_state16;
    static const sc_lv<19> ap_ST_fsm_pp3_stage0;
    static const sc_lv<19> ap_ST_fsm_state19;
    static const sc_lv<19> ap_ST_fsm_pp4_stage0;
    static const sc_lv<19> ap_ST_fsm_pp4_stage1;
    static const sc_lv<19> ap_ST_fsm_pp4_stage2;
    static const sc_lv<19> ap_ST_fsm_pp4_stage3;
    static const sc_lv<19> ap_ST_fsm_state28;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_F;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_2;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_2F;
    static const sc_lv<32> ap_const_lv32_30;
    static const sc_lv<32> ap_const_lv32_47;
    static const sc_lv<32> ap_const_lv32_48;
    static const sc_lv<32> ap_const_lv32_5F;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_40;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_alpha_V_0_ack_out();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_pp1_stage1();
    void thread_ap_CS_fsm_pp2_stage0();
    void thread_ap_CS_fsm_pp2_stage1();
    void thread_ap_CS_fsm_pp2_stage2();
    void thread_ap_CS_fsm_pp2_stage3();
    void thread_ap_CS_fsm_pp3_stage0();
    void thread_ap_CS_fsm_pp4_stage0();
    void thread_ap_CS_fsm_pp4_stage1();
    void thread_ap_CS_fsm_pp4_stage2();
    void thread_ap_CS_fsm_pp4_stage3();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_01001();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_01001();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_pp1_stage1();
    void thread_ap_block_pp1_stage1_01001();
    void thread_ap_block_pp1_stage1_11001();
    void thread_ap_block_pp1_stage1_subdone();
    void thread_ap_block_pp2_stage0();
    void thread_ap_block_pp2_stage0_01001();
    void thread_ap_block_pp2_stage0_11001();
    void thread_ap_block_pp2_stage0_subdone();
    void thread_ap_block_pp2_stage1();
    void thread_ap_block_pp2_stage1_01001();
    void thread_ap_block_pp2_stage1_11001();
    void thread_ap_block_pp2_stage1_subdone();
    void thread_ap_block_pp2_stage2();
    void thread_ap_block_pp2_stage2_11001();
    void thread_ap_block_pp2_stage2_subdone();
    void thread_ap_block_pp2_stage3();
    void thread_ap_block_pp2_stage3_11001();
    void thread_ap_block_pp2_stage3_subdone();
    void thread_ap_block_pp3_stage0();
    void thread_ap_block_pp3_stage0_01001();
    void thread_ap_block_pp3_stage0_11001();
    void thread_ap_block_pp3_stage0_subdone();
    void thread_ap_block_pp4_stage0();
    void thread_ap_block_pp4_stage0_01001();
    void thread_ap_block_pp4_stage0_11001();
    void thread_ap_block_pp4_stage0_subdone();
    void thread_ap_block_pp4_stage1();
    void thread_ap_block_pp4_stage1_01001();
    void thread_ap_block_pp4_stage1_11001();
    void thread_ap_block_pp4_stage1_subdone();
    void thread_ap_block_pp4_stage2();
    void thread_ap_block_pp4_stage2_01001();
    void thread_ap_block_pp4_stage2_11001();
    void thread_ap_block_pp4_stage2_subdone();
    void thread_ap_block_pp4_stage3();
    void thread_ap_block_pp4_stage3_01001();
    void thread_ap_block_pp4_stage3_11001();
    void thread_ap_block_pp4_stage3_subdone();
    void thread_ap_block_state10_pp2_stage0_iter0();
    void thread_ap_block_state11_pp2_stage1_iter0();
    void thread_ap_block_state12_pp2_stage2_iter0();
    void thread_ap_block_state13_pp2_stage3_iter0();
    void thread_ap_block_state14_io();
    void thread_ap_block_state14_pp2_stage0_iter1();
    void thread_ap_block_state15_io();
    void thread_ap_block_state15_pp2_stage1_iter1();
    void thread_ap_block_state17_pp3_stage0_iter0();
    void thread_ap_block_state18_pp3_stage0_iter1();
    void thread_ap_block_state20_pp4_stage0_iter0();
    void thread_ap_block_state21_pp4_stage1_iter0();
    void thread_ap_block_state22_pp4_stage2_iter0();
    void thread_ap_block_state23_pp4_stage3_iter0();
    void thread_ap_block_state24_io();
    void thread_ap_block_state24_pp4_stage0_iter1();
    void thread_ap_block_state25_io();
    void thread_ap_block_state25_pp4_stage1_iter1();
    void thread_ap_block_state26_io();
    void thread_ap_block_state26_pp4_stage2_iter1();
    void thread_ap_block_state27_io();
    void thread_ap_block_state27_pp4_stage3_iter1();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage1_iter0();
    void thread_ap_block_state5_pp0_stage0_iter1();
    void thread_ap_block_state6();
    void thread_ap_block_state7_pp1_stage0_iter0();
    void thread_ap_block_state8_pp1_stage1_iter0();
    void thread_ap_block_state9_pp1_stage0_iter1();
    void thread_ap_condition_1049();
    void thread_ap_condition_1051();
    void thread_ap_condition_1067();
    void thread_ap_condition_1079();
    void thread_ap_condition_1109();
    void thread_ap_condition_1111();
    void thread_ap_condition_1122();
    void thread_ap_condition_1130();
    void thread_ap_condition_1144();
    void thread_ap_condition_1749();
    void thread_ap_condition_1753();
    void thread_ap_condition_1760();
    void thread_ap_condition_1764();
    void thread_ap_condition_873();
    void thread_ap_condition_pp2_exit_iter0_state11();
    void thread_ap_condition_pp4_exit_iter0_state21();
    void thread_ap_enable_pp0();
    void thread_ap_enable_pp1();
    void thread_ap_enable_pp2();
    void thread_ap_enable_pp3();
    void thread_ap_enable_pp4();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp1();
    void thread_ap_idle_pp2();
    void thread_ap_idle_pp3();
    void thread_ap_idle_pp4();
    void thread_ap_phi_mux_last_2_3_phi_fu_573_p4();
    void thread_ap_phi_mux_last_6_3_phi_fu_321_p4();
    void thread_ap_phi_mux_p_0467_2_3_phi_fu_307_p4();
    void thread_ap_phi_mux_p_0467_s_phi_fu_196_p4();
    void thread_ap_phi_mux_p_067_2_3_phi_fu_549_p4();
    void thread_ap_phi_mux_p_067_s_phi_fu_384_p4();
    void thread_ap_phi_mux_p_071_2_3_phi_fu_537_p4();
    void thread_ap_phi_mux_p_071_s_phi_fu_372_p4();
    void thread_ap_phi_mux_p_087_2_3_phi_fu_561_p4();
    void thread_ap_phi_mux_p_087_s_phi_fu_396_p4();
    void thread_ap_phi_mux_user_1_3_phi_fu_334_p4();
    void thread_ap_phi_reg_pp2_iter0_last_6_1_reg_238();
    void thread_ap_phi_reg_pp2_iter0_last_6_2_reg_271();
    void thread_ap_phi_reg_pp2_iter0_last_6_reg_204();
    void thread_ap_phi_reg_pp2_iter0_p_0467_2_2_reg_282();
    void thread_ap_phi_reg_pp2_iter0_user_1_2_reg_292();
    void thread_ap_phi_reg_pp2_iter1_last_6_3_reg_316();
    void thread_ap_phi_reg_pp2_iter1_p_0467_2_3_reg_302();
    void thread_ap_phi_reg_pp2_iter1_user_1_3_reg_330();
    void thread_ap_phi_reg_pp4_iter0_last_2_1_reg_448();
    void thread_ap_phi_reg_pp4_iter0_last_2_2_reg_492();
    void thread_ap_phi_reg_pp4_iter0_last_2_reg_404();
    void thread_ap_phi_reg_pp4_iter0_p_067_2_2_reg_513();
    void thread_ap_phi_reg_pp4_iter0_p_071_2_2_reg_503();
    void thread_ap_phi_reg_pp4_iter0_p_087_2_2_reg_523();
    void thread_ap_phi_reg_pp4_iter1_last_2_3_reg_569();
    void thread_ap_phi_reg_pp4_iter1_p_067_2_3_reg_545();
    void thread_ap_phi_reg_pp4_iter1_p_071_2_3_reg_533();
    void thread_ap_phi_reg_pp4_iter1_p_087_2_3_reg_557();
    void thread_ap_predicate_op113_read_state11();
    void thread_ap_predicate_op127_read_state12();
    void thread_ap_predicate_op140_read_state13();
    void thread_ap_predicate_op153_read_state14();
    void thread_ap_predicate_op191_read_state21();
    void thread_ap_predicate_op207_read_state22();
    void thread_ap_predicate_op221_read_state23();
    void thread_ap_predicate_op235_read_state24();
    void thread_ap_rst_n_control_inv();
    void thread_ap_rst_n_inv();
    void thread_grp_fu_589_p1();
    void thread_grp_read_fu_138_p2();
    void thread_mode_0_ack_out();
    void thread_out_c1_V_fu_650_p2();
    void thread_out_c2_V_fu_684_p2();
    void thread_p_Result_1_fu_636_p4();
    void thread_p_Result_26_1_fu_899_p5();
    void thread_p_Result_26_2_fu_931_p5();
    void thread_p_Result_26_3_fu_963_p5();
    void thread_p_Result_2_fu_718_p5();
    void thread_p_Result_33_1_fu_793_p5();
    void thread_p_Result_33_2_fu_819_p5();
    void thread_p_Result_33_3_fu_846_p5();
    void thread_p_Result_35_1_fu_754_p3();
    void thread_p_Result_3_fu_656_p4();
    void thread_p_Result_4_fu_670_p4();
    void thread_p_Result_6_fu_694_p4();
    void thread_p_Result_7_fu_867_p5();
    void thread_p_Result_8_fu_708_p4();
    void thread_p_Result_9_fu_767_p5();
    void thread_p_Result_s_30_fu_622_p4();
    void thread_p_Result_s_fu_859_p3();
    void thread_stream_in_24_TDATA_blk_n();
    void thread_stream_in_24_TREADY();
    void thread_stream_in_24_data_V_0_ack_in();
    void thread_stream_in_24_data_V_0_ack_out();
    void thread_stream_in_24_data_V_0_data_out();
    void thread_stream_in_24_data_V_0_load_A();
    void thread_stream_in_24_data_V_0_load_B();
    void thread_stream_in_24_data_V_0_sel();
    void thread_stream_in_24_data_V_0_state_cmp_full();
    void thread_stream_in_24_data_V_0_vld_in();
    void thread_stream_in_24_data_V_0_vld_out();
    void thread_stream_in_24_last_V_0_ack_in();
    void thread_stream_in_24_last_V_0_ack_out();
    void thread_stream_in_24_last_V_0_data_out();
    void thread_stream_in_24_last_V_0_load_A();
    void thread_stream_in_24_last_V_0_load_B();
    void thread_stream_in_24_last_V_0_sel();
    void thread_stream_in_24_last_V_0_state_cmp_full();
    void thread_stream_in_24_last_V_0_vld_in();
    void thread_stream_in_24_last_V_0_vld_out();
    void thread_stream_in_24_user_V_0_ack_in();
    void thread_stream_in_24_user_V_0_ack_out();
    void thread_stream_in_24_user_V_0_data_out();
    void thread_stream_in_24_user_V_0_load_A();
    void thread_stream_in_24_user_V_0_load_B();
    void thread_stream_in_24_user_V_0_sel();
    void thread_stream_in_24_user_V_0_state_cmp_full();
    void thread_stream_in_24_user_V_0_vld_in();
    void thread_stream_in_24_user_V_0_vld_out();
    void thread_stream_out_32_TDATA();
    void thread_stream_out_32_TDATA_blk_n();
    void thread_stream_out_32_TLAST();
    void thread_stream_out_32_TUSER();
    void thread_stream_out_32_TVALID();
    void thread_stream_out_32_data_V_1_ack_in();
    void thread_stream_out_32_data_V_1_ack_out();
    void thread_stream_out_32_data_V_1_data_in();
    void thread_stream_out_32_data_V_1_data_out();
    void thread_stream_out_32_data_V_1_load_A();
    void thread_stream_out_32_data_V_1_load_B();
    void thread_stream_out_32_data_V_1_sel();
    void thread_stream_out_32_data_V_1_state_cmp_full();
    void thread_stream_out_32_data_V_1_vld_in();
    void thread_stream_out_32_data_V_1_vld_out();
    void thread_stream_out_32_last_V_1_ack_in();
    void thread_stream_out_32_last_V_1_ack_out();
    void thread_stream_out_32_last_V_1_data_in();
    void thread_stream_out_32_last_V_1_data_out();
    void thread_stream_out_32_last_V_1_load_A();
    void thread_stream_out_32_last_V_1_load_B();
    void thread_stream_out_32_last_V_1_sel();
    void thread_stream_out_32_last_V_1_state_cmp_full();
    void thread_stream_out_32_last_V_1_vld_in();
    void thread_stream_out_32_last_V_1_vld_out();
    void thread_stream_out_32_user_V_1_ack_in();
    void thread_stream_out_32_user_V_1_ack_out();
    void thread_stream_out_32_user_V_1_data_in();
    void thread_stream_out_32_user_V_1_data_out();
    void thread_stream_out_32_user_V_1_load_A();
    void thread_stream_out_32_user_V_1_load_B();
    void thread_stream_out_32_user_V_1_sel();
    void thread_stream_out_32_user_V_1_state_cmp_full();
    void thread_stream_out_32_user_V_1_vld_in();
    void thread_stream_out_32_user_V_1_vld_out();
    void thread_tmp_10_fu_750_p1();
    void thread_tmp_11_fu_690_p1();
    void thread_tmp_12_fu_704_p1();
    void thread_tmp_13_fu_879_p4();
    void thread_tmp_14_fu_889_p4();
    void thread_tmp_15_fu_763_p1();
    void thread_tmp_16_fu_911_p4();
    void thread_tmp_17_fu_921_p4();
    void thread_tmp_18_fu_789_p1();
    void thread_tmp_19_fu_943_p4();
    void thread_tmp_1_fu_646_p1();
    void thread_tmp_20_fu_953_p4();
    void thread_tmp_21_fu_815_p1();
    void thread_tmp_22_fu_976_p4();
    void thread_tmp_23_fu_987_p4();
    void thread_tmp_24_fu_842_p1();
    void thread_tmp_25_fu_998_p1();
    void thread_tmp_26_fu_1003_p1();
    void thread_tmp_3_fu_666_p1();
    void thread_tmp_4_fu_680_p1();
    void thread_tmp_8_fu_735_p1();
    void thread_tmp_fu_632_p1();
    void thread_user_2_1_fu_743_p2();
    void thread_user_2_fu_809_p2();
    void thread_user_3_1_fu_615_p2();
    void thread_user_3_fu_835_p2();
    void thread_user_s_fu_783_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
