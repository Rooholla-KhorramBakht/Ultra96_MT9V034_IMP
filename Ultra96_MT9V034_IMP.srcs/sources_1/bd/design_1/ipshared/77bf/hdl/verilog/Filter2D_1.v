// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Filter2D_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_src_data_stream_V_dout,
        p_src_data_stream_V_empty_n,
        p_src_data_stream_V_read,
        p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state7 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] p_src_data_stream_V_dout;
input   p_src_data_stream_V_empty_n;
output   p_src_data_stream_V_read;
output  [7:0] p_dst_data_stream_V_din;
input   p_dst_data_stream_V_full_n;
output   p_dst_data_stream_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_data_stream_V_read;
reg p_dst_data_stream_V_write;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_src_data_stream_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond388_i_reg_1463;
reg   [0:0] or_cond_i_i_reg_1472;
reg   [0:0] icmp_reg_1428;
reg   [0:0] tmp_s_reg_1419;
reg    p_dst_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter3;
reg   [0:0] or_cond_i_reg_1506;
reg   [0:0] or_cond_i_reg_1506_pp0_iter2_reg;
reg   [9:0] t_V_2_reg_305;
wire   [0:0] exitcond389_i_fu_320_p2;
wire    ap_CS_fsm_state2;
wire   [8:0] i_V_fu_326_p2;
reg   [8:0] i_V_reg_1414;
wire   [0:0] tmp_s_fu_332_p2;
wire   [0:0] tmp_518_0_not_fu_338_p2;
reg   [0:0] tmp_518_0_not_reg_1423;
wire   [0:0] icmp_fu_354_p2;
wire   [0:0] tmp_2_fu_360_p2;
reg   [0:0] tmp_2_reg_1433;
wire   [0:0] tmp_562_1_fu_366_p2;
reg   [0:0] tmp_562_1_reg_1437;
wire   [0:0] tmp_3_fu_372_p2;
reg   [0:0] tmp_3_reg_1441;
wire   [1:0] row_assign_13_0_t_fu_526_p2;
reg   [1:0] row_assign_13_0_t_reg_1448;
wire   [1:0] row_assign_13_1_t_fu_564_p2;
reg   [1:0] row_assign_13_1_t_reg_1453;
wire   [1:0] row_assign_13_2_t_fu_602_p2;
reg   [1:0] row_assign_13_2_t_reg_1458;
wire   [0:0] exitcond388_i_fu_612_p2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_predicate_op147_read_state4;
reg    ap_predicate_op158_read_state4;
reg    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
reg    ap_block_state6_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond388_i_reg_1463_pp0_iter1_reg;
wire   [9:0] j_V_fu_618_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] or_cond_i_i_fu_670_p2;
wire   [1:0] tmp_43_fu_760_p1;
reg   [1:0] tmp_43_reg_1476;
wire   [0:0] brmerge_fu_764_p2;
reg   [0:0] brmerge_reg_1481;
reg   [9:0] k_buf_0_val_3_addr_reg_1488;
reg   [9:0] k_buf_0_val_4_addr_reg_1494;
reg   [9:0] k_buf_0_val_5_addr_reg_1500;
wire   [0:0] or_cond_i_fu_776_p2;
reg   [0:0] or_cond_i_reg_1506_pp0_iter1_reg;
wire   [7:0] src_kernel_win_0_va_6_fu_908_p3;
reg   [7:0] src_kernel_win_0_va_6_reg_1510;
wire   [7:0] src_kernel_win_0_va_7_fu_926_p3;
reg   [7:0] src_kernel_win_0_va_7_reg_1516;
wire   [7:0] src_kernel_win_0_va_8_fu_944_p3;
reg   [7:0] src_kernel_win_0_va_8_reg_1522;
wire   [20:0] r_V_10_1_1_fu_1300_p2;
reg   [20:0] r_V_10_1_1_reg_1528;
reg   [7:0] src_kernel_win_0_va_16_reg_1533;
wire   [25:0] p_Val2_91_2_fu_1126_p2;
reg   [25:0] p_Val2_91_2_reg_1538;
wire   [24:0] grp_fu_1325_p3;
reg   [24:0] tmp5_reg_1543;
reg    ap_enable_reg_pp0_iter2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter1_state4;
wire   [9:0] k_buf_0_val_3_address0;
reg    k_buf_0_val_3_ce0;
wire   [7:0] k_buf_0_val_3_q0;
reg    k_buf_0_val_3_ce1;
reg    k_buf_0_val_3_we1;
wire   [9:0] k_buf_0_val_4_address0;
reg    k_buf_0_val_4_ce0;
wire   [7:0] k_buf_0_val_4_q0;
reg    k_buf_0_val_4_ce1;
reg    k_buf_0_val_4_we1;
reg   [7:0] k_buf_0_val_4_d1;
wire   [9:0] k_buf_0_val_5_address0;
reg    k_buf_0_val_5_ce0;
wire   [7:0] k_buf_0_val_5_q0;
reg    k_buf_0_val_5_ce1;
reg    k_buf_0_val_5_we1;
reg   [7:0] k_buf_0_val_5_d1;
reg   [8:0] t_V_reg_294;
wire    ap_CS_fsm_state7;
wire   [63:0] tmp_26_fu_769_p1;
reg    ap_block_pp0_stage0_01001;
reg   [7:0] src_kernel_win_0_va_fu_168;
reg   [7:0] src_kernel_win_0_va_1_fu_172;
reg   [7:0] src_kernel_win_0_va_2_fu_176;
reg   [7:0] src_kernel_win_0_va_3_fu_180;
reg   [7:0] src_kernel_win_0_va_4_fu_184;
reg   [7:0] src_kernel_win_0_va_5_fu_188;
reg   [7:0] right_border_buf_0_s_fu_192;
wire   [7:0] col_buf_0_val_0_0_fu_816_p3;
reg   [7:0] right_border_buf_0_1_fu_196;
reg   [7:0] right_border_buf_0_2_fu_200;
reg   [7:0] right_border_buf_0_3_fu_204;
wire   [7:0] col_buf_0_val_1_0_fu_835_p3;
reg   [7:0] right_border_buf_0_4_fu_208;
reg   [7:0] right_border_buf_0_5_fu_212;
wire   [7:0] col_buf_0_val_2_0_fu_854_p3;
wire   [7:0] tmp_6_fu_344_p4;
wire   [9:0] t_V_cast_fu_316_p1;
wire   [1:0] tmp_8_fu_378_p1;
wire   [9:0] tmp_5_fu_382_p2;
wire   [0:0] tmp_10_fu_394_p3;
wire   [0:0] tmp_7_fu_408_p2;
wire   [0:0] rev_fu_402_p2;
wire   [0:0] tmp_11_fu_420_p3;
wire   [9:0] p_assign_s_fu_428_p2;
wire   [9:0] p_p2_i425_i_fu_434_p3;
wire   [1:0] tmp_12_fu_442_p1;
wire   [9:0] p_assign_14_1_fu_458_p2;
wire   [9:0] p_assign_14_2_fu_484_p2;
wire   [0:0] tmp_9_fu_446_p2;
wire   [1:0] p_assign_1_fu_452_p2;
wire   [0:0] or_cond_i424_i_fu_414_p2;
wire   [1:0] tmp_68_cast_fu_388_p2;
wire   [1:0] p_p2_i425_i_p_assign_s_fu_510_p3;
wire   [1:0] y_2_fu_518_p3;
wire   [1:0] tmp_20_fu_480_p1;
wire   [0:0] tmp_15_fu_472_p3;
wire   [1:0] tmp_27_fu_538_p2;
wire   [1:0] tmp_29_fu_544_p1;
wire   [0:0] tmp_14_fu_464_p3;
wire   [1:0] tmp_4_fu_548_p3;
wire   [1:0] tmp_1_fu_532_p2;
wire   [1:0] tmp_13_fu_556_p3;
wire   [1:0] tmp_25_fu_506_p1;
wire   [0:0] tmp_24_fu_498_p3;
wire   [1:0] tmp_38_fu_576_p2;
wire   [1:0] tmp_39_fu_582_p1;
wire   [0:0] tmp_21_fu_490_p3;
wire   [1:0] tmp_17_fu_586_p3;
wire   [1:0] tmp_16_fu_570_p2;
wire   [1:0] tmp_18_fu_594_p3;
wire   [8:0] tmp_40_fu_624_p4;
wire   [10:0] t_V_3_cast_fu_608_p1;
wire  signed [10:0] ImagLoc_x_fu_640_p2;
wire   [0:0] tmp_41_fu_650_p3;
wire   [0:0] tmp_22_fu_664_p2;
wire   [0:0] rev1_fu_658_p2;
wire   [0:0] tmp_42_fu_676_p3;
wire   [10:0] p_assign_3_fu_684_p2;
wire  signed [10:0] p_p2_i_i_fu_690_p3;
wire  signed [11:0] p_p2_i_i_cast_fu_702_p1;
wire  signed [11:0] ImagLoc_x_cast_fu_646_p1;
wire   [11:0] p_assign_4_fu_712_p2;
wire   [11:0] p_assign_5_fu_718_p3;
wire   [0:0] tmp_26_not_fu_730_p2;
wire   [0:0] tmp_23_fu_706_p2;
wire   [0:0] sel_tmp7_fu_736_p2;
wire   [0:0] sel_tmp8_fu_742_p2;
wire  signed [12:0] p_p2_i_i_cast6_fu_698_p1;
wire   [12:0] sel_tmp_cast_fu_726_p1;
wire  signed [12:0] x_fu_748_p3;
wire  signed [31:0] col_assign_cast_fu_756_p1;
wire   [0:0] icmp1_fu_634_p2;
wire   [1:0] col_assign_6_t_fu_799_p2;
wire   [7:0] tmp_28_fu_804_p5;
wire   [7:0] tmp_30_fu_823_p5;
wire   [7:0] tmp_31_fu_842_p5;
wire   [7:0] tmp_32_fu_897_p5;
wire   [7:0] tmp_33_fu_915_p5;
wire   [7:0] tmp_34_fu_933_p5;
wire   [18:0] p_shl1_fu_985_p3;
wire   [9:0] p_shl2_fu_997_p3;
wire   [19:0] p_shl1_cast_fu_993_p1;
wire   [19:0] p_shl2_cast_fu_1005_p1;
wire   [19:0] r_V_10_0_1_fu_1009_p2;
wire  signed [23:0] r_V_10_0_1_cast_fu_1015_p1;
wire   [24:0] grp_fu_1306_p4;
wire   [18:0] p_shl3_fu_1029_p3;
wire   [9:0] p_shl4_fu_1041_p3;
wire   [19:0] p_shl3_cast_fu_1037_p1;
wire   [19:0] p_shl4_cast_fu_1049_p1;
wire   [19:0] r_V_10_1_fu_1053_p2;
wire  signed [23:0] r_V_10_1_cast_fu_1059_p1;
wire   [18:0] p_shl5_fu_1067_p3;
wire   [9:0] p_shl6_fu_1078_p3;
wire   [19:0] p_shl5_cast_fu_1074_p1;
wire   [19:0] p_shl6_cast_fu_1085_p1;
wire   [19:0] r_V_10_1_2_fu_1089_p2;
wire  signed [23:0] r_V_10_1_2_cast_fu_1095_p1;
wire   [25:0] p_Val2_91_0_2_cast_fu_1026_p1;
wire   [25:0] tmp_606_1_cast_fu_1063_p1;
wire   [20:0] grp_fu_1317_p3;
wire   [24:0] tmp4_cast_fu_1113_p1;
wire   [24:0] tmp_606_1_2_cast_cas_fu_1099_p1;
wire   [24:0] tmp3_fu_1116_p2;
wire   [25:0] tmp3_cast_fu_1122_p1;
wire   [25:0] tmp2_fu_1107_p2;
wire   [18:0] p_shl_fu_1132_p3;
wire   [9:0] p_shl7_fu_1144_p3;
wire   [19:0] p_shl_cast_fu_1140_p1;
wire   [19:0] p_shl7_cast_fu_1152_p1;
wire   [19:0] r_V_10_2_1_fu_1156_p2;
wire  signed [23:0] r_V_10_2_1_cast_fu_1162_p1;
wire   [26:0] tmp5_cast_fu_1204_p1;
wire   [26:0] p_Val2_91_2_cast_fu_1201_p1;
wire   [26:0] p_Val2_1_fu_1207_p2;
wire   [0:0] tmp_46_fu_1223_p3;
wire   [7:0] p_Val2_2_fu_1213_p4;
wire   [7:0] tmp_4_i_i_fu_1231_p1;
wire   [7:0] p_Val2_3_fu_1243_p2;
wire   [0:0] tmp_47_fu_1235_p3;
wire   [0:0] tmp_48_fu_1249_p3;
wire   [0:0] not_Result_4_i_i_fu_1257_p2;
wire   [4:0] tmp_35_fu_1269_p4;
wire   [0:0] Range1_all_zeros_fu_1279_p2;
wire   [0:0] carry_fu_1263_p2;
wire   [0:0] brmerge_i_i_not_i_i_fu_1285_p2;
wire   [7:0] r_V_10_1_1_fu_1300_p0;
wire   [13:0] r_V_10_1_1_fu_1300_p1;
wire   [7:0] grp_fu_1306_p0;
wire   [7:0] grp_fu_1306_p1;
wire   [10:0] grp_fu_1306_p2;
wire   [23:0] grp_fu_1306_p3;
wire   [7:0] grp_fu_1317_p0;
wire   [10:0] grp_fu_1317_p1;
wire   [7:0] grp_fu_1325_p0;
wire   [10:0] grp_fu_1325_p1;
wire   [23:0] grp_fu_1325_p2;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [8:0] grp_fu_1306_p00;
wire   [8:0] grp_fu_1306_p10;
wire   [24:0] grp_fu_1306_p30;
wire   [18:0] grp_fu_1317_p00;
wire   [18:0] grp_fu_1325_p00;
wire   [24:0] grp_fu_1325_p20;
wire   [20:0] r_V_10_1_1_fu_1300_p00;
reg    ap_condition_314;
reg    ap_condition_45;
reg    ap_condition_308;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 752 ),
    .AddressWidth( 10 ))
k_buf_0_val_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_3_address0),
    .ce0(k_buf_0_val_3_ce0),
    .q0(k_buf_0_val_3_q0),
    .address1(k_buf_0_val_3_addr_reg_1488),
    .ce1(k_buf_0_val_3_ce1),
    .we1(k_buf_0_val_3_we1),
    .d1(p_src_data_stream_V_dout)
);

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 752 ),
    .AddressWidth( 10 ))
k_buf_0_val_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_4_address0),
    .ce0(k_buf_0_val_4_ce0),
    .q0(k_buf_0_val_4_q0),
    .address1(k_buf_0_val_4_addr_reg_1494),
    .ce1(k_buf_0_val_4_ce1),
    .we1(k_buf_0_val_4_we1),
    .d1(k_buf_0_val_4_d1)
);

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 752 ),
    .AddressWidth( 10 ))
k_buf_0_val_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_5_address0),
    .ce0(k_buf_0_val_5_ce0),
    .q0(k_buf_0_val_5_q0),
    .address1(k_buf_0_val_5_addr_reg_1500),
    .ce1(k_buf_0_val_5_ce1),
    .we1(k_buf_0_val_5_we1),
    .d1(k_buf_0_val_5_d1)
);

image_processing_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
image_processing_hbi_U29(
    .din0(right_border_buf_0_s_fu_192),
    .din1(right_border_buf_0_1_fu_196),
    .din2(8'd0),
    .din3(col_assign_6_t_fu_799_p2),
    .dout(tmp_28_fu_804_p5)
);

image_processing_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
image_processing_hbi_U30(
    .din0(right_border_buf_0_3_fu_204),
    .din1(right_border_buf_0_4_fu_208),
    .din2(8'd0),
    .din3(col_assign_6_t_fu_799_p2),
    .dout(tmp_30_fu_823_p5)
);

image_processing_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
image_processing_hbi_U31(
    .din0(right_border_buf_0_5_fu_212),
    .din1(right_border_buf_0_2_fu_200),
    .din2(8'd0),
    .din3(col_assign_6_t_fu_799_p2),
    .dout(tmp_31_fu_842_p5)
);

image_processing_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
image_processing_hbi_U32(
    .din0(col_buf_0_val_0_0_fu_816_p3),
    .din1(col_buf_0_val_1_0_fu_835_p3),
    .din2(col_buf_0_val_2_0_fu_854_p3),
    .din3(row_assign_13_0_t_reg_1448),
    .dout(tmp_32_fu_897_p5)
);

image_processing_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
image_processing_hbi_U33(
    .din0(col_buf_0_val_0_0_fu_816_p3),
    .din1(col_buf_0_val_1_0_fu_835_p3),
    .din2(col_buf_0_val_2_0_fu_854_p3),
    .din3(row_assign_13_1_t_reg_1453),
    .dout(tmp_33_fu_915_p5)
);

image_processing_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
image_processing_hbi_U34(
    .din0(col_buf_0_val_0_0_fu_816_p3),
    .din1(col_buf_0_val_1_0_fu_835_p3),
    .din2(col_buf_0_val_2_0_fu_854_p3),
    .din3(row_assign_13_2_t_reg_1458),
    .dout(tmp_34_fu_933_p5)
);

image_processing_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 21 ))
image_processing_ibs_U35(
    .din0(r_V_10_1_1_fu_1300_p0),
    .din1(r_V_10_1_1_fu_1300_p1),
    .dout(r_V_10_1_1_fu_1300_p2)
);

image_processing_jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 24 ),
    .dout_WIDTH( 25 ))
image_processing_jbC_U36(
    .din0(grp_fu_1306_p0),
    .din1(grp_fu_1306_p1),
    .din2(grp_fu_1306_p2),
    .din3(grp_fu_1306_p3),
    .dout(grp_fu_1306_p4)
);

image_processing_kbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
image_processing_kbM_U37(
    .din0(grp_fu_1317_p0),
    .din1(grp_fu_1317_p1),
    .din2(r_V_10_1_1_reg_1528),
    .dout(grp_fu_1317_p3)
);

image_processing_lbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 25 ))
image_processing_lbW_U38(
    .din0(grp_fu_1325_p0),
    .din1(grp_fu_1325_p1),
    .din2(grp_fu_1325_p2),
    .dout(grp_fu_1325_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((exitcond388_i_fu_612_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((exitcond389_i_fu_320_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter1_state4)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((exitcond389_i_fu_320_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_fu_612_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_2_reg_305 <= j_V_fu_618_p2;
    end else if (((exitcond389_i_fu_320_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        t_V_2_reg_305 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        t_V_reg_294 <= i_V_reg_1414;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_294 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_fu_612_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        brmerge_reg_1481 <= brmerge_fu_764_p2;
        k_buf_0_val_3_addr_reg_1488 <= tmp_26_fu_769_p1;
        k_buf_0_val_4_addr_reg_1494 <= tmp_26_fu_769_p1;
        k_buf_0_val_5_addr_reg_1500 <= tmp_26_fu_769_p1;
        or_cond_i_i_reg_1472 <= or_cond_i_i_fu_670_p2;
        or_cond_i_reg_1506 <= or_cond_i_fu_776_p2;
        tmp_43_reg_1476 <= tmp_43_fu_760_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond388_i_reg_1463 <= exitcond388_i_fu_612_p2;
        exitcond388_i_reg_1463_pp0_iter1_reg <= exitcond388_i_reg_1463;
        or_cond_i_reg_1506_pp0_iter1_reg <= or_cond_i_reg_1506;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_1414 <= i_V_fu_326_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond389_i_fu_320_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_reg_1428 <= icmp_fu_354_p2;
        row_assign_13_0_t_reg_1448 <= row_assign_13_0_t_fu_526_p2;
        row_assign_13_1_t_reg_1453 <= row_assign_13_1_t_fu_564_p2;
        row_assign_13_2_t_reg_1458 <= row_assign_13_2_t_fu_602_p2;
        tmp_2_reg_1433 <= tmp_2_fu_360_p2;
        tmp_3_reg_1441 <= tmp_3_fu_372_p2;
        tmp_518_0_not_reg_1423 <= tmp_518_0_not_fu_338_p2;
        tmp_562_1_reg_1437 <= tmp_562_1_fu_366_p2;
        tmp_s_reg_1419 <= tmp_s_fu_332_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        or_cond_i_reg_1506_pp0_iter2_reg <= or_cond_i_reg_1506_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_reg_1506_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_91_2_reg_1538 <= p_Val2_91_2_fu_1126_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_reg_1506 == 1'd1) & (exitcond388_i_reg_1463 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r_V_10_1_1_reg_1528 <= r_V_10_1_1_fu_1300_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op158_read_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        right_border_buf_0_1_fu_196 <= right_border_buf_0_s_fu_192;
        right_border_buf_0_2_fu_200 <= right_border_buf_0_5_fu_212;
        right_border_buf_0_3_fu_204 <= col_buf_0_val_1_0_fu_835_p3;
        right_border_buf_0_4_fu_208 <= right_border_buf_0_3_fu_204;
        right_border_buf_0_5_fu_212 <= col_buf_0_val_2_0_fu_854_p3;
        right_border_buf_0_s_fu_192 <= col_buf_0_val_0_0_fu_816_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_reg_1463 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_16_reg_1533 <= src_kernel_win_0_va_2_fu_176;
        src_kernel_win_0_va_6_reg_1510 <= src_kernel_win_0_va_6_fu_908_p3;
        src_kernel_win_0_va_7_reg_1516 <= src_kernel_win_0_va_7_fu_926_p3;
        src_kernel_win_0_va_8_reg_1522 <= src_kernel_win_0_va_8_fu_944_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_reg_1463_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_1_fu_172 <= src_kernel_win_0_va_fu_168;
        src_kernel_win_0_va_3_fu_180 <= src_kernel_win_0_va_16_reg_1533;
        src_kernel_win_0_va_4_fu_184 <= src_kernel_win_0_va_8_reg_1522;
        src_kernel_win_0_va_5_fu_188 <= src_kernel_win_0_va_4_fu_184;
        src_kernel_win_0_va_fu_168 <= src_kernel_win_0_va_6_reg_1510;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_reg_1463 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_2_fu_176 <= src_kernel_win_0_va_7_fu_926_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_reg_1506_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp5_reg_1543 <= grp_fu_1325_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_condition_pp0_exit_iter1_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter1_state4 = 1'b0;
    end
end

always @ (*) begin
    if ((((exitcond389_i_fu_320_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond389_i_fu_320_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_ce0 = 1'b1;
    end else begin
        k_buf_0_val_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_2_reg_1433 == 1'd1) & (or_cond_i_i_reg_1472 == 1'd1) & (icmp_reg_1428 == 1'd0) & (exitcond388_i_reg_1463 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op158_read_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_ce1 = 1'b1;
    end else begin
        k_buf_0_val_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_2_reg_1433 == 1'd1) & (or_cond_i_i_reg_1472 == 1'd1) & (icmp_reg_1428 == 1'd0) & (exitcond388_i_reg_1463 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op158_read_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_we1 = 1'b1;
    end else begin
        k_buf_0_val_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_ce0 = 1'b1;
    end else begin
        k_buf_0_val_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_562_1_reg_1437 == 1'd1) & (or_cond_i_i_reg_1472 == 1'd1) & (icmp_reg_1428 == 1'd0) & (exitcond388_i_reg_1463 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op158_read_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_ce1 = 1'b1;
    end else begin
        k_buf_0_val_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_45)) begin
        if ((ap_predicate_op158_read_state4 == 1'b1)) begin
            k_buf_0_val_4_d1 = k_buf_0_val_3_q0;
        end else if ((1'b1 == ap_condition_314)) begin
            k_buf_0_val_4_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_4_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_4_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_562_1_reg_1437 == 1'd1) & (or_cond_i_i_reg_1472 == 1'd1) & (icmp_reg_1428 == 1'd0) & (exitcond388_i_reg_1463 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op158_read_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_we1 = 1'b1;
    end else begin
        k_buf_0_val_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_5_ce0 = 1'b1;
    end else begin
        k_buf_0_val_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_2_reg_1433 == 1'd1) & (or_cond_i_i_reg_1472 == 1'd1) & (icmp_reg_1428 == 1'd0) & (exitcond388_i_reg_1463 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op158_read_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_ce1 = 1'b1;
    end else begin
        k_buf_0_val_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_45)) begin
        if ((ap_predicate_op158_read_state4 == 1'b1)) begin
            k_buf_0_val_5_d1 = k_buf_0_val_4_q0;
        end else if ((1'b1 == ap_condition_308)) begin
            k_buf_0_val_5_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_5_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_5_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_2_reg_1433 == 1'd1) & (or_cond_i_i_reg_1472 == 1'd1) & (icmp_reg_1428 == 1'd0) & (exitcond388_i_reg_1463 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op158_read_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_we1 = 1'b1;
    end else begin
        k_buf_0_val_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond_i_reg_1506_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        p_dst_data_stream_V_blk_n = p_dst_data_stream_V_full_n;
    end else begin
        p_dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((or_cond_i_reg_1506_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_data_stream_V_write = 1'b1;
    end else begin
        p_dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_1419 == 1'd1) & (icmp_reg_1428 == 1'd1) & (or_cond_i_i_reg_1472 == 1'd1) & (exitcond388_i_reg_1463 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((or_cond_i_i_reg_1472 == 1'd1) & (icmp_reg_1428 == 1'd0) & (exitcond388_i_reg_1463 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_src_data_stream_V_blk_n = p_src_data_stream_V_empty_n;
    end else begin
        p_src_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op158_read_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op147_read_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        p_src_data_stream_V_read = 1'b1;
    end else begin
        p_src_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond389_i_fu_320_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0)) & ~((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ImagLoc_x_cast_fu_646_p1 = ImagLoc_x_fu_640_p2;

assign ImagLoc_x_fu_640_p2 = ($signed(11'd2047) + $signed(t_V_3_cast_fu_608_p1));

assign Range1_all_zeros_fu_1279_p2 = ((tmp_35_fu_1269_p4 == 5'd0) ? 1'b1 : 1'b0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((or_cond_i_reg_1506_pp0_iter2_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op158_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op147_read_state4 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((or_cond_i_reg_1506_pp0_iter2_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op158_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op147_read_state4 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((or_cond_i_reg_1506_pp0_iter2_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op158_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op147_read_state4 == 1'b1)))));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op158_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op147_read_state4 == 1'b1)));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage0_iter3 = ((or_cond_i_reg_1506_pp0_iter2_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_308 = ((tmp_2_reg_1433 == 1'd1) & (or_cond_i_i_reg_1472 == 1'd1) & (icmp_reg_1428 == 1'd0) & (exitcond388_i_reg_1463 == 1'd0));
end

always @ (*) begin
    ap_condition_314 = ((tmp_562_1_reg_1437 == 1'd1) & (or_cond_i_i_reg_1472 == 1'd1) & (icmp_reg_1428 == 1'd0) & (exitcond388_i_reg_1463 == 1'd0));
end

always @ (*) begin
    ap_condition_45 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op147_read_state4 = ((or_cond_i_i_reg_1472 == 1'd1) & (icmp_reg_1428 == 1'd0) & (exitcond388_i_reg_1463 == 1'd0));
end

always @ (*) begin
    ap_predicate_op158_read_state4 = ((tmp_s_reg_1419 == 1'd1) & (icmp_reg_1428 == 1'd1) & (or_cond_i_i_reg_1472 == 1'd1) & (exitcond388_i_reg_1463 == 1'd0));
end

assign brmerge_fu_764_p2 = (tmp_518_0_not_reg_1423 | tmp_22_fu_664_p2);

assign brmerge_i_i_not_i_i_fu_1285_p2 = (carry_fu_1263_p2 & Range1_all_zeros_fu_1279_p2);

assign carry_fu_1263_p2 = (tmp_48_fu_1249_p3 | not_Result_4_i_i_fu_1257_p2);

assign col_assign_6_t_fu_799_p2 = (tmp_43_reg_1476 ^ 2'd3);

assign col_assign_cast_fu_756_p1 = x_fu_748_p3;

assign col_buf_0_val_0_0_fu_816_p3 = ((brmerge_reg_1481[0:0] === 1'b1) ? k_buf_0_val_3_q0 : tmp_28_fu_804_p5);

assign col_buf_0_val_1_0_fu_835_p3 = ((brmerge_reg_1481[0:0] === 1'b1) ? k_buf_0_val_4_q0 : tmp_30_fu_823_p5);

assign col_buf_0_val_2_0_fu_854_p3 = ((brmerge_reg_1481[0:0] === 1'b1) ? k_buf_0_val_5_q0 : tmp_31_fu_842_p5);

assign exitcond388_i_fu_612_p2 = ((t_V_2_reg_305 == 10'd754) ? 1'b1 : 1'b0);

assign exitcond389_i_fu_320_p2 = ((t_V_reg_294 == 9'd482) ? 1'b1 : 1'b0);

assign grp_fu_1306_p0 = grp_fu_1306_p00;

assign grp_fu_1306_p00 = src_kernel_win_0_va_5_fu_188;

assign grp_fu_1306_p1 = grp_fu_1306_p10;

assign grp_fu_1306_p10 = src_kernel_win_0_va_8_reg_1522;

assign grp_fu_1306_p2 = 19'd936;

assign grp_fu_1306_p3 = grp_fu_1306_p30;

assign grp_fu_1306_p30 = $unsigned(r_V_10_0_1_cast_fu_1015_p1);

assign grp_fu_1317_p0 = grp_fu_1317_p00;

assign grp_fu_1317_p00 = src_kernel_win_0_va_1_fu_172;

assign grp_fu_1317_p1 = 19'd936;

assign grp_fu_1325_p0 = grp_fu_1325_p00;

assign grp_fu_1325_p00 = src_kernel_win_0_va_6_reg_1510;

assign grp_fu_1325_p1 = 19'd936;

assign grp_fu_1325_p2 = grp_fu_1325_p20;

assign grp_fu_1325_p20 = $unsigned(r_V_10_2_1_cast_fu_1162_p1);

assign i_V_fu_326_p2 = (t_V_reg_294 + 9'd1);

assign icmp1_fu_634_p2 = ((tmp_40_fu_624_p4 != 9'd0) ? 1'b1 : 1'b0);

assign icmp_fu_354_p2 = ((tmp_6_fu_344_p4 != 8'd0) ? 1'b1 : 1'b0);

assign j_V_fu_618_p2 = (t_V_2_reg_305 + 10'd1);

assign k_buf_0_val_3_address0 = tmp_26_fu_769_p1;

assign k_buf_0_val_4_address0 = tmp_26_fu_769_p1;

assign k_buf_0_val_5_address0 = tmp_26_fu_769_p1;

assign not_Result_4_i_i_fu_1257_p2 = (tmp_47_fu_1235_p3 ^ 1'd1);

assign or_cond_i424_i_fu_414_p2 = (tmp_7_fu_408_p2 & rev_fu_402_p2);

assign or_cond_i_fu_776_p2 = (icmp_reg_1428 & icmp1_fu_634_p2);

assign or_cond_i_i_fu_670_p2 = (tmp_22_fu_664_p2 & rev1_fu_658_p2);

assign p_Val2_1_fu_1207_p2 = (tmp5_cast_fu_1204_p1 + p_Val2_91_2_cast_fu_1201_p1);

assign p_Val2_2_fu_1213_p4 = {{p_Val2_1_fu_1207_p2[21:14]}};

assign p_Val2_3_fu_1243_p2 = (p_Val2_2_fu_1213_p4 + tmp_4_i_i_fu_1231_p1);

assign p_Val2_91_0_2_cast_fu_1026_p1 = grp_fu_1306_p4;

assign p_Val2_91_2_cast_fu_1201_p1 = p_Val2_91_2_reg_1538;

assign p_Val2_91_2_fu_1126_p2 = (tmp3_cast_fu_1122_p1 + tmp2_fu_1107_p2);

assign p_assign_14_1_fu_458_p2 = ($signed(10'd1022) + $signed(t_V_cast_fu_316_p1));

assign p_assign_14_2_fu_484_p2 = ($signed(10'd1021) + $signed(t_V_cast_fu_316_p1));

assign p_assign_1_fu_452_p2 = ($signed(2'd2) - $signed(tmp_12_fu_442_p1));

assign p_assign_3_fu_684_p2 = (11'd1 - t_V_3_cast_fu_608_p1);

assign p_assign_4_fu_712_p2 = ($signed(12'd1502) - $signed(p_p2_i_i_cast_fu_702_p1));

assign p_assign_5_fu_718_p3 = ((or_cond_i_i_fu_670_p2[0:0] === 1'b1) ? ImagLoc_x_cast_fu_646_p1 : p_assign_4_fu_712_p2);

assign p_assign_s_fu_428_p2 = (10'd1 - t_V_cast_fu_316_p1);

assign p_dst_data_stream_V_din = ((brmerge_i_i_not_i_i_fu_1285_p2[0:0] === 1'b1) ? p_Val2_3_fu_1243_p2 : 8'd255);

assign p_p2_i425_i_fu_434_p3 = ((tmp_11_fu_420_p3[0:0] === 1'b1) ? p_assign_s_fu_428_p2 : tmp_5_fu_382_p2);

assign p_p2_i425_i_p_assign_s_fu_510_p3 = ((tmp_9_fu_446_p2[0:0] === 1'b1) ? tmp_12_fu_442_p1 : p_assign_1_fu_452_p2);

assign p_p2_i_i_cast6_fu_698_p1 = p_p2_i_i_fu_690_p3;

assign p_p2_i_i_cast_fu_702_p1 = p_p2_i_i_fu_690_p3;

assign p_p2_i_i_fu_690_p3 = ((tmp_42_fu_676_p3[0:0] === 1'b1) ? p_assign_3_fu_684_p2 : ImagLoc_x_fu_640_p2);

assign p_shl1_cast_fu_993_p1 = p_shl1_fu_985_p3;

assign p_shl1_fu_985_p3 = {{src_kernel_win_0_va_4_fu_184}, {11'd0}};

assign p_shl2_cast_fu_1005_p1 = p_shl2_fu_997_p3;

assign p_shl2_fu_997_p3 = {{src_kernel_win_0_va_4_fu_184}, {2'd0}};

assign p_shl3_cast_fu_1037_p1 = p_shl3_fu_1029_p3;

assign p_shl3_fu_1029_p3 = {{src_kernel_win_0_va_3_fu_180}, {11'd0}};

assign p_shl4_cast_fu_1049_p1 = p_shl4_fu_1041_p3;

assign p_shl4_fu_1041_p3 = {{src_kernel_win_0_va_3_fu_180}, {2'd0}};

assign p_shl5_cast_fu_1074_p1 = p_shl5_fu_1067_p3;

assign p_shl5_fu_1067_p3 = {{src_kernel_win_0_va_7_reg_1516}, {11'd0}};

assign p_shl6_cast_fu_1085_p1 = p_shl6_fu_1078_p3;

assign p_shl6_fu_1078_p3 = {{src_kernel_win_0_va_7_reg_1516}, {2'd0}};

assign p_shl7_cast_fu_1152_p1 = p_shl7_fu_1144_p3;

assign p_shl7_fu_1144_p3 = {{src_kernel_win_0_va_fu_168}, {2'd0}};

assign p_shl_cast_fu_1140_p1 = p_shl_fu_1132_p3;

assign p_shl_fu_1132_p3 = {{src_kernel_win_0_va_fu_168}, {11'd0}};

assign r_V_10_0_1_cast_fu_1015_p1 = $signed(r_V_10_0_1_fu_1009_p2);

assign r_V_10_0_1_fu_1009_p2 = (p_shl1_cast_fu_993_p1 - p_shl2_cast_fu_1005_p1);

assign r_V_10_1_1_fu_1300_p0 = r_V_10_1_1_fu_1300_p00;

assign r_V_10_1_1_fu_1300_p00 = src_kernel_win_0_va_2_fu_176;

assign r_V_10_1_1_fu_1300_p1 = 21'd4465;

assign r_V_10_1_2_cast_fu_1095_p1 = $signed(r_V_10_1_2_fu_1089_p2);

assign r_V_10_1_2_fu_1089_p2 = (p_shl5_cast_fu_1074_p1 - p_shl6_cast_fu_1085_p1);

assign r_V_10_1_cast_fu_1059_p1 = $signed(r_V_10_1_fu_1053_p2);

assign r_V_10_1_fu_1053_p2 = (p_shl3_cast_fu_1037_p1 - p_shl4_cast_fu_1049_p1);

assign r_V_10_2_1_cast_fu_1162_p1 = $signed(r_V_10_2_1_fu_1156_p2);

assign r_V_10_2_1_fu_1156_p2 = (p_shl_cast_fu_1140_p1 - p_shl7_cast_fu_1152_p1);

assign rev1_fu_658_p2 = (tmp_41_fu_650_p3 ^ 1'd1);

assign rev_fu_402_p2 = (tmp_10_fu_394_p3 ^ 1'd1);

assign row_assign_13_0_t_fu_526_p2 = (y_2_fu_518_p3 ^ 2'd3);

assign row_assign_13_1_t_fu_564_p2 = (tmp_13_fu_556_p3 ^ 2'd3);

assign row_assign_13_2_t_fu_602_p2 = (tmp_18_fu_594_p3 ^ 2'd3);

assign sel_tmp7_fu_736_p2 = (tmp_41_fu_650_p3 | tmp_26_not_fu_730_p2);

assign sel_tmp8_fu_742_p2 = (tmp_23_fu_706_p2 & sel_tmp7_fu_736_p2);

assign sel_tmp_cast_fu_726_p1 = p_assign_5_fu_718_p3;

assign src_kernel_win_0_va_6_fu_908_p3 = ((tmp_3_reg_1441[0:0] === 1'b1) ? tmp_32_fu_897_p5 : col_buf_0_val_0_0_fu_816_p3);

assign src_kernel_win_0_va_7_fu_926_p3 = ((tmp_3_reg_1441[0:0] === 1'b1) ? tmp_33_fu_915_p5 : col_buf_0_val_1_0_fu_835_p3);

assign src_kernel_win_0_va_8_fu_944_p3 = ((tmp_3_reg_1441[0:0] === 1'b1) ? tmp_34_fu_933_p5 : col_buf_0_val_2_0_fu_854_p3);

assign t_V_3_cast_fu_608_p1 = t_V_2_reg_305;

assign t_V_cast_fu_316_p1 = t_V_reg_294;

assign tmp2_fu_1107_p2 = (p_Val2_91_0_2_cast_fu_1026_p1 + tmp_606_1_cast_fu_1063_p1);

assign tmp3_cast_fu_1122_p1 = tmp3_fu_1116_p2;

assign tmp3_fu_1116_p2 = (tmp4_cast_fu_1113_p1 + tmp_606_1_2_cast_cas_fu_1099_p1);

assign tmp4_cast_fu_1113_p1 = grp_fu_1317_p3;

assign tmp5_cast_fu_1204_p1 = tmp5_reg_1543;

assign tmp_10_fu_394_p3 = tmp_5_fu_382_p2[32'd9];

assign tmp_11_fu_420_p3 = tmp_5_fu_382_p2[32'd9];

assign tmp_12_fu_442_p1 = p_p2_i425_i_fu_434_p3[1:0];

assign tmp_13_fu_556_p3 = ((tmp_14_fu_464_p3[0:0] === 1'b1) ? tmp_4_fu_548_p3 : tmp_1_fu_532_p2);

assign tmp_14_fu_464_p3 = p_assign_14_1_fu_458_p2[32'd9];

assign tmp_15_fu_472_p3 = p_assign_14_1_fu_458_p2[32'd9];

assign tmp_16_fu_570_p2 = (2'd1 + tmp_8_fu_378_p1);

assign tmp_17_fu_586_p3 = ((tmp_24_fu_498_p3[0:0] === 1'b1) ? tmp_38_fu_576_p2 : tmp_39_fu_582_p1);

assign tmp_18_fu_594_p3 = ((tmp_21_fu_490_p3[0:0] === 1'b1) ? tmp_17_fu_586_p3 : tmp_16_fu_570_p2);

assign tmp_1_fu_532_p2 = (tmp_8_fu_378_p1 ^ 2'd2);

assign tmp_20_fu_480_p1 = t_V_reg_294[1:0];

assign tmp_21_fu_490_p3 = p_assign_14_2_fu_484_p2[32'd9];

assign tmp_22_fu_664_p2 = (($signed(ImagLoc_x_fu_640_p2) < $signed(11'd752)) ? 1'b1 : 1'b0);

assign tmp_23_fu_706_p2 = (($signed(p_p2_i_i_fu_690_p3) < $signed(11'd752)) ? 1'b1 : 1'b0);

assign tmp_24_fu_498_p3 = p_assign_14_2_fu_484_p2[32'd9];

assign tmp_25_fu_506_p1 = t_V_reg_294[1:0];

assign tmp_26_fu_769_p1 = $unsigned(col_assign_cast_fu_756_p1);

assign tmp_26_not_fu_730_p2 = (tmp_22_fu_664_p2 ^ 1'd1);

assign tmp_27_fu_538_p2 = ($signed(2'd2) - $signed(tmp_20_fu_480_p1));

assign tmp_29_fu_544_p1 = p_assign_14_1_fu_458_p2[1:0];

assign tmp_2_fu_360_p2 = ((t_V_reg_294 == 9'd1) ? 1'b1 : 1'b0);

assign tmp_35_fu_1269_p4 = {{p_Val2_1_fu_1207_p2[26:22]}};

assign tmp_38_fu_576_p2 = (tmp_25_fu_506_p1 ^ 2'd3);

assign tmp_39_fu_582_p1 = p_assign_14_2_fu_484_p2[1:0];

assign tmp_3_fu_372_p2 = ((t_V_reg_294 > 9'd480) ? 1'b1 : 1'b0);

assign tmp_40_fu_624_p4 = {{t_V_2_reg_305[9:1]}};

assign tmp_41_fu_650_p3 = ImagLoc_x_fu_640_p2[32'd10];

assign tmp_42_fu_676_p3 = ImagLoc_x_fu_640_p2[32'd10];

assign tmp_43_fu_760_p1 = x_fu_748_p3[1:0];

assign tmp_46_fu_1223_p3 = p_Val2_1_fu_1207_p2[32'd13];

assign tmp_47_fu_1235_p3 = p_Val2_1_fu_1207_p2[32'd21];

assign tmp_48_fu_1249_p3 = p_Val2_3_fu_1243_p2[32'd7];

assign tmp_4_fu_548_p3 = ((tmp_15_fu_472_p3[0:0] === 1'b1) ? tmp_27_fu_538_p2 : tmp_29_fu_544_p1);

assign tmp_4_i_i_fu_1231_p1 = tmp_46_fu_1223_p3;

assign tmp_518_0_not_fu_338_p2 = (tmp_s_fu_332_p2 ^ 1'd1);

assign tmp_562_1_fu_366_p2 = ((t_V_reg_294 == 9'd0) ? 1'b1 : 1'b0);

assign tmp_5_fu_382_p2 = ($signed(10'd1023) + $signed(t_V_cast_fu_316_p1));

assign tmp_606_1_2_cast_cas_fu_1099_p1 = $unsigned(r_V_10_1_2_cast_fu_1095_p1);

assign tmp_606_1_cast_fu_1063_p1 = $unsigned(r_V_10_1_cast_fu_1059_p1);

assign tmp_68_cast_fu_388_p2 = ($signed(2'd3) + $signed(tmp_8_fu_378_p1));

assign tmp_6_fu_344_p4 = {{t_V_reg_294[8:1]}};

assign tmp_7_fu_408_p2 = (($signed(tmp_5_fu_382_p2) < $signed(10'd480)) ? 1'b1 : 1'b0);

assign tmp_8_fu_378_p1 = t_V_reg_294[1:0];

assign tmp_9_fu_446_p2 = (($signed(p_p2_i425_i_fu_434_p3) < $signed(10'd480)) ? 1'b1 : 1'b0);

assign tmp_s_fu_332_p2 = ((t_V_reg_294 < 9'd480) ? 1'b1 : 1'b0);

assign x_fu_748_p3 = ((sel_tmp8_fu_742_p2[0:0] === 1'b1) ? p_p2_i_i_cast6_fu_698_p1 : sel_tmp_cast_fu_726_p1);

assign y_2_fu_518_p3 = ((or_cond_i424_i_fu_414_p2[0:0] === 1'b1) ? tmp_68_cast_fu_388_p2 : p_p2_i425_i_p_assign_s_fu_510_p3);

endmodule //Filter2D_1
