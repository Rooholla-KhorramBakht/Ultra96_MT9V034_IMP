// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module AddWeighted (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        src1_data_stream_V_dout,
        src1_data_stream_V_empty_n,
        src1_data_stream_V_read,
        src2_data_stream_V_dout,
        src2_data_stream_V_empty_n,
        src2_data_stream_V_read,
        dst_data_stream_V_din,
        dst_data_stream_V_full_n,
        dst_data_stream_V_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state38 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [7:0] src1_data_stream_V_dout;
input   src1_data_stream_V_empty_n;
output   src1_data_stream_V_read;
input  [7:0] src2_data_stream_V_dout;
input   src2_data_stream_V_empty_n;
output   src2_data_stream_V_read;
output  [7:0] dst_data_stream_V_din;
input   dst_data_stream_V_full_n;
output   dst_data_stream_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg src1_data_stream_V_read;
reg src2_data_stream_V_read;
reg dst_data_stream_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    src1_data_stream_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond_i_reg_961;
reg    src2_data_stream_V_blk_n;
reg    dst_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter34;
reg   [0:0] exitcond_i_reg_961_pp0_iter33_reg;
reg   [9:0] t_V_4_reg_188;
wire   [0:0] exitcond4_i_fu_224_p2;
wire    ap_CS_fsm_state2;
wire   [8:0] i_V_fu_230_p2;
reg   [8:0] i_V_reg_956;
wire   [0:0] exitcond_i_fu_236_p2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
wire    ap_block_state8_pp0_stage0_iter5;
wire    ap_block_state9_pp0_stage0_iter6;
wire    ap_block_state10_pp0_stage0_iter7;
wire    ap_block_state11_pp0_stage0_iter8;
wire    ap_block_state12_pp0_stage0_iter9;
wire    ap_block_state13_pp0_stage0_iter10;
wire    ap_block_state14_pp0_stage0_iter11;
wire    ap_block_state15_pp0_stage0_iter12;
wire    ap_block_state16_pp0_stage0_iter13;
wire    ap_block_state17_pp0_stage0_iter14;
wire    ap_block_state18_pp0_stage0_iter15;
wire    ap_block_state19_pp0_stage0_iter16;
wire    ap_block_state20_pp0_stage0_iter17;
wire    ap_block_state21_pp0_stage0_iter18;
wire    ap_block_state22_pp0_stage0_iter19;
wire    ap_block_state23_pp0_stage0_iter20;
wire    ap_block_state24_pp0_stage0_iter21;
wire    ap_block_state25_pp0_stage0_iter22;
wire    ap_block_state26_pp0_stage0_iter23;
wire    ap_block_state27_pp0_stage0_iter24;
wire    ap_block_state28_pp0_stage0_iter25;
wire    ap_block_state29_pp0_stage0_iter26;
wire    ap_block_state30_pp0_stage0_iter27;
wire    ap_block_state31_pp0_stage0_iter28;
wire    ap_block_state32_pp0_stage0_iter29;
wire    ap_block_state33_pp0_stage0_iter30;
wire    ap_block_state34_pp0_stage0_iter31;
wire    ap_block_state35_pp0_stage0_iter32;
wire    ap_block_state36_pp0_stage0_iter33;
reg    ap_block_state37_pp0_stage0_iter34;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond_i_reg_961_pp0_iter1_reg;
reg   [0:0] exitcond_i_reg_961_pp0_iter2_reg;
reg   [0:0] exitcond_i_reg_961_pp0_iter3_reg;
reg   [0:0] exitcond_i_reg_961_pp0_iter4_reg;
reg   [0:0] exitcond_i_reg_961_pp0_iter5_reg;
reg   [0:0] exitcond_i_reg_961_pp0_iter6_reg;
reg   [0:0] exitcond_i_reg_961_pp0_iter7_reg;
reg   [0:0] exitcond_i_reg_961_pp0_iter8_reg;
reg   [0:0] exitcond_i_reg_961_pp0_iter9_reg;
reg   [0:0] exitcond_i_reg_961_pp0_iter10_reg;
reg   [0:0] exitcond_i_reg_961_pp0_iter11_reg;
reg   [0:0] exitcond_i_reg_961_pp0_iter12_reg;
reg   [0:0] exitcond_i_reg_961_pp0_iter13_reg;
reg   [0:0] exitcond_i_reg_961_pp0_iter14_reg;
reg   [0:0] exitcond_i_reg_961_pp0_iter15_reg;
reg   [0:0] exitcond_i_reg_961_pp0_iter16_reg;
reg   [0:0] exitcond_i_reg_961_pp0_iter17_reg;
reg   [0:0] exitcond_i_reg_961_pp0_iter18_reg;
reg   [0:0] exitcond_i_reg_961_pp0_iter19_reg;
reg   [0:0] exitcond_i_reg_961_pp0_iter20_reg;
reg   [0:0] exitcond_i_reg_961_pp0_iter21_reg;
reg   [0:0] exitcond_i_reg_961_pp0_iter22_reg;
reg   [0:0] exitcond_i_reg_961_pp0_iter23_reg;
reg   [0:0] exitcond_i_reg_961_pp0_iter24_reg;
reg   [0:0] exitcond_i_reg_961_pp0_iter25_reg;
reg   [0:0] exitcond_i_reg_961_pp0_iter26_reg;
reg   [0:0] exitcond_i_reg_961_pp0_iter27_reg;
reg   [0:0] exitcond_i_reg_961_pp0_iter28_reg;
reg   [0:0] exitcond_i_reg_961_pp0_iter29_reg;
reg   [0:0] exitcond_i_reg_961_pp0_iter30_reg;
reg   [0:0] exitcond_i_reg_961_pp0_iter31_reg;
reg   [0:0] exitcond_i_reg_961_pp0_iter32_reg;
wire   [9:0] j_V_fu_242_p2;
reg    ap_enable_reg_pp0_iter0;
reg   [7:0] tmp_102_reg_970;
reg   [7:0] tmp_103_reg_975;
wire   [63:0] grp_fu_218_p1;
reg   [63:0] tmp_43_i_reg_990;
wire   [63:0] grp_fu_221_p1;
reg   [63:0] tmp_45_i_reg_995;
wire   [63:0] grp_fu_208_p2;
reg   [63:0] t1_reg_1000;
wire   [63:0] grp_fu_213_p2;
reg   [63:0] t2_reg_1005;
wire   [63:0] grp_fu_199_p2;
reg   [63:0] tmp_46_i_reg_1010;
wire   [63:0] grp_fu_203_p2;
reg   [63:0] sum_reg_1015;
wire   [51:0] loc_V_1_fu_269_p1;
reg   [51:0] loc_V_1_reg_1020;
wire   [0:0] tmp_i_i_i_i_fu_273_p2;
reg   [0:0] tmp_i_i_i_i_reg_1026;
reg   [0:0] tmp_i_i_i_i_reg_1026_pp0_iter33_reg;
reg   [0:0] isneg_reg_1032;
reg   [0:0] isneg_reg_1032_pp0_iter33_reg;
wire   [0:0] tmp_9_i_fu_295_p2;
reg   [0:0] tmp_9_i_reg_1042;
reg   [0:0] tmp_9_i_reg_1042_pp0_iter33_reg;
wire   [11:0] F2_fu_301_p2;
reg   [11:0] F2_reg_1048;
wire   [0:0] tmp_i2_fu_307_p2;
reg   [0:0] tmp_i2_reg_1057;
wire   [11:0] tmp_2_i_fu_313_p2;
reg   [11:0] tmp_2_i_reg_1064;
wire   [0:0] tmp_3_i_fu_319_p2;
reg   [0:0] tmp_3_i_reg_1069;
wire   [0:0] tmp_i_i_i_i_109_fu_325_p2;
reg   [0:0] tmp_i_i_i_i_109_reg_1076;
wire  signed [11:0] F2_2_fu_354_p3;
reg  signed [11:0] F2_2_reg_1082;
wire   [7:0] tmp_92_fu_363_p1;
reg   [7:0] tmp_92_reg_1087;
wire   [0:0] icmp_fu_383_p2;
reg   [0:0] icmp_reg_1092;
wire   [7:0] sel_tmp9_i_fu_522_p3;
reg   [7:0] sel_tmp9_i_reg_1097;
wire   [0:0] sel_tmp12_demorgan_i_fu_530_p2;
reg   [0:0] sel_tmp12_demorgan_i_reg_1102;
wire   [0:0] carry_1_i_i_fu_552_p2;
reg   [0:0] carry_1_i_i_reg_1107;
wire   [0:0] tmp_18_i_fu_576_p2;
reg   [0:0] tmp_18_i_reg_1113;
wire   [0:0] rev_fu_590_p2;
reg   [0:0] rev_reg_1119;
wire   [0:0] Range1_all_ones_1_fu_616_p2;
reg   [0:0] Range1_all_ones_1_reg_1126;
wire   [0:0] tmp_23_i_fu_636_p2;
reg   [0:0] tmp_23_i_reg_1132;
wire   [0:0] Range1_all_ones_fu_678_p2;
reg   [0:0] Range1_all_ones_reg_1137;
wire   [0:0] tmp_25_i_fu_684_p2;
reg   [0:0] tmp_25_i_reg_1142;
wire   [0:0] Range1_all_zeros_1_fu_696_p2;
reg   [0:0] Range1_all_zeros_1_reg_1147;
wire   [0:0] sel_tmp34_i_fu_714_p2;
reg   [0:0] sel_tmp34_i_reg_1152;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg   [8:0] t_V_reg_177;
reg    ap_block_state1;
wire    ap_CS_fsm_state38;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] grp_fu_218_p0;
wire   [31:0] grp_fu_221_p0;
wire   [63:0] p_Val2_11_fu_256_p1;
wire   [10:0] loc_V_fu_259_p4;
wire   [62:0] tmp_fu_279_p1;
wire   [11:0] tmp_7_i1_fu_291_p1;
wire   [52:0] tmp_1_i_fu_330_p3;
wire   [53:0] p_Result_s_fu_337_p1;
wire   [53:0] man_V_1_fu_341_p2;
wire   [53:0] p_Val2_s_fu_347_p3;
wire   [8:0] tmp_93_fu_373_p4;
wire  signed [31:0] F2_2_cast_i_fu_359_p1;
wire   [53:0] tmp_10_i_fu_389_p1;
wire   [53:0] tmp_11_i_fu_393_p2;
wire   [0:0] tmp_5_i3_fu_367_p2;
wire   [7:0] tmp_94_fu_399_p1;
wire   [7:0] p_Val2_0_i_i6_i_fu_403_p3;
wire   [11:0] tmp_15_i_fu_423_p2;
wire   [31:0] tmp_25_cast_i_fu_428_p1;
wire   [0:0] tmp_14_i_fu_418_p2;
wire   [0:0] tmp_95_fu_432_p3;
wire   [7:0] p_Val2_12_fu_410_p3;
wire   [0:0] qb_fu_440_p3;
wire   [7:0] tmp_16_i_fu_455_p1;
wire   [7:0] p_Val2_13_fu_459_p2;
wire   [0:0] tmp_97_fu_465_p3;
wire   [0:0] sel_tmp1_i_fu_486_p2;
wire   [0:0] sel_tmp2_i_fu_491_p2;
wire   [0:0] tmp_96_fu_447_p3;
wire   [0:0] sel_tmp3_i_fu_496_p2;
wire   [7:0] sel_tmp_i_fu_479_p3;
wire   [0:0] sel_tmp7_i_fu_510_p2;
wire   [0:0] sel_tmp8_i_fu_516_p2;
wire   [7:0] sel_tmp4_i_fu_502_p3;
wire   [0:0] tmp_8_not_i_fu_534_p2;
wire   [0:0] not_sel_tmp28_i_fu_540_p2;
wire   [0:0] tmp_17_i_fu_473_p2;
wire   [0:0] tmp5_fu_546_p2;
wire  signed [11:0] pos1_fu_558_p2;
wire  signed [11:0] pos2_fu_567_p2;
wire   [0:0] tmp_99_fu_582_p3;
wire  signed [31:0] pos1_cast_i_fu_563_p1;
wire   [53:0] tmp_20_i_fu_596_p1;
wire   [53:0] tmp_21_i_fu_600_p2;
wire   [0:0] lD_fu_606_p1;
wire   [0:0] tmp6_fu_610_p2;
wire   [0:0] tmp_101_fu_622_p3;
wire   [0:0] rev4_fu_630_p2;
wire  signed [31:0] pos2_cast_i_fu_572_p1;
wire   [53:0] tmp_24_i_fu_648_p1;
wire   [53:0] Range2_V_1_fu_652_p2;
wire   [53:0] r_V_fu_658_p2;
wire   [0:0] or_cond115_i_i_fu_642_p2;
wire   [0:0] Range2_all_ones_fu_664_p2;
wire   [0:0] Range2_all_ones_1_i_s_fu_670_p3;
wire   [0:0] tmp_23_i_not_fu_702_p2;
wire   [0:0] tmp_27_i_fu_690_p2;
wire   [0:0] sel_tmp33_i_fu_708_p2;
wire   [7:0] tmp_91_fu_724_p1;
wire   [0:0] sel_tmp12_i_fu_732_p2;
wire   [0:0] sel_tmp13_i_fu_737_p2;
wire   [7:0] tmp_13_i_fu_727_p2;
wire   [7:0] p_Val2_14_fu_742_p3;
wire   [0:0] Range1_all_zeros_fu_761_p2;
wire   [0:0] or_cond117_i_i_fu_757_p2;
wire   [0:0] sel_tmp35_i_fu_775_p3;
wire   [0:0] p_119_i_i_fu_771_p2;
wire   [0:0] p_122_i_i_fu_766_p2;
wire   [0:0] sel_tmp39_i_fu_787_p3;
wire   [0:0] Range1_all_ones_2_i_s_fu_780_p3;
wire   [0:0] Range1_all_zeros_2_i_fu_794_p3;
wire   [0:0] Range1_all_ones_2_i_fu_809_p2;
wire   [0:0] newsignbit_fu_749_p3;
wire   [0:0] sel_tmp41_i_fu_820_p2;
wire   [0:0] tmp7_fu_825_p2;
wire   [0:0] sel_tmp47_i_fu_836_p2;
wire   [0:0] tmp_28_i_fu_814_p2;
wire   [0:0] sel_tmp46_i_fu_831_p2;
wire   [0:0] tmp8_fu_848_p2;
wire   [0:0] deleted_zeros_fu_802_p3;
wire   [0:0] underflow_fu_840_p3;
wire   [0:0] p_121_demorgan_i_i_fu_853_p2;
wire   [0:0] underflow_not_i_fu_859_p2;
wire   [0:0] p_121_demorgan_i_not_s_fu_871_p2;
wire   [0:0] brmerge_i_i_not_i_fu_865_p2;
wire   [0:0] sel_tmp50_i_demorgan_fu_891_p2;
wire   [0:0] sel_tmp50_i_fu_895_p2;
wire   [0:0] sel_tmp51_i_fu_901_p2;
wire   [0:0] tmp_demorgan_i_fu_720_p2;
wire   [0:0] tmp_s_fu_906_p2;
wire   [0:0] tmp_40_fu_912_p2;
wire   [0:0] sel_tmp55_demorgan_i_fu_926_p2;
wire   [0:0] brmerge_i_fu_877_p2;
wire   [0:0] sel_tmp55_i_fu_931_p2;
wire   [0:0] sel_tmp56_i_fu_937_p2;
wire   [7:0] p_Val2_12_0_i_mux_i_fu_883_p3;
wire   [7:0] sel_tmp52_i_fu_918_p3;
reg    grp_fu_199_ce;
reg    grp_fu_203_ce;
reg    grp_fu_208_ce;
reg    grp_fu_213_ce;
reg    grp_fu_218_ce;
reg    grp_fu_221_ce;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
end

image_processing_rcU #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
image_processing_rcU_U74(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(t1_reg_1000),
    .din1(t2_reg_1005),
    .ce(grp_fu_199_ce),
    .dout(grp_fu_199_p2)
);

image_processing_rcU #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
image_processing_rcU_U75(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_46_i_reg_1010),
    .din1(64'd0),
    .ce(grp_fu_203_ce),
    .dout(grp_fu_203_p2)
);

image_processing_sc4 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
image_processing_sc4_U76(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_43_i_reg_990),
    .din1(64'd4602678819172646912),
    .ce(grp_fu_208_ce),
    .dout(grp_fu_208_p2)
);

image_processing_sc4 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
image_processing_sc4_U77(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_45_i_reg_995),
    .din1(64'd4602678819172646912),
    .ce(grp_fu_213_ce),
    .dout(grp_fu_213_p2)
);

image_processing_tde #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
image_processing_tde_U78(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_218_p0),
    .ce(grp_fu_218_ce),
    .dout(grp_fu_218_p1)
);

image_processing_tde #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
image_processing_tde_U79(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_221_p0),
    .ce(grp_fu_221_ce),
    .dout(grp_fu_221_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((exitcond4_i_fu_224_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((exitcond4_i_fu_224_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end else if (((exitcond4_i_fu_224_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter34 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_fu_236_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_4_reg_188 <= j_V_fu_242_p2;
    end else if (((exitcond4_i_fu_224_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        t_V_4_reg_188 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        t_V_reg_177 <= i_V_reg_956;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_177 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_reg_961_pp0_iter32_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        F2_2_reg_1082 <= F2_2_fu_354_p3;
        Range1_all_ones_1_reg_1126 <= Range1_all_ones_1_fu_616_p2;
        Range1_all_ones_reg_1137 <= Range1_all_ones_fu_678_p2;
        Range1_all_zeros_1_reg_1147 <= Range1_all_zeros_1_fu_696_p2;
        carry_1_i_i_reg_1107 <= carry_1_i_i_fu_552_p2;
        icmp_reg_1092 <= icmp_fu_383_p2;
        rev_reg_1119 <= rev_fu_590_p2;
        sel_tmp12_demorgan_i_reg_1102 <= sel_tmp12_demorgan_i_fu_530_p2;
        sel_tmp34_i_reg_1152 <= sel_tmp34_i_fu_714_p2;
        sel_tmp9_i_reg_1097 <= sel_tmp9_i_fu_522_p3;
        tmp_18_i_reg_1113 <= tmp_18_i_fu_576_p2;
        tmp_23_i_reg_1132 <= tmp_23_i_fu_636_p2;
        tmp_25_i_reg_1142 <= tmp_25_i_fu_684_p2;
        tmp_92_reg_1087 <= tmp_92_fu_363_p1;
        tmp_i_i_i_i_109_reg_1076 <= tmp_i_i_i_i_109_fu_325_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_reg_961_pp0_iter31_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        F2_reg_1048 <= F2_fu_301_p2;
        isneg_reg_1032 <= p_Val2_11_fu_256_p1[32'd63];
        loc_V_1_reg_1020 <= loc_V_1_fu_269_p1;
        tmp_2_i_reg_1064 <= tmp_2_i_fu_313_p2;
        tmp_3_i_reg_1069 <= tmp_3_i_fu_319_p2;
        tmp_9_i_reg_1042 <= tmp_9_i_fu_295_p2;
        tmp_i2_reg_1057 <= tmp_i2_fu_307_p2;
        tmp_i_i_i_i_reg_1026 <= tmp_i_i_i_i_fu_273_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond_i_reg_961 <= exitcond_i_fu_236_p2;
        exitcond_i_reg_961_pp0_iter1_reg <= exitcond_i_reg_961;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        exitcond_i_reg_961_pp0_iter10_reg <= exitcond_i_reg_961_pp0_iter9_reg;
        exitcond_i_reg_961_pp0_iter11_reg <= exitcond_i_reg_961_pp0_iter10_reg;
        exitcond_i_reg_961_pp0_iter12_reg <= exitcond_i_reg_961_pp0_iter11_reg;
        exitcond_i_reg_961_pp0_iter13_reg <= exitcond_i_reg_961_pp0_iter12_reg;
        exitcond_i_reg_961_pp0_iter14_reg <= exitcond_i_reg_961_pp0_iter13_reg;
        exitcond_i_reg_961_pp0_iter15_reg <= exitcond_i_reg_961_pp0_iter14_reg;
        exitcond_i_reg_961_pp0_iter16_reg <= exitcond_i_reg_961_pp0_iter15_reg;
        exitcond_i_reg_961_pp0_iter17_reg <= exitcond_i_reg_961_pp0_iter16_reg;
        exitcond_i_reg_961_pp0_iter18_reg <= exitcond_i_reg_961_pp0_iter17_reg;
        exitcond_i_reg_961_pp0_iter19_reg <= exitcond_i_reg_961_pp0_iter18_reg;
        exitcond_i_reg_961_pp0_iter20_reg <= exitcond_i_reg_961_pp0_iter19_reg;
        exitcond_i_reg_961_pp0_iter21_reg <= exitcond_i_reg_961_pp0_iter20_reg;
        exitcond_i_reg_961_pp0_iter22_reg <= exitcond_i_reg_961_pp0_iter21_reg;
        exitcond_i_reg_961_pp0_iter23_reg <= exitcond_i_reg_961_pp0_iter22_reg;
        exitcond_i_reg_961_pp0_iter24_reg <= exitcond_i_reg_961_pp0_iter23_reg;
        exitcond_i_reg_961_pp0_iter25_reg <= exitcond_i_reg_961_pp0_iter24_reg;
        exitcond_i_reg_961_pp0_iter26_reg <= exitcond_i_reg_961_pp0_iter25_reg;
        exitcond_i_reg_961_pp0_iter27_reg <= exitcond_i_reg_961_pp0_iter26_reg;
        exitcond_i_reg_961_pp0_iter28_reg <= exitcond_i_reg_961_pp0_iter27_reg;
        exitcond_i_reg_961_pp0_iter29_reg <= exitcond_i_reg_961_pp0_iter28_reg;
        exitcond_i_reg_961_pp0_iter2_reg <= exitcond_i_reg_961_pp0_iter1_reg;
        exitcond_i_reg_961_pp0_iter30_reg <= exitcond_i_reg_961_pp0_iter29_reg;
        exitcond_i_reg_961_pp0_iter31_reg <= exitcond_i_reg_961_pp0_iter30_reg;
        exitcond_i_reg_961_pp0_iter32_reg <= exitcond_i_reg_961_pp0_iter31_reg;
        exitcond_i_reg_961_pp0_iter33_reg <= exitcond_i_reg_961_pp0_iter32_reg;
        exitcond_i_reg_961_pp0_iter3_reg <= exitcond_i_reg_961_pp0_iter2_reg;
        exitcond_i_reg_961_pp0_iter4_reg <= exitcond_i_reg_961_pp0_iter3_reg;
        exitcond_i_reg_961_pp0_iter5_reg <= exitcond_i_reg_961_pp0_iter4_reg;
        exitcond_i_reg_961_pp0_iter6_reg <= exitcond_i_reg_961_pp0_iter5_reg;
        exitcond_i_reg_961_pp0_iter7_reg <= exitcond_i_reg_961_pp0_iter6_reg;
        exitcond_i_reg_961_pp0_iter8_reg <= exitcond_i_reg_961_pp0_iter7_reg;
        exitcond_i_reg_961_pp0_iter9_reg <= exitcond_i_reg_961_pp0_iter8_reg;
        isneg_reg_1032_pp0_iter33_reg <= isneg_reg_1032;
        tmp_9_i_reg_1042_pp0_iter33_reg <= tmp_9_i_reg_1042;
        tmp_i_i_i_i_reg_1026_pp0_iter33_reg <= tmp_i_i_i_i_reg_1026;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_956 <= i_V_fu_230_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_reg_961_pp0_iter30_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sum_reg_1015 <= grp_fu_203_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_reg_961_pp0_iter14_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t1_reg_1000 <= grp_fu_208_p2;
        t2_reg_1005 <= grp_fu_213_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_reg_961 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_102_reg_970 <= src1_data_stream_V_dout;
        tmp_103_reg_975 <= src2_data_stream_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_reg_961_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_43_i_reg_990 <= grp_fu_218_p1;
        tmp_45_i_reg_995 <= grp_fu_221_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_reg_961_pp0_iter22_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_46_i_reg_1010 <= grp_fu_199_p2;
    end
end

always @ (*) begin
    if ((exitcond_i_fu_236_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond4_i_fu_224_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_i_reg_961_pp0_iter33_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        dst_data_stream_V_blk_n = dst_data_stream_V_full_n;
    end else begin
        dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_i_reg_961_pp0_iter33_reg == 1'd0) & (ap_enable_reg_pp0_iter34 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dst_data_stream_V_write = 1'b1;
    end else begin
        dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_199_ce = 1'b1;
    end else begin
        grp_fu_199_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_203_ce = 1'b1;
    end else begin
        grp_fu_203_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_208_ce = 1'b1;
    end else begin
        grp_fu_208_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_213_ce = 1'b1;
    end else begin
        grp_fu_213_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_218_ce = 1'b1;
    end else begin
        grp_fu_218_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_221_ce = 1'b1;
    end else begin
        grp_fu_221_ce = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond4_i_fu_224_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((exitcond_i_reg_961 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        src1_data_stream_V_blk_n = src1_data_stream_V_empty_n;
    end else begin
        src1_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_i_reg_961 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src1_data_stream_V_read = 1'b1;
    end else begin
        src1_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_i_reg_961 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        src2_data_stream_V_blk_n = src2_data_stream_V_empty_n;
    end else begin
        src2_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_i_reg_961 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src2_data_stream_V_read = 1'b1;
    end else begin
        src2_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond4_i_fu_224_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((exitcond_i_fu_236_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter33 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter34 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter33 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter34 == 1'b1)) | ((exitcond_i_fu_236_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_2_cast_i_fu_359_p1 = F2_2_fu_354_p3;

assign F2_2_fu_354_p3 = ((tmp_i2_reg_1057[0:0] === 1'b1) ? F2_reg_1048 : tmp_2_i_reg_1064);

assign F2_fu_301_p2 = (12'd1075 - tmp_7_i1_fu_291_p1);

assign Range1_all_ones_1_fu_616_p2 = (tmp_18_i_fu_576_p2 & tmp6_fu_610_p2);

assign Range1_all_ones_2_i_fu_809_p2 = (carry_1_i_i_reg_1107 & Range1_all_ones_2_i_s_fu_780_p3);

assign Range1_all_ones_2_i_s_fu_780_p3 = ((or_cond117_i_i_fu_757_p2[0:0] === 1'b1) ? Range1_all_ones_reg_1137 : sel_tmp35_i_fu_775_p3);

assign Range1_all_ones_fu_678_p2 = (Range2_all_ones_1_i_s_fu_670_p3 & Range1_all_ones_1_fu_616_p2);

assign Range1_all_zeros_1_fu_696_p2 = ((p_Val2_s_fu_347_p3 == 54'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_2_i_fu_794_p3 = ((or_cond117_i_i_fu_757_p2[0:0] === 1'b1) ? p_122_i_i_fu_766_p2 : sel_tmp39_i_fu_787_p3);

assign Range1_all_zeros_fu_761_p2 = (1'd1 ^ Range1_all_ones_1_reg_1126);

assign Range2_V_1_fu_652_p2 = p_Val2_s_fu_347_p3 >> tmp_24_i_fu_648_p1;

assign Range2_all_ones_1_i_s_fu_670_p3 = ((or_cond115_i_i_fu_642_p2[0:0] === 1'b1) ? Range2_all_ones_fu_664_p2 : rev4_fu_630_p2);

assign Range2_all_ones_fu_664_p2 = ((Range2_V_1_fu_652_p2 == r_V_fu_658_p2) ? 1'b1 : 1'b0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((exitcond_i_reg_961_pp0_iter33_reg == 1'd0) & (dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((exitcond_i_reg_961 == 1'd0) & (src2_data_stream_V_empty_n == 1'b0)) | ((exitcond_i_reg_961 == 1'd0) & (src1_data_stream_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((exitcond_i_reg_961_pp0_iter33_reg == 1'd0) & (dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((exitcond_i_reg_961 == 1'd0) & (src2_data_stream_V_empty_n == 1'b0)) | ((exitcond_i_reg_961 == 1'd0) & (src1_data_stream_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((exitcond_i_reg_961_pp0_iter33_reg == 1'd0) & (dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((exitcond_i_reg_961 == 1'd0) & (src2_data_stream_V_empty_n == 1'b0)) | ((exitcond_i_reg_961 == 1'd0) & (src1_data_stream_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state37_pp0_stage0_iter34 = ((exitcond_i_reg_961_pp0_iter33_reg == 1'd0) & (dst_data_stream_V_full_n == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = (((exitcond_i_reg_961 == 1'd0) & (src2_data_stream_V_empty_n == 1'b0)) | ((exitcond_i_reg_961 == 1'd0) & (src1_data_stream_V_empty_n == 1'b0)));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign brmerge_i_fu_877_p2 = (underflow_not_i_fu_859_p2 | p_121_demorgan_i_not_s_fu_871_p2);

assign brmerge_i_i_not_i_fu_865_p2 = (underflow_not_i_fu_859_p2 & p_121_demorgan_i_i_fu_853_p2);

assign carry_1_i_i_fu_552_p2 = (tmp5_fu_546_p2 & sel_tmp3_i_fu_496_p2);

assign deleted_zeros_fu_802_p3 = ((carry_1_i_i_reg_1107[0:0] === 1'b1) ? Range1_all_ones_2_i_s_fu_780_p3 : Range1_all_zeros_2_i_fu_794_p3);

assign dst_data_stream_V_din = ((sel_tmp56_i_fu_937_p2[0:0] === 1'b1) ? p_Val2_12_0_i_mux_i_fu_883_p3 : sel_tmp52_i_fu_918_p3);

assign exitcond4_i_fu_224_p2 = ((t_V_reg_177 == 9'd480) ? 1'b1 : 1'b0);

assign exitcond_i_fu_236_p2 = ((t_V_4_reg_188 == 10'd752) ? 1'b1 : 1'b0);

assign grp_fu_218_p0 = tmp_102_reg_970;

assign grp_fu_221_p0 = tmp_103_reg_975;

assign i_V_fu_230_p2 = (t_V_reg_177 + 9'd1);

assign icmp_fu_383_p2 = ((tmp_93_fu_373_p4 == 9'd0) ? 1'b1 : 1'b0);

assign j_V_fu_242_p2 = (t_V_4_reg_188 + 10'd1);

assign lD_fu_606_p1 = tmp_21_i_fu_600_p2[0:0];

assign loc_V_1_fu_269_p1 = p_Val2_11_fu_256_p1[51:0];

assign loc_V_fu_259_p4 = {{p_Val2_11_fu_256_p1[62:52]}};

assign man_V_1_fu_341_p2 = (54'd0 - p_Result_s_fu_337_p1);

assign newsignbit_fu_749_p3 = p_Val2_14_fu_742_p3[32'd7];

assign not_sel_tmp28_i_fu_540_p2 = (tmp_8_not_i_fu_534_p2 | sel_tmp12_demorgan_i_fu_530_p2);

assign or_cond115_i_i_fu_642_p2 = (tmp_23_i_fu_636_p2 & rev4_fu_630_p2);

assign or_cond117_i_i_fu_757_p2 = (tmp_23_i_reg_1132 & rev_reg_1119);

assign p_119_i_i_fu_771_p2 = (rev_reg_1119 | Range1_all_zeros_1_reg_1147);

assign p_121_demorgan_i_i_fu_853_p2 = (tmp8_fu_848_p2 | deleted_zeros_fu_802_p3);

assign p_121_demorgan_i_not_s_fu_871_p2 = (p_121_demorgan_i_i_fu_853_p2 ^ 1'd1);

assign p_122_i_i_fu_766_p2 = (tmp_25_i_reg_1142 & Range1_all_zeros_fu_761_p2);

assign p_Result_s_fu_337_p1 = tmp_1_i_fu_330_p3;

assign p_Val2_0_i_i6_i_fu_403_p3 = ((isneg_reg_1032[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign p_Val2_11_fu_256_p1 = sum_reg_1015;

assign p_Val2_12_0_i_mux_i_fu_883_p3 = ((brmerge_i_i_not_i_fu_865_p2[0:0] === 1'b1) ? p_Val2_14_fu_742_p3 : 8'd255);

assign p_Val2_12_fu_410_p3 = ((tmp_5_i3_fu_367_p2[0:0] === 1'b1) ? tmp_94_fu_399_p1 : p_Val2_0_i_i6_i_fu_403_p3);

assign p_Val2_13_fu_459_p2 = (tmp_16_i_fu_455_p1 + p_Val2_12_fu_410_p3);

assign p_Val2_14_fu_742_p3 = ((sel_tmp13_i_fu_737_p2[0:0] === 1'b1) ? tmp_13_i_fu_727_p2 : sel_tmp9_i_reg_1097);

assign p_Val2_s_fu_347_p3 = ((isneg_reg_1032[0:0] === 1'b1) ? man_V_1_fu_341_p2 : p_Result_s_fu_337_p1);

assign pos1_cast_i_fu_563_p1 = pos1_fu_558_p2;

assign pos1_fu_558_p2 = (12'd8 + F2_reg_1048);

assign pos2_cast_i_fu_572_p1 = pos2_fu_567_p2;

assign pos2_fu_567_p2 = (12'd9 + F2_reg_1048);

assign qb_fu_440_p3 = ((tmp_14_i_fu_418_p2[0:0] === 1'b1) ? isneg_reg_1032 : tmp_95_fu_432_p3);

assign r_V_fu_658_p2 = 54'd18014398509481983 >> tmp_24_i_fu_648_p1;

assign rev4_fu_630_p2 = (tmp_101_fu_622_p3 ^ 1'd1);

assign rev_fu_590_p2 = (tmp_99_fu_582_p3 ^ 1'd1);

assign sel_tmp12_demorgan_i_fu_530_p2 = (tmp_i2_reg_1057 | tmp_3_i_reg_1069);

assign sel_tmp12_i_fu_732_p2 = (sel_tmp12_demorgan_i_reg_1102 ^ 1'd1);

assign sel_tmp13_i_fu_737_p2 = (sel_tmp12_i_fu_732_p2 & icmp_reg_1092);

assign sel_tmp1_i_fu_486_p2 = (tmp_3_i_reg_1069 ^ 1'd1);

assign sel_tmp2_i_fu_491_p2 = (tmp_i2_reg_1057 & sel_tmp1_i_fu_486_p2);

assign sel_tmp33_i_fu_708_p2 = (tmp_99_fu_582_p3 | tmp_23_i_not_fu_702_p2);

assign sel_tmp34_i_fu_714_p2 = (tmp_27_i_fu_690_p2 & sel_tmp33_i_fu_708_p2);

assign sel_tmp35_i_fu_775_p3 = ((sel_tmp34_i_reg_1152[0:0] === 1'b1) ? Range1_all_ones_1_reg_1126 : rev_reg_1119);

assign sel_tmp39_i_fu_787_p3 = ((sel_tmp34_i_reg_1152[0:0] === 1'b1) ? Range1_all_zeros_fu_761_p2 : p_119_i_i_fu_771_p2);

assign sel_tmp3_i_fu_496_p2 = (tmp_96_fu_447_p3 & sel_tmp2_i_fu_491_p2);

assign sel_tmp41_i_fu_820_p2 = (tmp_18_i_reg_1113 ^ 1'd1);

assign sel_tmp46_i_fu_831_p2 = (tmp7_fu_825_p2 & isneg_reg_1032_pp0_iter33_reg);

assign sel_tmp47_i_fu_836_p2 = (tmp_18_i_reg_1113 & isneg_reg_1032_pp0_iter33_reg);

assign sel_tmp4_i_fu_502_p3 = ((sel_tmp3_i_fu_496_p2[0:0] === 1'b1) ? p_Val2_13_fu_459_p2 : sel_tmp_i_fu_479_p3);

assign sel_tmp50_i_demorgan_fu_891_p2 = (tmp_i_i_i_i_reg_1026_pp0_iter33_reg & tmp_i_i_i_i_109_reg_1076);

assign sel_tmp50_i_fu_895_p2 = (sel_tmp50_i_demorgan_fu_891_p2 ^ 1'd1);

assign sel_tmp51_i_fu_901_p2 = (tmp_9_i_reg_1042_pp0_iter33_reg & sel_tmp50_i_fu_895_p2);

assign sel_tmp52_i_fu_918_p3 = ((tmp_40_fu_912_p2[0:0] === 1'b1) ? 8'd0 : p_Val2_14_fu_742_p3);

assign sel_tmp55_demorgan_i_fu_926_p2 = (tmp_demorgan_i_fu_720_p2 | tmp_9_i_reg_1042_pp0_iter33_reg);

assign sel_tmp55_i_fu_931_p2 = (sel_tmp55_demorgan_i_fu_926_p2 ^ 1'd1);

assign sel_tmp56_i_fu_937_p2 = (sel_tmp55_i_fu_931_p2 & brmerge_i_fu_877_p2);

assign sel_tmp7_i_fu_510_p2 = (tmp_96_fu_447_p3 ^ 1'd1);

assign sel_tmp8_i_fu_516_p2 = (sel_tmp7_i_fu_510_p2 & sel_tmp2_i_fu_491_p2);

assign sel_tmp9_i_fu_522_p3 = ((sel_tmp8_i_fu_516_p2[0:0] === 1'b1) ? p_Val2_13_fu_459_p2 : sel_tmp4_i_fu_502_p3);

assign sel_tmp_i_fu_479_p3 = ((tmp_3_i_reg_1069[0:0] === 1'b1) ? tmp_92_fu_363_p1 : 8'd0);

assign start_out = real_start;

assign tmp5_fu_546_p2 = (tmp_17_i_fu_473_p2 & not_sel_tmp28_i_fu_540_p2);

assign tmp6_fu_610_p2 = (rev_fu_590_p2 & lD_fu_606_p1);

assign tmp7_fu_825_p2 = (sel_tmp41_i_fu_820_p2 & newsignbit_fu_749_p3);

assign tmp8_fu_848_p2 = (sel_tmp41_i_fu_820_p2 | isneg_reg_1032_pp0_iter33_reg);

assign tmp_101_fu_622_p3 = pos2_fu_567_p2[32'd11];

assign tmp_10_i_fu_389_p1 = $unsigned(F2_2_cast_i_fu_359_p1);

assign tmp_11_i_fu_393_p2 = $signed(p_Val2_s_fu_347_p3) >>> tmp_10_i_fu_389_p1;

assign tmp_13_i_fu_727_p2 = tmp_92_reg_1087 << tmp_91_fu_724_p1;

assign tmp_14_i_fu_418_p2 = (($signed(F2_reg_1048) > $signed(12'd54)) ? 1'b1 : 1'b0);

assign tmp_15_i_fu_423_p2 = ($signed(12'd4095) + $signed(F2_reg_1048));

assign tmp_16_i_fu_455_p1 = qb_fu_440_p3;

assign tmp_17_i_fu_473_p2 = (tmp_97_fu_465_p3 ^ 1'd1);

assign tmp_18_i_fu_576_p2 = (($signed(pos1_fu_558_p2) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign tmp_1_i_fu_330_p3 = {{1'd1}, {loc_V_1_reg_1020}};

assign tmp_20_i_fu_596_p1 = $unsigned(pos1_cast_i_fu_563_p1);

assign tmp_21_i_fu_600_p2 = $signed(p_Val2_s_fu_347_p3) >>> tmp_20_i_fu_596_p1;

assign tmp_23_i_fu_636_p2 = (($signed(pos2_fu_567_p2) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign tmp_23_i_not_fu_702_p2 = (tmp_23_i_fu_636_p2 ^ 1'd1);

assign tmp_24_i_fu_648_p1 = $unsigned(pos2_cast_i_fu_572_p1);

assign tmp_25_cast_i_fu_428_p1 = tmp_15_i_fu_423_p2;

assign tmp_25_i_fu_684_p2 = ((Range2_V_1_fu_652_p2 == 54'd0) ? 1'b1 : 1'b0);

assign tmp_27_i_fu_690_p2 = ((pos2_fu_567_p2 == 12'd54) ? 1'b1 : 1'b0);

assign tmp_28_i_fu_814_p2 = (1'd1 ^ Range1_all_ones_2_i_fu_809_p2);

assign tmp_2_i_fu_313_p2 = (12'd0 - F2_fu_301_p2);

assign tmp_3_i_fu_319_p2 = ((loc_V_fu_259_p4 == 11'd1075) ? 1'b1 : 1'b0);

assign tmp_40_fu_912_p2 = (underflow_fu_840_p3 | tmp_s_fu_906_p2);

assign tmp_5_i3_fu_367_p2 = ((F2_2_fu_354_p3 < 12'd54) ? 1'b1 : 1'b0);

assign tmp_7_i1_fu_291_p1 = loc_V_fu_259_p4;

assign tmp_8_not_i_fu_534_p2 = (icmp_fu_383_p2 ^ 1'd1);

assign tmp_91_fu_724_p1 = F2_2_reg_1082[7:0];

assign tmp_92_fu_363_p1 = p_Val2_s_fu_347_p3[7:0];

assign tmp_93_fu_373_p4 = {{F2_2_fu_354_p3[11:3]}};

assign tmp_94_fu_399_p1 = tmp_11_i_fu_393_p2[7:0];

assign tmp_95_fu_432_p3 = p_Val2_s_fu_347_p3[tmp_25_cast_i_fu_428_p1];

assign tmp_96_fu_447_p3 = p_Val2_12_fu_410_p3[32'd7];

assign tmp_97_fu_465_p3 = p_Val2_13_fu_459_p2[32'd7];

assign tmp_99_fu_582_p3 = pos1_fu_558_p2[32'd11];

assign tmp_9_i_fu_295_p2 = ((tmp_fu_279_p1 == 63'd0) ? 1'b1 : 1'b0);

assign tmp_demorgan_i_fu_720_p2 = (tmp_i_i_i_i_reg_1026_pp0_iter33_reg & tmp_i_i_i_i_109_reg_1076);

assign tmp_fu_279_p1 = p_Val2_11_fu_256_p1[62:0];

assign tmp_i2_fu_307_p2 = (($signed(F2_fu_301_p2) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign tmp_i_i_i_i_109_fu_325_p2 = ((loc_V_1_reg_1020 != 52'd0) ? 1'b1 : 1'b0);

assign tmp_i_i_i_i_fu_273_p2 = ((loc_V_fu_259_p4 == 11'd2047) ? 1'b1 : 1'b0);

assign tmp_s_fu_906_p2 = (tmp_demorgan_i_fu_720_p2 | sel_tmp51_i_fu_901_p2);

assign underflow_fu_840_p3 = ((sel_tmp47_i_fu_836_p2[0:0] === 1'b1) ? tmp_28_i_fu_814_p2 : sel_tmp46_i_fu_831_p2);

assign underflow_not_i_fu_859_p2 = (underflow_fu_840_p3 ^ 1'd1);

endmodule //AddWeighted
